{"version":3,"sources":["MainApp.js","App.js","components/General/Datapoints.js","components/Bar/BarType.js","components/Line/LineType.js","components/MusicSelect.js","components/SwitchMicMusic.js","components/General/FreqSelect.js","components/MusicFromLink.js","components/BehindCanvas.js","components/Error.js","components/General/BackgroundColor.js","components/General/SoundRange.js","components/General/Height.js","components/Bar/BarMargin.js","components/General/LineColor.js","components/General/LineWeight.js","components/Line/LineFill.js","components/General/BarColor.js","components/Line/LineCircleSize.js","components/Line/LineCircleShow.js","components/General/Clipping.js","components/Selection.js","components/Share.js","components/Footer.js","reportWebVitals.js","index.js","components/service.js"],"names":["MainApp","useState","reload","setReload","isVisible","usePageVisibility","localStorage","getItem","split","inputs","setInputs","window","addEventListener","global","refreshCanvas","theme","createTheme","palette","type","className","style","textDecoration","color","href","src","title","id","float","variant","marginBottom","onClick","target","URL","revokeObjectURL","clear","setItem","Number","textAlign","marginTop","App","path","component","v","URLSearchParams","location","search","get","getYtLink","err","url","mp3","history","pushState","document","exact","Error","Datapoints","classes","formControl","shrink","getAriaValueText","value","valueLabelDisplay","step","marks","label","min","max","defaultValue","onBlur","BarType","React","diagram","setDiagram","labelId","onChange","event","displayEmpty","selectEmpty","LineType","MusicSelect","setFileName","Input","styled","display","htmlFor","e","file","files","startsWith","name","createObjectURL","removeItem","console","log","manageChange","SwitchMicMusic","micOrSound","setMicOrSound","FreqSelect","freq","setFreq","parseInt","InputLabelProps","MusicFromLink","youtube_parser","match","length","placeholder","link","BehindCanvas","percent","setPercent","marginLeft","fontSize","to","BackgroundColor","FormControl","InputLabel","undefined","SoundRange","first","last","setValue","Slider","newValue","Height","BarMargin","margin","setMargin","TextField","LineColor","LineWeight","lWeight","setLWeight","LineFill","checked","setChecked","vis","FormControlLabel","control","Checkbox","FillColor","LineCircleSize","lCircleSize","setLCircleSize","LineCircleShow","Clipping","useStyles","makeStyles","spacing","minWidth","Selection","Share","shareUrl","EmailShareButton","EmailIcon","size","round","FacebookShareButton","FacebookIcon","FacebookMessengerShareButton","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","RedditShareButton","RedditIcon","LinkedinShareButton","LinkedinIcon","TelegramShareButton","TelegramIcon","TumblrShareButton","TumblrIcon","HatenaShareButton","HatenaIcon","Footer","bS","setBS","maxWidth","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","done","a","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","onerror","response","send"],"mappings":"2PAiJeA,IApIf,WACI,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAYC,cAClB,EAA4BJ,mBAAgD,kBAAhCK,aAAaC,QAAQ,OAAsBD,aAAaC,QAAQ,OAAOC,MAAM,KAAO,CAAC,EAAG,OAAQ,SAA5I,mBAAOC,EAAP,KAAeC,EAAf,KAEAC,OAAOC,iBAAiB,WAAW,WACY,kBAAvCN,aAAaC,QAAQ,eACrBG,EAAiD,kBAAhCJ,aAAaC,QAAQ,OAAsBD,aAAaC,QAAQ,OAAOC,MAAM,KAAO,CAAC,EAAG,OAAQ,YAIzHK,EAAOC,cAAgB,WACnBX,EAAUD,EAAS,IAGvB,IAAMa,EAAQC,YAAY,CACtBC,QAAS,CACLC,KAAM,UAId,OAAId,GAAkD,UAArCE,aAAaC,QAAQ,YAE9B,sBAAKY,UAAU,MAAf,UACI,6BAAI,mBAAGC,MAAO,CAACC,eAAgB,OAAQC,MAAO,WAAYC,KAAK,8BAA3D,gCAEJ,sBAAKJ,UAAU,gBAAf,UACI,wBAAQK,IAAI,yBAAyBC,MAAOvB,IAC5C,cAAC,IAAD,MAFgCA,GAIpC,eAAC,IAAD,CAAea,MAAOA,EAAtB,UACI,qBAAKI,UAAU,4BAAf,SACI,sBAAKO,GAAG,cAAR,UACI,sBAAKN,MAAO,CAACO,MAAO,SAApB,UACI,cAAC,IAAD,CAAQR,UAAU,gBAAgBS,QAAQ,WAClCR,MAAO,CAACS,aAAc,QACtBC,QAAS,kBAAM3B,EAAUD,EAAS,IAF1C,2BADJ,OAKI,cAAC,IAAD,CAAQiB,UAAU,gBAAgBS,QAAQ,WAClCR,MAAO,CAACS,aAAc,QACtBN,KAAK,cAAcQ,OAAO,SAFlC,4CALJ,OAUI,cAAC,IAAD,CAAQZ,UAAU,gBAAgBS,QAAQ,WAClCR,MAAO,CAACS,aAAc,QACtBC,QAAS,WACL3B,EAAUD,EAAS,GACuB,OAAtCI,aAAaC,QAAQ,cACrByB,IAAIC,gBAAgB3B,aAAaC,QAAQ,cAE7CD,aAAa4B,SAPzB,mCAUqC,OAAvC5B,aAAaC,QAAQ,eAAiE,QAAvCD,aAAaC,QAAQ,eAAkE,kBAAvCD,aAAaC,QAAQ,gBACtH,iGAEwC,UAAvCD,aAAaC,QAAQ,eACtB,oFACyC,kBAAvCD,aAAaC,QAAQ,eAA2E,SAAtCD,aAAaC,QAAQ,cACjF,uFACyC,kBAAvCD,aAAaC,QAAQ,eAA2E,SAAtCD,aAAaC,QAAQ,cACjF,oFAEA,0CAGR,qBAAKY,UAAU,gBAAf,SACI,sBAAKO,GAAG,cAAR,UAC4C,kBAAvCpB,aAAaC,QAAQ,eACtB,cAAC,IAAD,CAAQY,UAAU,gBAAgBS,QAAQ,WAAWR,MAAO,CAACS,aAAc,QACnEC,QAAS,WACL3B,EAAUD,EAAS,GACnBI,aAAa6B,QAAQ,aAAc,kBAH/C,uCAFJ,QAW6C,kBAAvC7B,aAAaC,QAAQ,eAA2E,SAAtCD,aAAaC,QAAQ,eACjF,cAAC,IAAD,CAAQY,UAAU,gBAAgBS,QAAQ,WAAWR,MAAO,CAACS,aAAc,QACnEC,QAAS,WACL3B,EAAUD,EAAS,GACnBI,aAAa6B,QAAQ,aAAc,iBACnC7B,aAAa6B,QAAQ,YAAa,SAJ9C,iCAZJ,QAsBkH,KAArE,kBAAvC7B,aAAaC,QAAQ,eAA2E,SAAtCD,aAAaC,QAAQ,eACjF,cAAE,IAAF,CAASY,UAAU,gBAAgBS,QAAQ,WAAWR,MAAO,CAACS,aAAc,QACnEC,QAAS,WACL3B,EAAUD,EAAS,GACnBI,aAAa6B,QAAQ,aAAc,iBACnC7B,aAAa6B,QAAQ,YAAa,UAJ/C,4BAvBJ,OAiC4C,kBAAvC7B,aAAaC,QAAQ,eAA2E,UAAtCD,aAAaC,QAAQ,cAChF,cAAC,IAAD,IAEA,cAAC,IAAD,GAAkB,IAAML,GACxB,cAAC,IAAD,GAAoB,MAAQA,GAC5B,cAAC,IAAD,GAAqB,IAAMA,GACa,UAAvCI,aAAaC,QAAQ,eAA6B,4CACxCD,aAAaC,QAAQ,gBACQ,kBAAvCD,aAAaC,QAAQ,cAAoC,qCAAE,iGAEf,gDAAuB,uCACrDE,EAAO,GAD8C,kBAC3B2B,OAAO3B,EAAO,IAAM,GAAK,gDACtC,IAAbA,EAAO,GAAWA,EAAO,GAAK,QADqB,QACM,IAAbA,EAAO,GAAWA,EAAO,GAAK,OADvB,+BAK9D,mBAAGU,UAAU,cAAb,uBAGZ,qBAAKA,UAAU,gBAAf,SACI,cAAC,IAAD,GAAgB,IAAMjB,WAM/B,qBAAKkB,MAAO,CAACE,MAAO,QAASe,UAAW,SAAUC,UAAW,QAA7D,SACH,8DAAgC,mBAAGf,KAAK,IAAR,kBAAhC,qB,oDC5IZ,uEA4CegB,IArCf,WAyBI,OACI,+BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UA1BR,WAChB,IACMC,EADc,IAAIC,gBAAgBhC,OAAOiC,SAASC,QAClCC,IAAI,KAa1B,OAXAC,YAAUL,GAAG,SAACM,EAAKC,GACf,GAAID,EACA,MAAMA,EAEV1C,aAAa6B,QAAQ,aAAc,SACnC7B,aAAa6B,QAAQ,YAAac,EAAIxB,OACtCnB,aAAa6B,QAAQ,SAAUc,EAAIC,KACnCvC,OAAOwC,QAAQC,UAAU,GAAIC,SAAS5B,MAAO,KAC7CZ,EAAOC,mBAIP,qCACI,cAAC,IAAD,IACA,cAAC,IAAD,QAQwCwC,OAAK,IAC7C,cAAC,IAAD,CAAOd,KAAK,QAAQC,UAAWzC,MAC/B,cAAC,IAAD,CAAOyC,UAAWc,c,oDCrClC,sDAqDeC,IA/CI,SAACC,GAwBhB,OACI,eAAC,IAAD,CAAatC,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC,IAAD,CAAYC,QAAM,EAACjC,GAAG,6CAAtB,kCAGA,cAAC,IAAD,CAAQN,MAAO,CAACkB,UAAW,QACnBsB,iBA3BU,SAACC,GACnBvD,aAAaC,QAAQ,gBAAkBsD,GACvCvD,aAAa6B,QAAQ,cAAe0B,IA0B5B,kBAAgB,kBAChBC,kBAAkB,OAClBC,KAAM,EACNC,MAzBF,CACV,CACIH,MAAO,EACPI,MAAO,YAEX,CACIJ,MAAO,EACPI,MAAO,YAEX,CACIJ,MAAO,GACPI,MAAO,cAeCC,IAAK,EACLC,IAAK,GACLC,aAAsD,OAAxC9D,aAAaC,QAAQ,eAA0B,EAAID,aAAaC,QAAQ,eACtF8D,OAAQ,WACJxD,EAAOC,yB,qICahBwD,IApDC,SAACb,GACb,MAA8Bc,IAAMtE,SAAyC,OAAhCK,aAAaC,QAAQ,QAAmD,SAAhCD,aAAaC,QAAQ,OAAoB,GAAKD,aAAaC,QAAQ,QAAxJ,mBAAOiE,EAAP,KAAgBC,EAAhB,KA2BA,OACI,eAAC,IAAD,CAAatD,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC,IAAD,CAAYC,QAAM,EAACjC,GAAG,6CAAtB,0BAGA,eAAC,IAAD,CACIgD,QAAQ,6CACRhD,GAAG,uCACHmC,MAAOW,EACPG,SAlCU,SAACC,GAGnB,OAFAH,EAAWG,EAAM7C,OAAO8B,OACxBvD,aAAa6B,QAAQ,OAAQ,OACrByC,EAAM7C,OAAO8B,OACjB,IAAK,GACDvD,aAAa6B,QAAQ,MAAO,QAC5B,MACJ,IAAK,aACD7B,aAAa6B,QAAQ,MAAO,cAC5B,MACJ,IAAK,WACD7B,aAAa6B,QAAQ,MAAO,YAC5B,MACJ,IAAK,aACD7B,aAAa6B,QAAQ,MAAO,cAC5B,MACJ,IAAK,aACD7B,aAAa6B,QAAQ,MAAO,cAC5B,MACJ,QACI7B,aAAa6B,QAAQ,MAAO,QAEpCtB,EAAOC,iBAaC+D,cAAY,EACZ1D,UAAWsC,EAAQqB,YANvB,UAQI,cAAC,IAAD,CAAUjB,MAAO,GAAjB,kBACA,cAAC,IAAD,CAAUA,MAAO,aAAjB,yBACA,cAAC,IAAD,CAAUA,MAAO,WAAjB,sBACA,cAAC,IAAD,CAAUA,MAAO,aAAjB,oBACA,cAAC,IAAD,CAAUA,MAAO,aAAjB,kC,qICUDkB,IAvDE,SAACtB,GACd,MAA8Bc,IAAMtE,UAEpC,WACI,OAAoC,OAAhCK,aAAaC,QAAQ,OACd,OACgC,SAAhCD,aAAaC,QAAQ,OACrB,GAEAD,aAAaC,QAAQ,UARpC,mBAAOiE,EAAP,KAAgBC,EAAhB,KAgCA,OACI,eAAC,IAAD,CAAatD,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC,IAAD,CAAYC,QAAM,EAACjC,GAAG,6CAAtB,2BAGA,eAAC,IAAD,CACIgD,QAAQ,6CACRhD,GAAG,uCACHmC,MAAOW,EACPG,SA5BU,SAACC,GAGnB,OAFAH,EAAWG,EAAM7C,OAAO8B,OACxBvD,aAAa6B,QAAQ,OAAQ,QACrByC,EAAM7C,OAAO8B,OACjB,IAAK,GACDvD,aAAa6B,QAAQ,MAAO,QAC5B,MACJ,IAAK,cACD7B,aAAa6B,QAAQ,MAAO,eAC5B,MACJ,IAAK,kBACD7B,aAAa6B,QAAQ,MAAO,mBAC5B,MACJ,QACI7B,aAAa6B,QAAQ,MAAO,QAEpCtB,EAAOC,iBAaC+D,cAAY,EACZ1D,UAAWsC,EAAQqB,YANvB,UAQI,cAAC,IAAD,CAAUjB,MAAO,GAAjB,kBACA,cAAC,IAAD,CAAUA,MAAO,cAAjB,oBACA,cAAC,IAAD,CAAUA,MAAO,kBAAjB,sC,2GCFDmB,IA7CK,WAChB,MAAgC/E,mBAA+C,OAAtCK,aAAaC,QAAQ,aAAwB,GAAKD,aAAaC,QAAQ,cAAhH,mBAAiB0E,GAAjB,WACA,EAAoChF,mBAAgD,OAAvCK,aAAaC,QAAQ,cAAyB,MAAQD,aAAaC,QAAQ,eAAxH,mBAoBM2E,GApBN,UAoBcC,YAAO,QAAPA,CAAgB,CAC1BC,QAAS,UAEb,MAAqC,kBAAjC9E,aAAaC,QAAQ,QAEjB,mCACI,wBAAO8E,QAAQ,wBAAwBlE,UAAU,mBAC1CC,MAAO,CAACS,aAAc,QAD7B,UAEI,cAACqD,EAAD,CAAOxD,GAAG,wBAAwBR,KAAK,OAChCyD,SAAU,SAAAW,GAAC,OA3Bb,SAACA,GAClB,IAAIC,EAAOD,EAAEvD,OAAOyD,MAAM,IACtBD,EAAKrE,MAASqE,EAAKrE,KAAKuE,WAAW,WAIvCR,EAAYM,EAAKG,MACyB,OAAtCpF,aAAaC,QAAQ,cACrByB,IAAIC,gBAAgB3B,aAAaC,QAAQ,cAE7CD,aAAa6B,QAAQ,YAAaH,IAAI2D,gBAAgBJ,IACtDjF,aAAa6B,QAAQ,YAAaoD,EAAKG,MACvCpF,aAAa6B,QAAQ,aAAc,SACnC7B,aAAasF,WAAW,UACxB/E,EAAOC,iBAXH+E,QAAQC,IAAI,6BAA8BP,EAAKrE,KAAMqE,GAwBvBQ,CAAaT,MACnC,cAAC,IAAD,CAAQnE,UAAU,gBAAgBC,MAAO,CAACS,aAAc,QAASD,QAAQ,WACjEa,UAAU,OADlB,yBAJJ,YAaD,gC,kGClBAuD,IA1BQ,WACnB,MAAoC/F,mBAAgD,OAAvCK,aAAaC,QAAQ,cAAyB,MAAQD,aAAaC,QAAQ,eAAxH,mBAAO0F,EAAP,KAAmBC,EAAnB,KAOA,MAAmB,kBAAfD,GAAiD,kBAAfA,GAAiD,UAAfA,EAEhE,wBAAO9E,UAAU,mBAAjB,UACI,cAAC,IAAD,CAAQA,UAAU,gBAAgBC,MAAO,CAACS,aAAc,QAASD,QAAQ,WACjEa,UAAU,OAAOX,QATjB,WAChBoE,EAAc,OACd5F,aAAa6B,QAAQ,aAAc,OACnCtB,EAAOC,iBAKC,6CADJ,UAUA,gC,6FCmBGqF,IAtCI,SAAC1C,GAEhB,MAAwBxD,mBAA0C,OAAjCK,aAAaC,QAAQ,QAAmB,GAAKD,aAAaC,QAAQ,SAAnG,mBAAO6F,EAAP,KAAaC,EAAb,KA4BA,OACI,cAAC,IAAD,CAAalF,UAAW,QAAUsC,EAAQC,YAA1C,SACI,cAAC,IAAD,CAAWxC,KAAK,SAASQ,GAAG,kBAAkBuC,MAAM,YAAYJ,MAAOuC,EAAMzB,SA5BlE,SAACW,GAChB,IACQA,EAAEvD,OAAO8B,MAAQ,MACjBwC,EAAQ,MACR/F,aAAa6B,QAAQ,OAAQ,SAEN,KAAnBmD,EAAEvD,OAAO8B,OAAgByB,EAAEvD,OAAO8B,MAAQ,GAC1CwC,EAAQf,EAAEvD,OAAO8B,QAEjBwC,EAAQC,SAAShB,EAAEvD,OAAO8B,QAC1BvD,aAAa6B,QAAQ,OAAQ,GAAKmE,SAAShB,EAAEvD,OAAO8B,SAG9D,MAAOyB,GACLe,EAAQ,GACR/F,aAAa6B,QAAQ,OAAQ,OAclBoE,gBAAiB,CAAC5C,QAAQ,GAAQU,OAVlC,YACF,KAAT+B,GAAeA,EAAO,MACtBC,EAAQ,IACR/F,aAAa6B,QAAQ,OAAQ,c,kCC/BzC,4CAyCeqE,IApCO,WAElB,SAASC,EAAexD,GACpB,IACIyD,EAAQzD,EAAIyD,MADH,6EAEb,SAAQA,GAA6B,KAApBA,EAAM,GAAGC,SAAiBD,EAAM,GAqBrD,OACI,wBAAOvF,UAAU,mBAAmBC,MAAO,CAACS,aAAc,QAA1D,UACI,cAAC,IAAD,CAAWH,GAAG,iBAAiBN,MAAO,CAACS,aAAc,QAAUV,UAAU,gBAC9DyF,YAAY,eAAehF,QAAQ,WACnC+C,SAAU,SAAAW,GAAC,OAtBT,SAACA,GAClB,IAAMuB,EAAOvB,EAAEvD,OAAO8B,MACtB,GAAIgD,EAAKF,OAAS,KAA+B,IAAzBF,EAAeI,GAAiB,CACpD,IAAMnF,EAAK+E,EAAeI,GAE1B9D,YAAUrB,GAAI,SAACsB,EAAKC,GAChB,GAAID,EACA,MAAMA,EAEV1C,aAAa6B,QAAQ,aAAc,SACnC7B,aAAa6B,QAAQ,YAAac,EAAIxB,OACtCnB,aAAa6B,QAAQ,SAAUc,EAAIC,KACnCrC,EAAOC,oBAUeiF,CAAaT,MAH3C,a,6ECCOwB,IA/BM,WACjB,MAA8B7G,mBAAS,IAAvC,mBAAO8G,EAAP,KAAgBC,EAAhB,KAQA,OANArG,OAAOC,iBAAiB,WAAW,WACe,OAA1CN,aAAaC,QAAQ,kBACrByG,EAAW1G,aAAaC,QAAQ,qBAIM,OAA1CD,aAAaC,QAAQ,iBAEjB,sBAAKY,UAAU,kBAAf,oBACY4F,EADZ,OAMA,sBAAK5F,UAAU,kBAAf,2DAEI,+BACI,qDACuC,OAAtCb,aAAaC,QAAQ,aAAwB,6BAAI,+DAC9C,mGACJ,wFACA,sG,iCC1BpB,wBAaegD,IAVD,WACV,OACI,qCACI,mBAAGnC,MAAO,CAAC6F,WAAY,OAAQ3F,MAAO,SAAtC,oCACA,cAAC,IAAD,CAAMF,MAAO,CAAC8F,SAAU,OAAQD,WAAY,OAAQ3F,MAAO,SAAU6F,GAAG,IAAxE,iC,gHC2BGC,EA5BS,SAAC3D,GAErB,IAAInC,EAA4C,OAAnChB,aAAaC,QAAQ,UAAqB,UAAYD,aAAaC,QAAQ,UASxF,OACI,eAAC8G,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC4D,EAAA,EAAD,CAAY3D,QAAM,EAACjC,GAAG,6CAAtB,8BAGA,cAAC,IAAD,CAAaN,MAAO,CAACkB,UAAW,QACnBoD,KAAK,QACLtB,aAAc9C,EAGdqD,SAhBJ,SAACrD,QACAiG,IAAVjG,GAAuBhB,aAAaC,QAAQ,YAAce,GAC1DhB,aAAa6B,QAAQ,SAAUb,U,iBCqC5BkG,EA5CI,SAAC/D,GAChB,IAAMgE,EAA6C,OAArCnH,aAAaC,QAAQ,YAAuB,EAAI6B,OAAO9B,aAAaC,QAAQ,YAAYC,MAAM,KAAK,IAC3GkH,EAA4C,OAArCpH,aAAaC,QAAQ,YAAuB,GAAK6B,OAAO9B,aAAaC,QAAQ,YAAYC,MAAM,KAAK,IAEjH,EAA0B+D,IAAMtE,SAAS,CAACwH,EAAOC,IAAjD,mBAAO7D,EAAP,KAAc8D,EAAd,KAmBA,MAA2C,kBAAvCrH,aAAaC,QAAQ,eAA2E,SAAtCD,aAAaC,QAAQ,aAE3E,eAAC8G,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC4D,EAAA,EAAD,CAAY3D,QAAM,EAACjC,GAAG,6CAAtB,mBAGA,cAACkG,EAAA,EAAD,CAAQxG,MAAO,CAACkB,UAAW,QACnBuB,MAAOA,EACPc,SAzBC,SAACC,EAAOiD,GACzBF,EAASE,GACLvH,aAAaC,QAAQ,aAAesD,GACpCvD,aAAa6B,QAAQ,WAAY0B,IAuBrBC,kBAAkB,OAClB,kBAAgB,eAChBE,MArBN,CACV,CACIH,MAAO,EACPI,MAAO,KAEX,CACIJ,MAAO,IACPI,MAAO,aAmBJ,8BCCA6D,EAxCA,SAACrE,GAoBZ,OACI,eAAC4D,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC4D,EAAA,EAAD,CAAY3D,QAAM,EAACjC,GAAG,6CAAtB,oBAGA,cAACkG,EAAA,EAAD,CAAQxG,MAAO,CAACkB,UAAW,QACnBsB,iBAvBK,SAACC,GACdvD,aAAaC,QAAQ,WAAasD,GAClCvD,aAAa6B,QAAQ,SAAU0B,IAsBvB,kBAAgB,kBAChBC,kBAAkB,OAClBC,KAAM,EACNC,MArBF,CACV,CACIH,MAAO,EACPI,MAAO,KAEX,CACIJ,MAAO,IACPI,MAAO,QAeCC,IAAK,EACLC,IAAK,IACLC,aAAiD,OAAnC9D,aAAaC,QAAQ,UAAqB,GAAKD,aAAaC,QAAQ,gB,QCKvFwH,EAtCG,SAACtE,GAEf,MAA4BxD,mBAA+C,OAAtCK,aAAaC,QAAQ,aAAwB,EAAID,aAAaC,QAAQ,cAA3G,mBAAOyH,EAAP,KAAeC,EAAf,KAyBA,MAAa,SAxBiC,OAAjC3H,aAAaC,QAAQ,QAAmB,MAAQD,aAAaC,QAAQ,SA0B1E,cAAC8G,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,SACI,cAACwE,EAAA,EAAD,CAAWhH,KAAK,SAASQ,GAAG,iBAAiBuC,MAAM,aAAaJ,MAAOmE,EAAQrD,SAzBtE,SAACW,GAClB,IACQA,EAAEvD,OAAO8B,MAAQ,GACjBoE,EAAU,GACV3H,aAAa6B,QAAQ,YAAa,MAC3BmD,EAAEvD,OAAO8B,MAAQ,KACxBoE,EAAU,KACV3H,aAAa6B,QAAQ,YAAa,UAElC8F,EAAU3B,SAAShB,EAAEvD,OAAO8B,QACL,KAAnByB,EAAEvD,OAAO8B,MACTvD,aAAa6B,QAAQ,YAAa,KAElC7B,aAAa6B,QAAQ,YAAa,GAAKmE,SAAShB,EAAEvD,OAAO8B,SAGnE,MAAOyB,GACL2C,EAAU,GACV3H,aAAa6B,QAAQ,YAAa,WAW9B,8BCPDgG,EA3BG,SAAC1E,GAEf,IAAInC,EAA+C,OAAtChB,aAAaC,QAAQ,aAAwB,UAAYD,aAAaC,QAAQ,aAQ3F,OACI,eAAC8G,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC4D,EAAA,EAAD,CAAY3D,QAAM,EAACjC,GAAG,6CAAtB,wBAGA,cAAC,IAAD,CAAaN,MAAO,CAACkB,UAAW,QACnBoD,KAAK,QACLtB,aAAc9C,EAGdqD,SAhBJ,SAACrD,QACAiG,IAAVjG,GAAuBhB,aAAaC,QAAQ,eAAiBe,GAC7DhB,aAAa6B,QAAQ,YAAab,UC4B/B8G,EAlCI,SAAC3E,GAEhB,MAA8BxD,mBAAgD,OAAvCK,aAAaC,QAAQ,cAAyB,EAAID,aAAaC,QAAQ,eAA9G,mBAAO8H,EAAP,KAAgBC,EAAhB,KAyBA,OACI,cAACjB,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,SACI,cAACwE,EAAA,EAAD,CAAWhH,KAAK,SAASQ,GAAG,iBAAiBuC,MAAM,cAAcJ,MAAOwE,EAAS1D,SAzBpE,SAACW,GAClB,IACQA,EAAEvD,OAAO8B,MAAQ,GACjByE,EAAW,GACXhI,aAAa6B,QAAQ,aAAc,MAC5BmD,EAAEvD,OAAO8B,MAAQ,KACxByE,EAAW,KACXhI,aAAa6B,QAAQ,aAAc,UAEnCmG,EAAWhC,SAAShB,EAAEvD,OAAO8B,QACN,KAAnByB,EAAEvD,OAAO8B,MACTvD,aAAa6B,QAAQ,aAAc,KAEnC7B,aAAa6B,QAAQ,aAAc,GAAKmE,SAAShB,EAAEvD,OAAO8B,SAGpE,MAAOyB,GACLgD,EAAW,GACXhI,aAAa6B,QAAQ,aAAc,Y,oCCQhCoG,EA/BE,SAAC9E,GACd,MAA8Bc,IAAMtE,SAA8C,OAArCK,aAAaC,QAAQ,aAA+B,SAAWD,aAAaC,QAAQ,aAAjI,mBAAOiI,EAAP,KAAgBC,EAAhB,KACMC,EAAsC,OAAhCpI,aAAaC,QAAQ,OAAkB,MAAQD,aAAaC,QAAQ,OAOhF,MAAY,SAARmI,GAA0B,gBAARA,EAEd,cAACrB,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,SACI,cAACiF,EAAA,EAAD,CAAkBxH,UAAWsC,EAAQC,YAAatC,MAAO,CAACE,MAAO,WAC/CsH,QACI,cAACC,EAAA,EAAD,CACIL,QAASA,EACT7D,SAZjB,SAACC,GAClB6D,EAAW7D,EAAM7C,OAAOyG,SACxBlI,aAAa6B,QAAQ,WAAYyC,EAAM7C,OAAOyG,UAWZ9C,KAAK,WACLpE,MAAM,YAGd2C,MAAM,WAKxB,8BCMD6E,EA/BG,SAACrF,GAEf,IAAInC,EAA+C,OAAtChB,aAAaC,QAAQ,aAAwB,UAAYD,aAAaC,QAAQ,aACrFmI,EAAsC,OAAhCpI,aAAaC,QAAQ,OAAkB,OAASD,aAAaC,QAAQ,OAOjF,MAAY,eAARmI,GAAgC,oBAARA,EAChB,6BAGJ,eAACrB,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC4D,EAAA,EAAD,CAAY3D,QAAM,EAACjC,GAAG,6CAAtB,wBAGA,cAAC,IAAD,CAAaN,MAAO,CAACkB,UAAW,QACnBoD,KAAK,QACLtB,aAAc9C,EAGdqD,SAlBR,SAACrD,QACAiG,IAAVjG,GAAuBhB,aAAaC,QAAQ,eAAiBe,GAC7DhB,aAAa6B,QAAQ,YAAab,UCgC/ByH,EAvCQ,SAACtF,GAEpB,MAAsCxD,mBAAoD,OAA3CK,aAAaC,QAAQ,kBAA6B,GAAKD,aAAaC,QAAQ,mBAA3H,mBAAOyI,EAAP,KAAoBC,EAApB,KACMP,EAAsC,OAAhCpI,aAAaC,QAAQ,OAAkB,OAASD,aAAaC,QAAQ,OAwBjF,MAAY,gBAARmI,GAAiC,oBAARA,EAErB,cAACrB,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,SACI,cAACwE,EAAA,EAAD,CAAWhH,KAAK,SAASQ,GAAG,iBAAiBuC,MAAM,kBAAkBJ,MAAOmF,EACjErE,SA1BF,SAACW,GAClB,IACQA,EAAEvD,OAAO8B,MAAQ,GACjBoF,EAAe,GACf3I,aAAa6B,QAAQ,iBAAkB,MAChCmD,EAAEvD,OAAO8B,MAAQ,KACxBoF,EAAe,KACf3I,aAAa6B,QAAQ,iBAAkB,UAEvC8G,EAAe3C,SAAShB,EAAEvD,OAAO8B,QACV,KAAnByB,EAAEvD,OAAO8B,MACTvD,aAAa6B,QAAQ,iBAAkB,KAEvC7B,aAAa6B,QAAQ,iBAAkB,GAAKmE,SAAShB,EAAEvD,OAAO8B,SAGxE,MAAOyB,GACL2D,EAAe,GACf3I,aAAa6B,QAAQ,iBAAkB,WAYnC,8BCLD+G,EA/BQ,SAACzF,GACpB,MAA8Bc,IAAMtE,SAAoD,OAA3CK,aAAaC,QAAQ,mBAAqC,SAAWD,aAAaC,QAAQ,mBAAvI,mBAAOiI,EAAP,KAAgBC,EAAhB,KACMC,EAAsC,OAAhCpI,aAAaC,QAAQ,OAAkB,OAASD,aAAaC,QAAQ,OAOjF,MAAY,gBAARmI,GAAiC,oBAARA,EAErB,cAACrB,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,SACI,cAACiF,EAAA,EAAD,CAAkBxH,UAAWsC,EAAQC,YAAatC,MAAO,CAACE,MAAO,WAC/CsH,QACI,cAACC,EAAA,EAAD,CACIL,QAASA,EACT7D,SAZjB,SAACC,GAClB6D,EAAW7D,EAAM7C,OAAOyG,SACxBlI,aAAa6B,QAAQ,iBAAkByC,EAAM7C,OAAOyG,UAWlB9C,KAAK,WACLpE,MAAM,YAGd2C,MAAM,kBAKxB,8BCeDkF,EAxCE,SAAC1F,GAoBd,OACI,eAAC4D,EAAA,EAAD,CAAalG,UAAW,mBAAqBsC,EAAQC,YAArD,UACI,cAAC4D,EAAA,EAAD,CAAY3D,QAAM,EAACjC,GAAG,6CAAtB,sBAGA,cAACkG,EAAA,EAAD,CAAQxG,MAAO,CAACkB,UAAW,QACnBsB,iBAvBO,SAACC,GAChBvD,aAAaC,QAAQ,aAAesD,GACpCvD,aAAa6B,QAAQ,WAAY0B,IAsBzB,kBAAgB,kBAChBC,kBAAkB,OAClBC,KAAM,EACNC,MArBF,CACV,CACIH,MAAO,EACPI,MAAO,KAEX,CACIJ,MAAO,IACPI,MAAO,QAeCC,IAAK,EACLC,IAAK,IACLC,aAAmD,OAArC9D,aAAaC,QAAQ,YAAuB,GAAKD,aAAaC,QAAQ,kBCtBlG6I,EAAYC,aAAW,SAACtI,GAAD,MAAY,CACrC2C,YAAa,CACTsE,OAAQjH,EAAMuI,QAAQ,GACtBC,SAAU,KAEdzE,YAAa,CACTxC,UAAWvB,EAAMuI,QAAQ,QAmClBE,IA/BG,WACd,IAAM/F,EAAU2F,IAEhB,OACI,sBAAKhI,MAAO,CAAC4G,OAAQ,QAArB,UACI,sBAAK7G,UAAU,cAAf,UACI,cAACmD,EAAA,EAAD,CAASb,QAASA,IAClB,cAAC,EAAD,CAAWA,QAASA,OAExB,sBAAKtC,UAAU,cAAf,UACI,cAAC4D,EAAA,EAAD,CAAUtB,QAASA,IACnB,cAAC,EAAD,CAAUA,QAASA,IACnB,cAAC,EAAD,CAAgBA,QAASA,IACzB,cAAC,EAAD,CAAgBA,QAASA,OAE7B,sBAAKtC,UAAU,cAAf,UACI,cAACqC,EAAA,EAAD,CAAYC,QAASA,IACrB,cAAC,EAAD,CAAYA,QAASA,IACrB,cAAC,EAAD,CAAQA,QAASA,IACjB,cAAC,EAAD,CAAUA,QAASA,IACnB,cAAC,EAAD,CAAYA,QAASA,IACrB,cAAC,EAAD,CAAWA,QAASA,IACpB,cAAC,EAAD,CAAWA,QAASA,IACpB,cAAC,EAAD,CAAiBA,QAASA,Y,uPCD3BgG,EArBD,WACV,IAAMC,EAAW,8BAEjB,OACI,sBAAKtI,MAAO,CAAC4G,OAAQ,QAArB,UACI,cAAC2B,EAAA,EAAD,CAAkB1G,IAAKyG,EAAvB,SAAiC,cAACE,EAAA,EAAD,CAAWC,KAAM,GAAIC,OAAO,MAC7D,cAACC,EAAA,EAAD,CAAqB9G,IAAKyG,EAA1B,SAAoC,cAACM,EAAA,EAAD,CAAcH,KAAM,GAAIC,OAAO,MACnE,cAACG,EAAA,EAAD,CAA8BhH,IAAKyG,EAAnC,SAA6C,cAACQ,EAAA,EAAD,CAAuBL,KAAM,GACNC,OAAO,MAC3E,cAACK,EAAA,EAAD,CAAoBlH,IAAKyG,EAAzB,SAAmC,cAACU,EAAA,EAAD,CAAaP,KAAM,GAAIC,OAAO,MACjE,cAACO,EAAA,EAAD,CAAqBpH,IAAKyG,EAA1B,SAAoC,cAACY,EAAA,EAAD,CAAcT,KAAM,GAAIC,OAAO,MACnE,cAACS,EAAA,EAAD,CAAmBtH,IAAKyG,EAAxB,SAAkC,cAACc,EAAA,EAAD,CAAYX,KAAM,GAAIC,OAAO,MAC/D,cAACW,EAAA,EAAD,CAAqBxH,IAAKyG,EAA1B,SAAoC,cAACgB,EAAA,EAAD,CAAcb,KAAM,GAAIC,OAAO,MACnE,cAACa,EAAA,EAAD,CAAqB1H,IAAKyG,EAA1B,SAAoC,cAACkB,EAAA,EAAD,CAAcf,KAAM,GAAIC,OAAO,MACnE,cAACe,EAAA,EAAD,CAAmB5H,IAAKyG,EAAxB,SAAkC,cAACoB,EAAA,EAAD,CAAYjB,KAAM,GAAIC,OAAO,MAC/D,cAACiB,EAAA,EAAD,CAAmB9H,IAAKyG,EAAxB,SAAkC,cAACsB,EAAA,EAAD,CAAYnB,KAAM,GAAIC,OAAO,UC0B5DmB,IAjEA,WAEX,MAAoBhL,mBAA8C,OAArCK,aAAaC,QAAQ,YAAuBD,aAAaC,QAAQ,YAAc,QAA5G,mBAAO2K,EAAP,KAAWC,EAAX,KAEA,OACI,sBAAKhK,UAAU,SAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIC,MAAO,CAAC6F,WAAY,QAAxB,mCACA,cAAC,EAAD,OAEJ,sBAAK9F,UAAU,cAAf,UACI,oBAAIC,MAAO,CAAC6F,WAAY,KAAxB,uBACA,mBAAG9F,UAAU,WAAb,mCACA,cAAC,IAAD,CAAMA,UAAU,WACVgG,GAAG,SADT,SACkB,mBAAGhG,UAAU,WAAb,6BAClB,mBAAGA,UAAU,WACVI,KAAK,cACLQ,OAAO,SAFV,SAEmB,mBAAGZ,UAAU,WAAb,wCAEvB,sBAAKA,UAAU,cAAf,UACI,oBAAIC,MAAO,CAAC6F,WAAY,KAAxB,4BACA,mBAAG9F,UAAU,WACVI,KAAK,0EACLQ,OAAO,SAFV,SAEmB,mBAAGZ,UAAU,WAAb,sBACnB,mBAAGA,UAAU,WACVI,KAAK,uEACLQ,OAAO,SAFV,SAEmB,mBAAGZ,UAAU,WAAb,0BAEvB,sBAAKA,UAAU,cAAf,UACI,oBAAIC,MAAO,CAAC6F,WAAY,KAAxB,uBACA,mBAAG9F,UAAU,WACVI,KAAK,0CACLQ,OAAO,SAFV,SAEmB,mBAAGZ,UAAU,WAAb,yBAEvB,qBAAKA,UAAU,cAAcC,MAAO,CAACgK,SAAU,SAA/C,SACY,SAAPF,EACG,qCACI,oBAAI9J,MAAO,CAAC6F,WAAY,KAAxB,mCACA,8BACI,mBAAG7F,MAAO,CAACiK,OAAQ,WAAYvJ,QAAS,WACpCqJ,EAAM,SACN7K,aAAa6B,QAAQ,WAAY,UAFrC,wBADJ,2DAUJ,qCACI,oBAAIf,MAAO,CAAC6F,WAAY,KAAxB,oCACA,8BACI,mBAAG7F,MAAO,CAACiK,OAAQ,WAAYvJ,QAAS,WACpCqJ,EAAM,QACN7K,aAAa6B,QAAQ,WAAY,SAFrC,uBADJ,oE,2IC1CTmJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCAdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC1J,EAAA,EAAD,QAGRc,SAAS6I,eAAe,SAM5BZ,K,iGCnBO,SAAevI,EAAtB,oC,4CAAO,WAAyBrB,EAAIyK,GAA7B,iBAAAC,EAAA,sDACCC,EAAM,IAAIC,eAEVrJ,EAAM,iCAEVoJ,EAAIE,KAAK,OAAT,UAAoBtJ,EAApB,OAA6B,GAC7BoJ,EAAIG,iBAAiB,eAAgB,qCACrCH,EAAII,mBAAqB,WACE,IAAnBJ,EAAIK,YACe,MAAfL,EAAIM,QACJR,EAAK,KAAM,CAACjJ,IAAKD,EAAM2J,KAAKC,MAAMR,EAAIS,cAAc5J,IAAKzB,MAAOmL,KAAKC,MAAMR,EAAIS,cAAcrL,SAIzG4K,EAAIU,QAAU,WACVZ,EAAKE,EAAIW,WAEbX,EAAIY,KAAJ,YAAcvL,IAjBX,4C","file":"static/js/main.3cbe219b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport Button from '@material-ui/core/Button';\n\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\nimport MusicSelect from \"./components/MusicSelect\";\nimport SwitchMicMusic from \"./components/SwitchMicMusic\";\nimport {usePageVisibility} from 'react-page-visibility';\nimport FreqSelect from \"./components/General/FreqSelect\";\nimport MusicFromLink from \"./components/MusicFromLink\";\nimport BehindCanvas from \"./components/BehindCanvas\";\n\nfunction MainApp() {\n    const [reload, setReload] = useState(0);\n    const isVisible = usePageVisibility();\n    const [inputs, setInputs] = useState(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n\n    window.addEventListener(\"storage\", () => {\n        if (localStorage.getItem('micOrSound') === \"compareInputs\") {\n            setInputs(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n        }\n    });\n\n    global.refreshCanvas = () => {\n        setReload(reload + 1);\n    };\n\n    const theme = createTheme({\n        palette: {\n            type: 'dark',\n        },\n    });\n\n    if (isVisible || localStorage.getItem(\"batteryS\") === \"false\") {\n        return (\n            <div className=\"app\">\n                <h1><a style={{textDecoration: \"none\", color: \"inherit\"}} href=\"https://soundvisualiser.com\">Sound\n                    Visualizer</a></h1>\n                <div className=\"sticky-canvas\" key={reload}>\n                    <iframe src=\"/visualizer/index.html\" title={reload}/>\n                    <BehindCanvas/>\n                </div>\n                <ThemeProvider theme={theme}>\n                    <div className=\"big-container full-screen\">\n                        <div id=\"full-screen\">\n                            <div style={{float: \"right\"}}>\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        onClick={() => setReload(reload + 1)}>reload\n                                    Canvas</Button>&nbsp;\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        href=\"/visualizer\" target=\"_blank\"> Open\n                                    Visualizer in\n                                    Fullscreen</Button>&nbsp;\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            if (localStorage.getItem('musicData') !== null) {\n                                                URL.revokeObjectURL(localStorage.getItem('musicData'))\n                                            }\n                                            localStorage.clear();\n                                        }}> Reset Visualizer</Button>\n                            </div>\n                            {(localStorage.getItem('micOrSound') === null || localStorage.getItem('micOrSound') === \"mic\" || localStorage.getItem('micOrSound') === \"compareInputs\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to freeze/unfreeze\n                                diagram</p>}\n                            {localStorage.getItem('micOrSound') === \"sound\" &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to create a tone</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"true\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n\n                            <p>&nbsp;</p>\n                        </div>\n                    </div>\n                    <div className=\"big-container\">\n                        <div id=\"full-screen\">\n                            {localStorage.getItem('micOrSound') !== \"compareInputs\" &&\n                            <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                    onClick={() => {\n                                        setReload(reload + 1);\n                                        localStorage.setItem('micOrSound', \"compareInputs\");\n                                    }}>\n                                Compare two audio sources\n                            </Button>\n                            }\n                            &nbsp;\n                            {(localStorage.getItem('micOrSound') !== \"toneGenerator\" || localStorage.getItem('pinkNoise') !== \"true\") &&\n                            <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                    onClick={() => {\n                                        setReload(reload + 1);\n                                        localStorage.setItem('micOrSound', \"toneGenerator\");\n                                        localStorage.setItem('pinkNoise', \"true\");\n                                    }}>\n                                Generate Pink Noise\n                            </Button>\n                            }\n                            &nbsp;\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") === false &&\n                            < Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                     onClick={() => {\n                                         setReload(reload + 1);\n                                         localStorage.setItem('micOrSound', \"toneGenerator\");\n                                         localStorage.setItem('pinkNoise', \"false\");\n                                     }}>\n                                Tone Generator\n                            </Button>\n                            }\n                            &nbsp;\n                            {localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"false\" &&\n                            <FreqSelect/>\n                            }\n                            <MusicSelect key={\"m\" + reload}/>\n                            <MusicFromLink key={\"reg\" + reload}/>\n                            <SwitchMicMusic key={\"s\" + reload}/>\n                            {localStorage.getItem('micOrSound') === \"sound\" && <p>Song\n                                name: {localStorage.getItem('musicName')}</p>}\n                            {localStorage.getItem('micOrSound') === \"compareInputs\" ? <><p>Info: This feature is\n                                    only\n                                    supported by the following browsers: <b>Chrome, Edge</b></p><p>\n                                    Info: {inputs[0]} input(s) found{Number(inputs[0]) > 1 && <>,\n                                    using {inputs[1] != '' ? inputs[1] : 'first'} and {inputs[2] != '' ? inputs[2] : 'last'} for\n                                    the comparison\n                                </>}</p></>\n                                :\n                                <p className=\"text-margin\">&nbsp;</p>}\n                        </div>\n                    </div>\n                    <div className=\"big-container\">\n                        <Selection key={\"g\" + reload}/>\n                    </div>\n                </ThemeProvider>\n            </div>\n        );\n    } else {\n        return <div style={{color: \"white\", textAlign: \"center\", marginTop: \"49vh\"}}>\n            <h2>Battery Saver active, click <a href=\"/\">here</a> to reload</h2>\n        </div>\n    }\n}\n\nexport default MainApp;\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport MainApp from \"./MainApp\";\r\nimport Error from \"./components/Error\";\r\nimport Footer from \"./components/Footer\";\r\nimport {getYtLink} from \"./components/service\";\r\n\r\nfunction App() {\r\n\r\n    const FullMainApp = () => {\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        const v = queryParams.get('v');\r\n\r\n        getYtLink(v, (err, url) => {\r\n            if (err) {\r\n                throw err;\r\n            }\r\n            localStorage.setItem('micOrSound', 'sound');\r\n            localStorage.setItem('musicName', url.title);\r\n            localStorage.setItem(\"ytlink\", url.mp3);\r\n            window.history.pushState({}, document.title, \"/\");\r\n            global.refreshCanvas();\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <MainApp/>\r\n                <Footer/>\r\n            </>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route path=\"/\" component={FullMainApp} exact/>\r\n                <Route path=\"/main\" component={MainApp}/>\r\n                <Route component={Error}/>\r\n            </Switch>\r\n        </main>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Datapoints = (classes) => {\r\n\r\n\r\n    const handleBarMultiple = (value) => {\r\n        if (localStorage.getItem('barMultiple') != value) {\r\n            localStorage.setItem('barMultiple', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 5,\r\n            label: '2^5 bars',\r\n        },\r\n        {\r\n            value: 8,\r\n            label: '2^8 bars',\r\n        },\r\n        {\r\n            value: 12,\r\n            label: '2^12 bars',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Amount of Datapoints\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleBarMultiple}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={5}\r\n                    max={14}\r\n                    defaultValue={localStorage.getItem('barMultiple') === null ? 9 : localStorage.getItem('barMultiple')}\r\n                    onBlur={() => {\r\n                        global.refreshCanvas()\r\n                    }}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Datapoints;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst BarType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(localStorage.getItem('vis') === null || localStorage.getItem('vis') === \"bars\" ? \"\" : localStorage.getItem('vis'));\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"bar\");\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"bars\");\r\n                break;\r\n            case \"doubleBars\":\r\n                localStorage.setItem('vis', \"doubleBars\");\r\n                break;\r\n            case \"sidebars\":\r\n                localStorage.setItem('vis', \"sidebars\");\r\n                break;\r\n            case \"bar_circle\":\r\n                localStorage.setItem('vis', \"bar_circle\");\r\n                break;\r\n            case \"multiColor\":\r\n                localStorage.setItem('vis', \"multiColor\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"bars\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Bar Diagrams\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Bars</MenuItem>\r\n                <MenuItem value={\"doubleBars\"}>Double Bars</MenuItem>\r\n                <MenuItem value={\"sidebars\"}>Sidebars</MenuItem>\r\n                <MenuItem value={\"bar_circle\"}>Circle</MenuItem>\r\n                <MenuItem value={\"multiColor\"}>Multi Color</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default BarType;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst LineType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(getLS);\r\n\r\n    function getLS() {\r\n        if (localStorage.getItem('vis') === null) {\r\n            return \"none\";\r\n        } else if (localStorage.getItem('vis') === \"line\") {\r\n            return \"\";\r\n        } else {\r\n            return localStorage.getItem('vis');\r\n        }\r\n\r\n    }\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"line\");\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"line\");\r\n                break;\r\n            case \"line_circle\":\r\n                localStorage.setItem('vis', \"line_circle\");\r\n                break;\r\n            case \"colorful_circle\":\r\n                localStorage.setItem('vis', \"colorful_circle\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"line\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Line Diagrams\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Line</MenuItem>\r\n                <MenuItem value={\"line_circle\"}>Circle</MenuItem>\r\n                <MenuItem value={\"colorful_circle\"}>Colorful Circle</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default LineType;","import React, {useState} from 'react'\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {styled} from '@material-ui/core/styles';\r\n\r\n\r\nconst MusicSelect = () => {\r\n    const [fileName, setFileName] = useState(localStorage.getItem('musicName') === null ? \"\" : localStorage.getItem('musicName'));\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const manageChange = (e) => {\r\n        let file = e.target.files[0];\r\n        if (file.type && !file.type.startsWith('audio/')) {\r\n            console.log('File is not an audio file.', file.type, file);\r\n            return;\r\n        }\r\n        setFileName(file.name);\r\n        if (localStorage.getItem('musicData') !== null) {\r\n            URL.revokeObjectURL(localStorage.getItem('musicData'));\r\n        }\r\n        localStorage.setItem('musicData', URL.createObjectURL(file));\r\n        localStorage.setItem('musicName', file.name);\r\n        localStorage.setItem('micOrSound', 'sound');\r\n        localStorage.removeItem('ytlink');\r\n        global.refreshCanvas();\r\n    };\r\n\r\n\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n    if (localStorage.getItem('type') !== \"compareInputs\") {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"contained-button-file\" className=\"right-when-large\"\r\n                       style={{marginBottom: \"40px\"}}>\r\n                    <Input id=\"contained-button-file\" type=\"file\"\r\n                           onChange={e => manageChange(e)}/>\r\n                    <Button className=\"bottom-button\" style={{marginBottom: \"20px\"}} variant=\"outlined\"\r\n                            component=\"span\">\r\n                        Select Song\r\n                    </Button>\r\n                    &nbsp;\r\n                </label>\r\n            </>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\nexport default MusicSelect;","import React, {useState} from 'react'\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst SwitchMicMusic = () => {\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const changeInput = () => {\r\n        setMicOrSound(\"mic\");\r\n        localStorage.setItem('micOrSound', \"mic\");\r\n        global.refreshCanvas();\r\n    };\r\n    if (micOrSound === \"toneGenerator\" || micOrSound === \"compareInputs\" || micOrSound === \"sound\") {\r\n        return (\r\n            <label className=\"right-when-large\">\r\n                <Button className=\"bottom-button\" style={{marginBottom: \"20px\"}} variant=\"outlined\"\r\n                        component=\"span\" onClick={changeInput}>\r\n                    Switch back to Microphone Input\r\n                </Button>\r\n                &nbsp;\r\n            </label>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default SwitchMicMusic;","import React, {useState} from 'react'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst FreqSelect = (classes) => {\r\n\r\n    const [freq, setFreq] = useState(localStorage.getItem('freq') === null ? 50 : localStorage.getItem('freq'));\r\n\r\n    const updateFreq = (e) => {\r\n        try {\r\n            if (e.target.value > 9999) {\r\n                setFreq(9999);\r\n                localStorage.setItem('freq', '9999');\r\n            } else {\r\n                if (e.target.value === '' || e.target.value < 50) {\r\n                    setFreq(e.target.value)\r\n                } else {\r\n                    setFreq(parseInt(e.target.value));\r\n                    localStorage.setItem('freq', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setFreq(0);\r\n            localStorage.setItem('freq', '0');\r\n        }\r\n    };\r\n\r\n    const changeText = () => {\r\n        if (freq === '' || freq < 50) {\r\n            setFreq(50);\r\n            localStorage.setItem('freq', '50');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"freq \" + classes.formControl}>\r\n            <TextField type=\"number\" id=\"outlined-number\" label=\"Frequency\" value={freq} onChange={updateFreq}\r\n                       InputLabelProps={{shrink: true,}} onBlur={changeText}/>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default FreqSelect;","import React from 'react'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {getYtLink} from \"./service\";\r\n\r\n\r\nconst MusicFromLink = () => {\r\n\r\n    function youtube_parser(url) {\r\n        var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n        var match = url.match(regExp);\r\n        return (match && match[7].length === 11) ? match[7] : false;\r\n    }\r\n\r\n    const manageChange = (e) => {\r\n        const link = e.target.value;\r\n        if (link.length > 15 && youtube_parser(link) !== false) {\r\n            const id = youtube_parser(link);\r\n\r\n            getYtLink(id, (err, url) => {\r\n                if (err) {\r\n                    throw err;\r\n                }\r\n                localStorage.setItem('micOrSound', 'sound');\r\n                localStorage.setItem('musicName', url.title);\r\n                localStorage.setItem(\"ytlink\", url.mp3);\r\n                global.refreshCanvas();\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <label className=\"right-when-large\" style={{marginBottom: \"20px\"}}>\r\n            <TextField id=\"outlined-basic\" style={{marginBottom: \"20px\"}}  className=\"bottom-button\"\r\n                       placeholder=\"YouTube Link\" variant=\"outlined\"\r\n                       onChange={e => manageChange(e)}/>\r\n            &nbsp;\r\n        </label>\r\n    )\r\n};\r\n\r\nexport default MusicFromLink;","import React, {useState} from 'react'\r\n\r\nconst BehindCanvas = () => {\r\n    const [percent, setPercent] = useState(\"\");\r\n\r\n    window.addEventListener(\"storage\", () => {\r\n        if (localStorage.getItem(\"percentLoaded\") !== null) {\r\n            setPercent(localStorage.getItem(\"percentLoaded\"));\r\n        }\r\n    });\r\n\r\n    if (localStorage.getItem(\"percentLoaded\") !== null) {\r\n        return (\r\n            <div className=\"troubleshooting\">\r\n                Loaded {percent}%\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"troubleshooting\">\r\n                If the canvas doesn't load, try the following:\r\n                <ol>\r\n                    <li>Press Reload Canvas</li>\r\n                    {localStorage.getItem('musicData') !== null ? <li><b>Select your sound file again</b></li> :\r\n                        <li>Check microphone permissions for your browser in your OS's system</li>}\r\n                    <li>Disable any adblocker that might cause an interference</li>\r\n                    <li>Make sure that you don't have any javascript blockers active</li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default BehindCanvas;","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n    return (\r\n        <>\r\n            <p style={{marginLeft: \"20px\", color: \"white\"}}>Error: Page not found!</p>\r\n            <Link style={{fontSize: \"24px\", marginLeft: \"20px\", color: \"white\"}} to=\"/\">Oh no, go back</Link>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Error;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst BackgroundColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('bcolor') === null ? '#000000' : localStorage.getItem('bcolor'));\r\n\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('bcolor') !== color) {\r\n            localStorage.setItem('bcolor', color);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Background Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default BackgroundColor;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst SoundRange = (classes) => {\r\n    const first = localStorage.getItem('barRange') === null ? 0 : Number(localStorage.getItem('barRange').split(\",\")[0]);\r\n    const last = localStorage.getItem('barRange') === null ? 50 : Number(localStorage.getItem('barRange').split(\",\")[1]);\r\n\r\n    const [value, setValue] = React.useState([first, last]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        if (localStorage.getItem('barRange') != value) {\r\n            localStorage.setItem('barRange', value);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n    if (localStorage.getItem(\"micOrSound\") !== \"toneGenerator\" || localStorage.getItem(\"pinkNoise\") === \"true\") {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Range\r\n                </InputLabel>\r\n                <Slider style={{marginTop: \"24px\"}}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        marks={marks}\r\n                />\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\n\r\nexport default SoundRange;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Height = (classes) => {\r\n\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') != value) {\r\n            localStorage.setItem('height', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Height\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleHeight}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={localStorage.getItem('height') === null ? 50 : localStorage.getItem('height')}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Height;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst BarMargin = (classes) => {\r\n\r\n    const [margin, setMargin] = useState(localStorage.getItem('barMargin') === null ? 5 : localStorage.getItem('barMargin'));\r\n    const type = localStorage.getItem('type') === null ? 'bar' : localStorage.getItem('type');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setMargin(0);\r\n                localStorage.setItem('barMargin', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setMargin(1000);\r\n                localStorage.setItem('barMargin', '1000');\r\n            } else {\r\n                setMargin(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('barMargin', '0');\r\n                } else {\r\n                    localStorage.setItem('barMargin', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setMargin(0);\r\n            localStorage.setItem('barMargin', '0');\r\n        }\r\n    };\r\n\r\n    if (type === 'bar') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <TextField type=\"number\" id=\"standard-basic\" label=\"Bar Margin\" value={margin} onChange={updateMargin}/>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default BarMargin;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst LineColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('linecolor') === null ? '#ffffff' : localStorage.getItem('linecolor'));\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('linecolor') !== color) {\r\n            localStorage.setItem('linecolor', color);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Line Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineColor;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst LineWeight = (classes) => {\r\n\r\n    const [lWeight, setLWeight] = useState(localStorage.getItem('lineWeight') === null ? 1 : localStorage.getItem('lineWeight'));\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLWeight(0);\r\n                localStorage.setItem('lineWeight', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLWeight(1000);\r\n                localStorage.setItem('lineWeight', '1000');\r\n            } else {\r\n                setLWeight(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineWeight', '0');\r\n                } else {\r\n                    localStorage.setItem('lineWeight', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLWeight(0);\r\n            localStorage.setItem('lineWeight', '1');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <TextField type=\"number\" id=\"standard-basic\" label=\"Line Weight\" value={lWeight} onChange={updateMargin}/>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineWeight;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst LineFill = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('lineFill') === null ? false : 'true' === localStorage.getItem('lineFill'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bar' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('lineFill', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line' || vis === 'line_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                                  control={\r\n                                      <Checkbox\r\n                                          checked={checked}\r\n                                          onChange={handleChange}\r\n                                          name=\"checkedB\"\r\n                                          color=\"primary\"\r\n                                      />\r\n                                  }\r\n                                  label=\"Fill\"\r\n                />\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineFill;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst FillColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('fillcolor') === null ? '#ffffff' : localStorage.getItem('fillcolor'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('fillcolor') !== color) {\r\n            localStorage.setItem('fillcolor', color);\r\n        }\r\n    };\r\n    if (vis === 'multiColor' || vis === 'colorful_circle') {\r\n        return (<></>);\r\n    } else {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Fill Color\r\n                </InputLabel>\r\n                <ColorPicker style={{marginTop: \"18px\"}}\r\n                             name='color'\r\n                             defaultValue={color}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                             onChange={setColor}\r\n\r\n                />\r\n            </FormControl>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FillColor;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst LineCircleSize = (classes) => {\r\n\r\n    const [lCircleSize, setLCircleSize] = useState(localStorage.getItem('lineCircleSize') === null ? 50 : localStorage.getItem('lineCircleSize'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLCircleSize(0);\r\n                localStorage.setItem('lineCircleSize', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLCircleSize(1000);\r\n                localStorage.setItem('lineCircleSize', '1000');\r\n            } else {\r\n                setLCircleSize(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineCircleSize', '0');\r\n                } else {\r\n                    localStorage.setItem('lineCircleSize', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLCircleSize(0);\r\n            localStorage.setItem('lineCircleSize', '1');\r\n        }\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <TextField type=\"number\" id=\"standard-basic\" label=\"Line CircleSize\" value={lCircleSize}\r\n                           onChange={updateMargin}/>\r\n            </FormControl>\r\n        )\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\nexport default LineCircleSize;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst LineCircleShow = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('showLineCircle') === null ? false : 'true' === localStorage.getItem('showLineCircle'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('showLineCircle', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                                  control={\r\n                                      <Checkbox\r\n                                          checked={checked}\r\n                                          onChange={handleChange}\r\n                                          name=\"checkedB\"\r\n                                          color=\"primary\"\r\n                                      />\r\n                                  }\r\n                                  label=\"Show Circle\"\r\n                />\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineCircleShow;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Clipping = (classes) => {\r\n\r\n\r\n    const handleClipping = (value) => {\r\n        if (localStorage.getItem('clipping') != value) {\r\n            localStorage.setItem('clipping', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: '0',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Clipping\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleClipping}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={localStorage.getItem('clipping') === null ? 20 : localStorage.getItem('clipping')}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Clipping;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Datapoints from './General/Datapoints';\r\nimport BackgroundColor from './General/BackgroundColor';\r\nimport SoundRange from './General/SoundRange';\r\nimport Height from './General/Height';\r\nimport BarMargin from \"./Bar/BarMargin\";\r\nimport LineColor from \"./General/LineColor\";\r\nimport LineWeight from \"./General/LineWeight\";\r\nimport BarType from \"./Bar/BarType\";\r\nimport LineType from \"./Line/LineType\";\r\nimport LineFill from \"./Line/LineFill\";\r\nimport FillColor from \"./General/BarColor\";\r\nimport LineCircleSize from \"./Line/LineCircleSize\";\r\nimport LineCircleShow from \"./Line/LineCircleShow\";\r\nimport Clipping from \"./General/Clipping\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Selection = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{margin: \"20px\"}}>\r\n            <div className=\"s-container\">\r\n                <BarType classes={classes}/>\r\n                <BarMargin classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <LineType classes={classes}/>\r\n                <LineFill classes={classes}/>\r\n                <LineCircleSize classes={classes}/>\r\n                <LineCircleShow classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <Datapoints classes={classes}/>\r\n                <SoundRange classes={classes}/>\r\n                <Height classes={classes}/>\r\n                <Clipping classes={classes}/>\r\n                <LineWeight classes={classes}/>\r\n                <LineColor classes={classes}/>\r\n                <FillColor classes={classes}/>\r\n                <BackgroundColor classes={classes}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Selection;","import React from 'react'\r\nimport {\r\n    EmailShareButton,\r\n    WhatsappShareButton,\r\n    RedditShareButton,\r\n    LinkedinShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    HatenaShareButton,\r\n    FacebookShareButton,\r\n    FacebookMessengerShareButton,\r\n    TwitterShareButton\r\n} from \"react-share\";\r\n\r\n\r\nimport {\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    FacebookMessengerIcon,\r\n    HatenaIcon,\r\n    LinkedinIcon,\r\n    RedditIcon,\r\n    TelegramIcon,\r\n    TumblrIcon,\r\n    WhatsappIcon,\r\n    TwitterIcon\r\n} from \"react-share\";\r\n\r\nconst Share = () => {\r\n    const shareUrl = 'https://soundvisualiser.com';\r\n\r\n    return (\r\n        <div style={{margin: \"20px\"}}>\r\n            <EmailShareButton url={shareUrl}><EmailIcon size={42} round={true}/></EmailShareButton>\r\n            <FacebookShareButton url={shareUrl}><FacebookIcon size={42} round={true}/></FacebookShareButton>\r\n            <FacebookMessengerShareButton url={shareUrl}><FacebookMessengerIcon size={42}\r\n                                                                                round={true}/></FacebookMessengerShareButton>\r\n            <TwitterShareButton url={shareUrl}><TwitterIcon size={42} round={true}/></TwitterShareButton>\r\n            <WhatsappShareButton url={shareUrl}><WhatsappIcon size={42} round={true}/></WhatsappShareButton>\r\n            <RedditShareButton url={shareUrl}><RedditIcon size={42} round={true}/></RedditShareButton>\r\n            <LinkedinShareButton url={shareUrl}><LinkedinIcon size={42} round={true}/></LinkedinShareButton>\r\n            <TelegramShareButton url={shareUrl}><TelegramIcon size={42} round={true}/></TelegramShareButton>\r\n            <TumblrShareButton url={shareUrl}><TumblrIcon size={42} round={true}/></TumblrShareButton>\r\n            <HatenaShareButton url={shareUrl}><HatenaIcon size={42} round={true}/></HatenaShareButton>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Share;\r\n","import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport Share from \"./Share\";\r\n\r\nconst Footer = () => {\r\n\r\n    const [bS, setBS] = useState(localStorage.getItem(\"batteryS\") !== null ? localStorage.getItem(\"batteryS\") : \"true\");\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"share-container\">\r\n                <h2 style={{marginLeft: \"32px\"}}>Share Soundvisualiser</h2>\r\n                <Share/>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{marginLeft: \"0\"}}>Resources</h3>\r\n                <p className=\"footer-p\">How to use (inactive)</p>\r\n                <Link className=\"a-footer\"\r\n                      to=\"./main\"><p className=\"footer-p\">Remove footer</p></Link>\r\n                <a className=\"a-footer\"\r\n                   href=\"/visualizer\"\r\n                   target=\"_blank\"><p className=\"footer-p\">Fullscreen visualizer</p></a>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{marginLeft: \"0\"}}>Add to Desktop</h3>\r\n                <a className=\"a-footer\"\r\n                   href=\"https://natomasunified.org/kb/add-website-to-mobile-device-home-screen/\"\r\n                   target=\"_blank\"><p className=\"footer-p\">Mobile</p></a>\r\n                <a className=\"a-footer\"\r\n                   href=\"https://support.mozilla.org/en-US/kb/create-desktop-shortcut-website\"\r\n                   target=\"_blank\"><p className=\"footer-p\">Desktop</p></a>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{marginLeft: \"0\"}}>Community</h3>\r\n                <a className=\"a-footer\"\r\n                   href=\"https://reddit.com/r/SoundVisualization\"\r\n                   target=\"_blank\"><p className=\"footer-p\">Reddit</p></a>\r\n            </div>\r\n            <div className=\"f-container\" style={{maxWidth: \"230px\"}}>\r\n                {bS === \"true\" ?\r\n                    <>\r\n                        <h3 style={{marginLeft: \"0\"}}>Battery saver enabled</h3>\r\n                        <p>\r\n                            <b style={{cursor: \"pointer\"}} onClick={() => {\r\n                                setBS(\"false\");\r\n                                localStorage.setItem(\"batteryS\", \"false\");\r\n                            }}>Disable it\r\n                            </b>\r\n                            &nbsp;to keep the app active when the tab is hidden.\r\n                        </p>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <h3 style={{marginLeft: \"0\"}}>Battery saver disabled</h3>\r\n                        <p>\r\n                            <b style={{cursor: \"pointer\"}} onClick={() => {\r\n                                setBS(\"true\");\r\n                                localStorage.setItem(\"batteryS\", \"true\");\r\n                            }}>Enable it\r\n                            </b>\r\n                            &nbsp;to make the app inactive when the tab is hidden.\r\n                        </p>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App/>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export async function getYtLink(id, done) {\r\n    let xhr = new XMLHttpRequest();\r\n\r\n    let url = \"https://154.82.111.99.sslip.io\";\r\n\r\n    xhr.open(\"POST\", `${url}/p`, true);\r\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n    xhr.onreadystatechange = () => {\r\n        if (xhr.readyState === 4) {\r\n            if (xhr.status === 200) {\r\n                done(null, {mp3: url + JSON.parse(xhr.responseText).mp3, title: JSON.parse(xhr.responseText).title});\r\n            }\r\n        }\r\n    };\r\n    xhr.onerror = () => {\r\n        done(xhr.response);\r\n    };\r\n    xhr.send(`u=${id}`);\r\n}\r\n"],"sourceRoot":""}