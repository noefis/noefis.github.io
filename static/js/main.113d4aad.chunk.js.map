{"version":3,"sources":["App.js","components/BarColor.js","components/BackgroundColor.js","components/BarMultiple.js","components/DiagramType.js","components/BarRange.js","components/Height.js","components/Selection.js","reportWebVitals.js","index.js"],"names":["App","useState","reload","setReload","global","refreshCanvas","theme","createMuiTheme","palette","type","className","id","variant","onClick","href","target","style","color","src","title","BarColor","classes","minWidth","marginLeft","marginRight","formControl","shrink","marginTop","name","defaultValue","onChange","undefined","localStorage","getItem","setItem","BackgroundColor","BarMultiple","FormControl","InputLabel","Slider","getAriaValueText","value","valueLabelDisplay","step","marks","label","min","max","Selection","React","diagram","setDiagram","Select","labelId","event","displayEmpty","selectEmpty","MenuItem","BarRange","first","Number","split","last","setValue","newValue","Height","useStyles","makeStyles","margin","spacing","DiagramType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.113d4aad.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport Button from '@material-ui/core/Button';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nfunction App() {\n  const [reload, setReload] = useState(0);\n\n  global.refreshCanvas = () => {\n    setReload(reload + 1);\n  };\n\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n    },\n  });\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Selection />\n\n        <div id=\"full-screen\">\n          <Button variant=\"outlined\" onClick={() => setReload(reload + 1)}>reload Cavas</Button> &nbsp;\n          <a href=\"/visualizer\" target=\"_blank\" style={{ color: \"lightblue\" }}> Open Visualizer in Fullscreen</a>\n        </div>\n      </ThemeProvider>\n      <iframe key={reload} src=\"/visualizer\" title={reload}></iframe>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst BarColor = (classes) => {\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('barcolor') !== color) {\r\n            localStorage.setItem('barcolor', color);\r\n        }\r\n        if (color === undefined) {\r\n            global.refreshCanvas();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl style={{ minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\" }} className={classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Bar Color\r\n            </InputLabel>\r\n            <ColorPicker style={{ marginTop: \"18px\" }}\r\n                name='color'\r\n                defaultValue='#ffffff'\r\n                // value={this.state.color} - for controlled component\r\n\r\n                onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default BarColor;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst BackgroundColor = (classes) => {\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('bcolor') !== color) {\r\n            localStorage.setItem('bcolor', color);\r\n        }\r\n        if (color === undefined) {\r\n            global.refreshCanvas();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl style={{ minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\" }} className={classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Background Color\r\n            </InputLabel>\r\n            <ColorPicker style={{ marginTop: \"18px\" }}\r\n                name='color'\r\n                defaultValue='#000'\r\n                // value={this.state.color} - for controlled component\r\n\r\n                onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default BackgroundColor;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst BarMultiple = (classes) => {\r\n\r\n\r\n    const handleBarMultiple = (value) => {\r\n        if (localStorage.getItem('barMultiple') != value) {\r\n            localStorage.setItem('barMultiple', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 4,\r\n            label: '2^4 bars',\r\n        },\r\n        {\r\n            value: 8,\r\n            label: '2^8 bars',\r\n        },\r\n        {\r\n            value: 12,\r\n            label: '2^12 bars',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={classes.formControl} style={{ minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\" }}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Amount of Bars\r\n            </InputLabel>\r\n            <Slider style={{ marginTop: \"24px\" }}\r\n                getAriaValueText={handleBarMultiple}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={1}\r\n                marks={marks}\r\n                min={4}\r\n                max={14}\r\n                defaultValue={localStorage.getItem('barMultiple') === null ? 9 : localStorage.getItem('barMultiple')}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\n\r\nexport default BarMultiple;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst Selection = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(localStorage.getItem('vis') === null || localStorage.getItem('vis') === \"bars\" ? \"\" : localStorage.getItem('vis'));\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"bars\");\r\n                break;\r\n            case \"doubleBars\":\r\n                localStorage.setItem('vis', \"doubleBars\");\r\n                break;\r\n            case \"sidebars\":\r\n                localStorage.setItem('vis', \"sidebars\");\r\n                break;\r\n            case \"circle\":\r\n                localStorage.setItem('vis', \"circle\");\r\n                break;\r\n            case \"multiColor\":\r\n                localStorage.setItem('vis', \"multiColor\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"bars\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl style={{ minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\" }} className={classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Diagram ‎Type\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Bars</MenuItem>\r\n                <MenuItem value={\"doubleBars\"}>Double Bars</MenuItem>\r\n                <MenuItem value={\"sidebars\"}>Sidebars</MenuItem>\r\n                <MenuItem value={\"circle\"}>Circle</MenuItem>\r\n                <MenuItem value={\"multiColor\"}>Multi Color</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\n\r\nexport default Selection;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst BarRange = (classes) => {\r\n    const first = localStorage.getItem('barRange') === null ? 0 : Number(localStorage.getItem('barRange').split(\",\")[0]);\r\n    const last = localStorage.getItem('barRange') === null ? 100 : Number(localStorage.getItem('barRange').split(\",\")[1]);\r\n\r\n    const [value, setValue] = React.useState([first, last]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        if (localStorage.getItem('barRange') != value) {\r\n            localStorage.setItem('barRange', value);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={classes.formControl} style={{ minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\" }}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Bar Range\r\n            </InputLabel>\r\n            <Slider style={{ marginTop: \"24px\" }}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                marks={marks}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\n\r\nexport default BarRange;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Height = (classes) => {\r\n\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') != value) {\r\n            localStorage.setItem('height', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={classes.formControl} style={{ minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\" }}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Height\r\n            </InputLabel>\r\n            <Slider style={{ marginTop: \"24px\" }}\r\n                getAriaValueText={handleHeight}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={1}\r\n                marks={marks}\r\n                min={0}\r\n                max={100}\r\n                defaultValue={localStorage.getItem('height') === null ? 50 : localStorage.getItem('height')}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\n\r\nexport default Height;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BarMultiple from './BarMultiple';\r\nimport DiagramType from './DiagramType';\r\nimport BarColor from './BarColor';\r\nimport BackgroundColor from './BackgroundColor';\r\nimport BarRange from './BarRange';\r\nimport Height from './Height';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Selection = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{ margin: \"20px\" }}>\r\n            <DiagramType classes={classes} />\r\n            <BarMultiple classes={classes} />\r\n            <BarRange classes={classes} />\r\n            <BarColor classes={classes} />\r\n            <BackgroundColor classes={classes} />\r\n            <Height />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Selection;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}