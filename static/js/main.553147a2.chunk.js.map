{"version":3,"sources":["components/service.js","MainApp.js","components/TopSelection.js","App.js","components/Bar/BarType.js","components/Line/LineType.js","components/MusicSelect.js","components/SwitchMicMusic.js","components/General/FreqSelect.js","components/MusicFromLink.js","components/BehindCanvas.js","components/Error.js","components/General/Datapoints.js","components/General/BackgroundColor.js","components/General/SoundRange.js","components/General/Height.js","components/Bar/BarMargin.js","components/General/LineColor.js","components/General/LineWeight.js","components/Line/LineFill.js","components/General/BarColor.js","components/Line/LineCircleSize.js","components/Line/LineCircleShow.js","components/General/Clipping.js","components/General/Attack.js","components/Selection.js","footer/PwaModal.js","footer/Share.js","footer/Footer.js","ErrorBoundary.js","components/LandingPage.js","components/Record.js","components/AudioPlayer.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js","components/WhiteTextField.js","helpers.js"],"names":["getYtLink","id","done","a","undefined","localStorage","getItem","mp3","title","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","status","setItem","JSON","parse","responseText","file","response","onerror","send","MainApp","useState","reload","setReload","isVisible","usePageVisibility","split","inputs","setInputs","width","useWindowDimensions","aSettings","window","addEventListener","global","refreshCanvas","checkWidth","theme","createTheme","palette","mode","overrides","MuiOutlinedInput","root","position","borderColor","borderWidth","CheckError","React","setOpen","sx","in","severity","action","color","size","onClick","removeItem","fontSize","mb","className","style","marginTop","display","alignItems","paddingTop","textDecoration","href","overflow","float","marginRight","src","variant","marginBottom","target","URL","revokeObjectURL","clear","minHeight","Number","border","textAlign","TopSelection","text","setText","sText","setSText","navigator","clipboard","writeText","createSettings","then","setTimeout","fontWeight","App","path","component","LandingPage","exact","search","useLocation","history","useHistory","queryParams","URLSearchParams","v","get","err","message","pushState","document","settings","length","unpackSettings","push","e","Error","BarType","classes","diagram","setDiagram","formControl","m","minWidth","noValidate","autoComplete","select","label","value","onChange","event","LineType","selectEmpty","MusicSelect","setFileName","Input","styled","htmlFor","type","files","startsWith","name","createObjectURL","console","log","manageChange","SwitchMicMusic","micOrSound","setMicOrSound","FreqSelect","freq","setFreq","parseInt","InputLabelProps","shrink","onBlur","MusicFromLink","BehindCanvas","percent","setPercent","marginLeft","to","Datapoints","FormControl","Box","InputLabel","Slider","getAriaValueText","valueLabelDisplay","step","marks","min","max","defaultValue","BackgroundColor","makeStyles","borderBottomColor","useStyles","SoundRange","first","last","setValue","calculateValue","Math","round","newValue","map","val","scale","Height","BarMargin","margin","setMargin","WhiteTextField","LineColor","LineWeight","lWeight","setLWeight","LineFill","checked","setChecked","vis","FormControlLabel","control","Checkbox","FillColor","LineCircleSize","lCircleSize","setLCircleSize","LineCircleShow","Clipping","Attack","spacing","Selection","top","left","transform","bgcolor","boxShadow","p","borderRadius","paddingBottom","PwaModal","ShareIcon","createSvgIcon","xmlns","viewBox","d","cursor","Modal","onClose","justifyContent","Typography","SvgIcon","Share","shareUrl","EmailShareButton","EmailIcon","FacebookShareButton","FacebookIcon","FacebookMessengerShareButton","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","RedditShareButton","RedditIcon","LinkedinShareButton","LinkedinIcon","TelegramShareButton","TelegramIcon","TumblrShareButton","TumblrIcon","HatenaShareButton","HatenaIcon","Footer","bS","setBS","Mailto","mailto","location","preventDefault","maxWidth","ErrorBoundary","props","state","throwsError","error","info","this","children","Component","y","setY","box","createRef","useEffect","isMobile","pos","current","offsetTop","height","offsetHeight","sliderPos","String","RoundedDash","x1","y1","x2","y2","stroke","CustomSlider","withStyles","disabled","thumb","rail","track","active","backgroundColor","CustomButton","Button","padding","onMouseMove","pageY","Grid","container","align","paddingX","item","xs","justify","marginY","Container","paddingY","ref","WebkitAppearance","orientation","options","Record","anchorRef","selectedIndex","setSelectedIndex","record","setRecord","handleClick","handleToggle","prevOpen","handleClose","contains","ButtonGroup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","index","MenuItem","selected","handleMenuItemClick","AudioPlayer","endTime","setEndTime","currentTime","setCurrentTime","isDisabled","formatSmol","num","formatToTime","sec","floor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","process","origin","fetch","headers","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","TextField","getWindowDimensions","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","removeEventListener","data","set","replace","r","includes","sub","join","setting","range","t","b","h","c","w","l","f","o","g","n","s","i","stringify"],"mappings":"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","file":"static/js/main.553147a2.chunk.js","sourcesContent":["export async function getYtLink(id, done) {\r\n    if (id !== null && id !== undefined) {\r\n        if (localStorage.getItem(\"ytID\") === id) {\r\n            done(null, { mp3: localStorage.getItem(\"ytlink\"), title: localStorage.getItem('musicName') });\r\n        } else {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            let url = \"https://youtube.michaelbelgium.me/api/converter/convert?api_token=a6yTCDXhocWl43LRvrzazsBxvnYPo0vZL4Dm0788iJQPzzTep7Ns2qqUMsDQ&url=https://www.youtube.com/watch?v=\" + id;\r\n\r\n            xhr.open(\"POST\", `${url}`, true);\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        localStorage.setItem(\"ytID\", id);\r\n                        done(null, { mp3: JSON.parse(xhr.responseText).file, title: JSON.parse(xhr.responseText).title });\r\n                    } else {\r\n                        done(JSON.parse(xhr.response));\r\n                    }\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                done(xhr.response);\r\n            };\r\n\r\n            xhr.send(`u=${id}`);\r\n        }\r\n    }\r\n}","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport Button from '@mui/material/Button';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport MusicSelect from \"./components/MusicSelect\";\nimport SwitchMicMusic from \"./components/SwitchMicMusic\";\nimport { usePageVisibility } from 'react-page-visibility';\nimport FreqSelect from \"./components/General/FreqSelect\";\nimport MusicFromLink from \"./components/MusicFromLink\";\nimport BehindCanvas from \"./components/BehindCanvas\";\nimport AudioPlayer from \"./components/AudioPlayer\";\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Alert from \"@mui/material/Alert/Alert\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport TopSelection from './components/TopSelection';\nimport useWindowDimensions from './helpers';\n\nfunction MainApp() {\n    const [reload, setReload] = useState(0);\n    const isVisible = usePageVisibility();\n    const [inputs, setInputs] = useState(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n    const { width } = useWindowDimensions();\n\n    const aSettings = localStorage.getItem('settings') === \"Advanced\";\n\n    window.addEventListener(\"storage\", () => {\n        if (localStorage.getItem('micOrSound') === \"compareInputs\") {\n            setInputs(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n        }\n    });\n\n    global.refreshCanvas = () => {\n        setReload(reload + 1);\n    };\n\n    const checkWidth = width > 800;\n\n    const theme = createTheme({\n        palette: {\n            mode: 'dark',\n        },\n\n        overrides: {\n            MuiOutlinedInput: {\n                root: {\n                    position: \"relative\",\n                    \"& $notchedOutline\": {\n                        borderColor: \"#FFFFFF\"\n                    },\n                    \"&:hover:not($disabled):not($focused):not($error) $notchedOutline\": {\n                        borderColor: \"#FFFFFF\",\n                        \"@media (hover: none)\": {\n                            borderColor: \"#FFFFFF\"\n                        }\n                    },\n                    \"&$focused $notchedOutline\": {\n                        borderColor: \"#FFFFFF\",\n                        borderWidth: 1\n                    }\n                }\n            }\n        }\n    });\n\n    const CheckError = () => {\n\n        const [open, setOpen] = React.useState(localStorage.getItem(\"error\") !== null);\n\n        return (\n            <Box sx={{ width: '100%' }}>\n                <Collapse in={open}>\n                    <Alert\n                        severity=\"error\"\n                        action={\n                            <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                size=\"small\"\n                                onClick={() => {\n                                    setOpen(false);\n                                    localStorage.removeItem(\"error\");\n                                }}\n                            >\n                                <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                    >\n                        {localStorage.getItem(\"error\")}\n                    </Alert>\n                </Collapse>\n            </Box>\n        )\n    };\n\n    if (isVisible || localStorage.getItem(\"batteryS\") === \"false\") {\n        return (\n            <div className=\"app\">\n                <ThemeProvider theme={theme}>\n                    <div style={{ marginTop: 15, display: \"flex\", alignItems: \"center\" }}>\n                        <h1 style={{ display: \"inline\", paddingTop: 0 }}><a style={{ textDecoration: \"none\", color: \"inherit\" }} href=\"https://soundvisualiser.com\">Sound&nbsp;Visualizer</a>\n                        </h1>{checkWidth &&\n                            <div style={{ width: \"100%\", overflow: \"auto\" }}>\n                                <div style={{ float: \"right\", marginRight: 25 }}>\n                                    <TopSelection key={reload} />\n                                </div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"sticky-canvas\" key={reload}>\n                        <iframe id=\"iframe1\" src=\"/visualizer/index.html\" title={reload} />\n                        <BehindCanvas />\n                        <AudioPlayer />\n                    </div>\n                    {!checkWidth &&\n                        <div className=\"big-container\">\n                            <div id=\"full-screen\">\n                                <TopSelection key={reload} />\n                            </div>\n                        </div>\n                    }\n                    <div className=\"big-container\">\n                        <div id=\"full-screen\">\n                            <div className='float-container' style={{ float: \"right\" }}>\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                    style={{ marginBottom: \"20px\" }}\n                                    onClick={() => setReload(reload + 1)}>reload\n                                    Canvas</Button>&nbsp;\n                                {aSettings && <>\n                                    <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{ marginBottom: \"20px\" }}\n                                        href=\"/visualizer/index.html\" target=\"_blank\"> Open\n                                        Visualizer in\n                                        Fullscreen</Button> &nbsp;\n                                </>}\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                    style={{ marginBottom: \"20px\" }}\n                                    onClick={() => {\n                                        setReload(reload + 1);\n                                        if (localStorage.getItem('musicData') !== null) {\n                                            URL.revokeObjectURL(localStorage.getItem('musicData'))\n                                        }\n                                        localStorage.clear();\n                                    }}> Reset Visualizer</Button>\n                            </div>\n                            <p>Info:&nbsp;In&nbsp;Fullscreen:&nbsp;Press&nbsp;\"P\"&nbsp;to&nbsp;record PNG, \"W\" to record\n                                webm and \"S\" to stop</p>\n                            {(localStorage.getItem('micOrSound') === null || localStorage.getItem('micOrSound') === \"mic\" || localStorage.getItem('micOrSound') === \"compareInputs\") &&\n                                <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to freeze/unfreeze\n                                    diagram</p>}\n                            {localStorage.getItem('micOrSound') === \"sound\" &&\n                                <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") &&\n                                <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to create a tone</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"true\") &&\n                                <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n                        </div>\n                    </div>\n                    <div className=\"big-container\">\n                        <div id=\"full-screen\" style={{ minHeight: \"40px\" }}>\n                            {aSettings && <>\n                                {localStorage.getItem('micOrSound') !== \"compareInputs\" &&\n                                    <Button className=\"bottom-button\" variant=\"outlined\" style={{ marginBottom: \"20px\" }}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            localStorage.setItem('micOrSound', \"compareInputs\");\n                                        }}>\n                                        Compare two audio sources\n                                    </Button>\n                                }\n                                &nbsp;\n                                {(localStorage.getItem('micOrSound') !== \"toneGenerator\" || localStorage.getItem('pinkNoise') !== \"true\") &&\n                                    <Button className=\"bottom-button\" variant=\"outlined\" style={{ marginBottom: \"20px\" }}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            localStorage.setItem('micOrSound', \"toneGenerator\");\n                                            localStorage.setItem('pinkNoise', \"true\");\n                                        }}>\n                                        Generate Pink Noise\n                                    </Button>\n                                }\n                                &nbsp;\n                                {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") === false &&\n                                    < Button className=\"bottom-button\" variant=\"outlined\" style={{ marginBottom: \"20px\" }}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            localStorage.setItem('micOrSound', \"toneGenerator\");\n                                            localStorage.setItem('pinkNoise', \"false\");\n                                        }}>\n                                        Tone Generator\n                                    </Button>\n                                }\n                                &nbsp;\n                                {localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"false\" &&\n                                    <FreqSelect />\n                                }\n                            </>}\n                            <MusicSelect key={\"m\" + reload} />\n                            <MusicFromLink key={\"reg\" + reload} />\n                            <SwitchMicMusic key={\"s\" + reload} />\n                            {localStorage.getItem('micOrSound') === \"sound\" && <p>Song\n                                name: {localStorage.getItem('musicName')}</p>}\n                            {localStorage.getItem('micOrSound') === \"compareInputs\" && <><p>Info: This feature is\n                                only\n                                supported by the following browsers: <b>Chrome, Edge</b></p><p>\n                                    Info: {inputs[0]} input(s) found{Number(inputs[0]) > 1 && <>,\n                                        using {inputs[1] != '' ? inputs[1] : 'first'} and {inputs[2] != '' ? inputs[2] : 'last'} for\n                                        the comparison\n                                    </>}</p></>\n                            }\n                        </div>\n                        <CheckError />\n                    </div>\n                    <div className=\"big-container\" style={{ border: \"none\" }}>\n                        <Selection key={\"g\" + reload} />\n                    </div>\n                </ThemeProvider>\n            </div>\n        );\n    } else {\n        return <div style={{ color: \"white\", textAlign: \"center\", marginTop: \"49vh\" }}>\n            <h2>Battery Saver active, click <a href=\"/\">here</a> to reload</h2>\n        </div>\n    }\n}\n\nexport default MainApp;\n","import { Button } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { createSettings } from \"../helpers\";\r\n\r\n\r\nconst TopSelection = () => {\r\n\r\n    const [text, setText] = useState(\"Save Settings as Link\");\r\n    const [sText, setSText] = useState(localStorage.getItem('settings') === \"Advanced\" ? \"Simple\" : \"Advanced\");\r\n\r\n    const saveToClipboard = () => {\r\n        navigator.clipboard.writeText(\"http://soundvisualiser.com/#/visualiser?settings=\" + createSettings()).then(() => {\r\n            setText(\"Copied!\");\r\n            setTimeout(() => { setText(\"Save Settings as Link\") }, 1500);\r\n        })\r\n    }\r\n\r\n    const changeSettingsType = () => {\r\n        if (sText === \"Advanced\") {\r\n            setSText(\"Simple\");\r\n            localStorage.setItem('settings', 'Advanced');\r\n            global.refreshCanvas();\r\n        } else {\r\n            setSText(\"Advanced\");\r\n            localStorage.setItem('settings', 'Simpl');\r\n            global.refreshCanvas();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button className=\"bottom-button\" variant=\"outlined\" onClick={saveToClipboard}>{text}</Button>&nbsp;\r\n            <Button className=\"bottom-button\" style={{ fontWeight: sText === \"Advanced\" ? 700 : 300 }} variant={sText === \"Advanced\" ? 'contained' : 'outlined'} onClick={changeSettingsType}>Show {sText} Settings</Button>&nbsp;\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopSelection;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MainApp from \"./MainApp\";\r\nimport Error from \"./components/Error\";\r\nimport Footer from \"./footer/Footer\";\r\nimport { getYtLink } from \"./components/service\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport { unpackSettings } from './helpers';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n    const FullMainApp = () => {\r\n        const { search } = useLocation();\r\n        const history = useHistory();\r\n        const queryParams = new URLSearchParams(search, [search]);\r\n        const v = queryParams.get('v');\r\n\r\n\r\n        getYtLink(v, (err, url) => {\r\n            if (err) {\r\n                localStorage.setItem(\"error\", err.message);\r\n                global.refreshCanvas();\r\n                window.history.pushState({}, document.title, \"/\");\r\n            }\r\n            if (url !== undefined) {\r\n                localStorage.setItem('micOrSound', 'sound');\r\n                localStorage.setItem('musicName', url.title);\r\n                localStorage.setItem(\"ytlink\", url.mp3);\r\n                window.history.pushState({}, document.title, \"/\");\r\n                global.refreshCanvas();\r\n            }\r\n        });\r\n\r\n\r\n        const settings = queryParams.get('settings');\r\n        if (settings !== null && settings !== undefined && settings.length > 9) {\r\n            unpackSettings(settings);\r\n            history.push(\"/visualiser\");\r\n            setTimeout(() => { try { global.refreshCanvas(); } catch (e) { } }, 150);\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <MainApp />\r\n                <Footer />\r\n            </>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route path=\"/\" component={LandingPage} exact />\r\n                <Route path=\"/visualiser\" component={FullMainApp} exact />\r\n                <Route path=\"/main\" component={MainApp} />\r\n                <Route component={Error} />\r\n            </Switch>\r\n        </main>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\nconst BarType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(localStorage.getItem('vis') === null || localStorage.getItem('vis') === \"bars\" ? \"bars\" : localStorage.getItem('vis'));\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"bar\");\r\n        switch (event.target.value) {\r\n            case \"bars\":\r\n                localStorage.setItem('vis', \"bars\");\r\n                break;\r\n            case \"doubleBars\":\r\n                localStorage.setItem('vis', \"doubleBars\");\r\n                break;\r\n            case \"sidebars\":\r\n                localStorage.setItem('vis', \"sidebars\");\r\n                break;\r\n            case \"bar_circle\":\r\n                localStorage.setItem('vis', \"bar_circle\");\r\n                break;\r\n            case \"multiColor\":\r\n                localStorage.setItem('vis', \"multiColor\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"bars\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField\r\n                    className={\"all-form-inputs\"}\r\n                    id=\"outlined\"\r\n                    select\r\n                    label=\"Bar Diagrams\"\r\n                    variant=\"standard\"\r\n                    value={diagram}\r\n                    onChange={handleDiagram}\r\n                >\r\n                    <MenuItem key={\"bars\"} value={\"bars\"}>Bars</MenuItem>\r\n                    <MenuItem key={\"doubleBars\"} value={\"doubleBars\"}>Double Bars</MenuItem>\r\n                    <MenuItem key={\"sidebars\"} value={\"sidebars\"}>Sidebars</MenuItem>\r\n                    <MenuItem key={\"bar_circle\"} value={\"bar_circle\"}>Circle</MenuItem>\r\n                    <MenuItem key={\"multiColor\"} value={\"multiColor\"}>Multi Color</MenuItem>\r\n                </WhiteTextField>\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default BarType;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField/TextField\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\nconst LineType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(getLS);\r\n\r\n    function getLS() {\r\n        if (localStorage.getItem('vis') === null) {\r\n            return \"none\";\r\n        } else if (localStorage.getItem('vis') === \"line\") {\r\n            return \"line\";\r\n        } else {\r\n            return localStorage.getItem('vis');\r\n        }\r\n\r\n    }\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"line\");\r\n        switch (event.target.value) {\r\n            case \"line\":\r\n                localStorage.setItem('vis', \"line\");\r\n                break;\r\n            case \"line_circle\":\r\n                localStorage.setItem('vis', \"line_circle\");\r\n                break;\r\n            case \"colorful_circle\":\r\n                localStorage.setItem('vis', \"colorful_circle\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"line\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField variant=\"standard\"\r\n                    id=\"outlined\"\r\n                    select\r\n                    label=\"Line Diagrams\"\r\n                    value={diagram}\r\n                    onChange={handleDiagram}\r\n                    className={\"all-form-inputs \" + classes.selectEmpty}\r\n                >\r\n                    <MenuItem value={\"line\"}>Line</MenuItem>\r\n                    <MenuItem value={\"line_circle\"}>Circle</MenuItem>\r\n                    <MenuItem value={\"colorful_circle\"}>Colorful Circle</MenuItem>\r\n                </WhiteTextField>\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default LineType;","import React, { useState } from 'react'\r\nimport Input from \"@mui/material/Input\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\nconst MusicSelect = () => {\r\n    const [fileName, setFileName] = useState(localStorage.getItem('musicName') === null ? \"\" : localStorage.getItem('musicName'));\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const manageChange = (e) => {\r\n        let file = e.target.files[0];\r\n        if (file.type && !file.type.startsWith('audio/')) {\r\n            console.log('File is not an audio file.', file.type, file);\r\n            return;\r\n        }\r\n        setFileName(file.name);\r\n        if (localStorage.getItem('musicData') !== null) {\r\n            URL.revokeObjectURL(localStorage.getItem('musicData'));\r\n        }\r\n        localStorage.setItem('musicData', URL.createObjectURL(file));\r\n        localStorage.setItem('musicName', file.name);\r\n        localStorage.setItem('micOrSound', 'sound');\r\n        localStorage.removeItem('ytlink');\r\n        global.refreshCanvas();\r\n    };\r\n\r\n\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n    if (localStorage.getItem('type') !== \"compareInputs\") {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"contained-button-file\" className=\"right-when-large\"\r\n                    style={{ marginBottom: \"40px\" }}>\r\n                    <Input id=\"contained-button-file\" type=\"file\"\r\n                        onChange={e => manageChange(e)} />\r\n                    <Button className=\"bottom-button\" style={{ marginBottom: \"20px\", fontWeight: 700 }} variant=\"contained\"\r\n                        component=\"span\">\r\n                        Select Song\r\n                    </Button>\r\n                    &nbsp;\r\n                </label>\r\n            </>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\nexport default MusicSelect;","import React, { useState } from 'react'\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nconst SwitchMicMusic = () => {\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const changeInput = () => {\r\n        setMicOrSound(\"mic\");\r\n        localStorage.setItem('micOrSound', \"mic\");\r\n        global.refreshCanvas();\r\n    };\r\n    if (micOrSound === \"toneGenerator\" || micOrSound === \"compareInputs\" || micOrSound === \"sound\") {\r\n        return (\r\n            <label className=\"right-when-large\">\r\n                <Button className=\"bottom-button\" style={{ marginBottom: \"20px\" }} variant=\"outlined\"\r\n                    component=\"span\" onClick={changeInput}>\r\n                    Switch back to Microphone Input\r\n                </Button>\r\n                &nbsp;\r\n            </label>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default SwitchMicMusic;","import React, { useState } from 'react'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\n\r\nconst FreqSelect = (classes) => {\r\n\r\n    const [freq, setFreq] = useState(localStorage.getItem('freq') === null ? 50 : localStorage.getItem('freq'));\r\n\r\n    const updateFreq = (e) => {\r\n        try {\r\n            if (e.target.value > 9999) {\r\n                setFreq(9999);\r\n                localStorage.setItem('freq', '9999');\r\n            } else {\r\n                if (e.target.value === '' || e.target.value < 50) {\r\n                    setFreq(e.target.value)\r\n                } else {\r\n                    setFreq(parseInt(e.target.value));\r\n                    localStorage.setItem('freq', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setFreq(0);\r\n            localStorage.setItem('freq', '0');\r\n        }\r\n    };\r\n\r\n    const changeText = () => {\r\n        if (freq === '' || freq < 50) {\r\n            setFreq(50);\r\n            localStorage.setItem('freq', '50');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"freq \" + classes.formControl}>\r\n            <WhiteTextField variant=\"standard\" type=\"number\" id=\"outlined-number\" label=\"Frequency\" value={freq}\r\n                onChange={updateFreq}\r\n                InputLabelProps={{ shrink: true, }} onBlur={changeText} />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default FreqSelect;","import React, { useState } from 'react'\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { getYtLink } from \"./service\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\n\r\nconst MusicFromLink = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function youtube_parser(url) {\r\n        var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n        var match = url.match(regExp);\r\n        return (match && match[7].length === 11) ? match[7] : false;\r\n    }\r\n\r\n    const manageChange = (e) => {\r\n        const link = e.target.value;\r\n        if (link.length > 15 && youtube_parser(link) !== false) {\r\n            const id = youtube_parser(link);\r\n            setLoading(true);\r\n            getYtLink(id, (err, url) => {\r\n                setLoading(false);\r\n                if (err) {\r\n                    localStorage.setItem(\"error\", err.message);\r\n                    global.refreshCanvas();\r\n                } else {\r\n                    localStorage.setItem('micOrSound', 'sound');\r\n                    localStorage.setItem('musicName', url.title);\r\n                    localStorage.setItem(\"ytlink\", url.mp3);\r\n                    global.refreshCanvas();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return <></>; //This feature doesn't work anymore\r\n    /*\r\n        return (\r\n            <label className=\"right-when-large\" style={{marginBottom: \"20px\"}}>\r\n                <TextField id=\"outlined-basic\" style={{marginBottom: \"20px\"}} className=\"bottom-button\"\r\n                           placeholder=\"YouTube Link\" variant=\"outlined\"\r\n                           onChange={e => manageChange(e)}/>\r\n                &nbsp;\r\n                {loading &&\r\n                <Box sx={{display: 'flex'}}>\r\n                    <CircularProgress size={30}/>\r\n                    &nbsp;\r\n                </Box>\r\n                }\r\n            </label>\r\n        )\r\n     */\r\n};\r\n\r\nexport default MusicFromLink;","import React, { useState } from 'react'\r\n\r\nconst BehindCanvas = () => {\r\n    const [percent, setPercent] = useState(\"\");\r\n\r\n    window.addEventListener(\"storage\", () => {\r\n        if (localStorage.getItem(\"percentLoaded\") !== null) {\r\n            setPercent(localStorage.getItem(\"percentLoaded\"));\r\n        }\r\n    });\r\n\r\n    if (localStorage.getItem(\"percentLoaded\") !== null) {\r\n        return (\r\n            <div className=\"troubleshooting\">\r\n                Loaded {percent}%\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"troubleshooting\">\r\n                If the canvas doesn't load, try the following:\r\n                <ol>\r\n                    <li>Press Reload Canvas</li>\r\n                    {localStorage.getItem('musicData') !== null ? <li><b>Select your sound file again</b></li> :\r\n                        <li>Check microphone permissions for your browser in your OS's system</li>}\r\n                    <li>Disable any ad or javascript blocker that might cause an interference</li>\r\n                    <li>Press <b>Reset Visualizer</b></li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default BehindCanvas;","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n    return (\r\n        <>\r\n            <p style={{ marginLeft: \"20px\", color: \"white\" }}>Error: Page not found!</p>\r\n            <Link style={{ fontSize: \"24px\", marginLeft: \"20px\", color: \"white\" }} to=\"/\">Oh no, go back</Link>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Datapoints = (classes) => {\r\n\r\n\r\n    const handleBarMultiple = (value) => {\r\n        if (localStorage.getItem('barMultiple') != value) {\r\n            localStorage.setItem('barMultiple', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 5,\r\n            label: '2^5',\r\n        },\r\n        {\r\n            value: 8,\r\n            label: '2^8',\r\n        },\r\n        {\r\n            value: 12,\r\n            label: '2^12',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Amount of Datapoints\r\n                </InputLabel>\r\n                <Slider style={{ marginTop: \"24px\" }}\r\n                    getAriaValueText={handleBarMultiple}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={5}\r\n                    max={14}\r\n                    defaultValue={localStorage.getItem('barMultiple') === null ? 9 : localStorage.getItem('barMultiple')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Datapoints;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst BackgroundColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('bcolor') === null ? '#000000' : localStorage.getItem('bcolor'));\r\n\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('bcolor') !== color) {\r\n            localStorage.setItem('bcolor', color);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Background Color\r\n                </InputLabel>\r\n                <ColorPicker style={{ marginTop: \"18px\" }}\r\n                    name='color'\r\n                    defaultValue={color}\r\n                    className={\"all-form-inputs \" + classes.root}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                    onChange={setColor}\r\n\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default BackgroundColor;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst SoundRange = (classes) => {\r\n    const first = localStorage.getItem('unscaledBarRange') === null ? 0 : Number(localStorage.getItem('unscaledBarRange').split(\",\")[0]);\r\n    const last = localStorage.getItem('unscaledBarRange') === null ? 50 : Number(localStorage.getItem('unscaledBarRange').split(\",\")[1]);\r\n\r\n    const [value, setValue] = React.useState([first, last]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        console.log(newValue);\r\n        if (newValue[0] - newValue[1] > 1 || newValue[0] - newValue[1] < -1) {\r\n            setValue(newValue);\r\n            if (localStorage.getItem('unscaledBarRange') != value) {\r\n                localStorage.setItem('unscaledBarRange', value);\r\n                localStorage.setItem('barRange', value.map(val => calculateValue(val)));\r\n            }\r\n        }\r\n    };\r\n\r\n    function calculateValue(value) {\r\n        const val = Math.round(1.04713 ** value * 10) / 10;\r\n        return val;\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n    if (localStorage.getItem(\"micOrSound\") !== \"toneGenerator\" || localStorage.getItem(\"pinkNoise\") === \"true\") {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Frequency Range\r\n                    </InputLabel>\r\n                    <Slider style={{ marginTop: \"24px\" }}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        scale={calculateValue}\r\n                        marks={marks}\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\n\r\nexport default SoundRange;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Height = (classes) => {\r\n\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') != value) {\r\n            localStorage.setItem('height', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 200,\r\n            label: '200',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Height\r\n                </InputLabel>\r\n                <Slider style={{ marginTop: \"24px\" }}\r\n                    getAriaValueText={handleHeight}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={200}\r\n                    defaultValue={localStorage.getItem('height') === null ? 90 : localStorage.getItem('height')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Height;","import React, { useState } from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\n\r\nconst BarMargin = (classes) => {\r\n\r\n    const [margin, setMargin] = useState(localStorage.getItem('barMargin') === null ? 5 : localStorage.getItem('barMargin'));\r\n    const type = localStorage.getItem('type') === null ? 'bar' : localStorage.getItem('type');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setMargin(0);\r\n                localStorage.setItem('barMargin', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setMargin(1000);\r\n                localStorage.setItem('barMargin', '1000');\r\n            } else {\r\n                setMargin(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('barMargin', '0');\r\n                } else {\r\n                    localStorage.setItem('barMargin', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setMargin(0);\r\n            localStorage.setItem('barMargin', '0');\r\n        }\r\n    };\r\n\r\n    if (type === 'bar') {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"outlined-number\" label=\"Bar Margin\"\r\n                        value={margin}\r\n                        onChange={updateMargin} InputLabelProps={{\r\n                            shrink: true,\r\n                        }} />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default BarMargin;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst LineColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('linecolor') === null ? '#ffffff' : localStorage.getItem('linecolor'));\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('linecolor') !== color) {\r\n            localStorage.setItem('linecolor', color);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Line Color\r\n                </InputLabel>\r\n                <ColorPicker style={{ marginTop: \"18px\" }}\r\n                    name='color'\r\n                    defaultValue={color}\r\n                    className={\"all-form-inputs \" + classes.root}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                    onChange={setColor}\r\n\r\n                />\r\n\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineColor;","import React, { useState } from 'react'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\n\r\nconst LineWeight = (classes) => {\r\n\r\n    const [lWeight, setLWeight] = useState(localStorage.getItem('lineWeight') === null ? 1 : localStorage.getItem('lineWeight'));\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLWeight(0);\r\n                localStorage.setItem('lineWeight', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLWeight(1000);\r\n                localStorage.setItem('lineWeight', '1000');\r\n            } else {\r\n                setLWeight(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineWeight', '0');\r\n                } else {\r\n                    localStorage.setItem('lineWeight', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLWeight(0);\r\n            localStorage.setItem('lineWeight', '1');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"standard-basic\" label=\"Line Weight\" value={lWeight}\r\n                    onChange={updateMargin} />\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineWeight;","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst LineFill = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('lineFill') === null ? false : 'true' === localStorage.getItem('lineFill'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bar' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('lineFill', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line' || vis === 'line_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <FormControlLabel className={classes.formControl} style={{ color: \"#b9b9bb\" }}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Fill\"\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineFill;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst FillColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('fillcolor') === null ? '#ffffff' : localStorage.getItem('fillcolor'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const aSettings = localStorage.getItem('settings') === \"Advanced\";\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('fillcolor') !== color) {\r\n            localStorage.setItem('fillcolor', color);\r\n\r\n            if(!aSettings){\r\n                localStorage.setItem('linecolor', color);\r\n            }\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    if (vis === 'multiColor' || vis === 'colorful_circle') {\r\n        return (<></>);\r\n    } else {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Fill Color\r\n                    </InputLabel>\r\n                    <ColorPicker style={{ marginTop: \"18px\" }}\r\n                        name='color'\r\n                        defaultValue={color}\r\n                        className={\"all-form-inputs \" + classes.root}\r\n                        // value={this.state.color} - for controlled component\r\n\r\n                        onChange={setColor}\r\n\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FillColor;","import React, { useState } from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\n\r\nconst LineCircleSize = (classes) => {\r\n\r\n    const [lCircleSize, setLCircleSize] = useState(localStorage.getItem('lineCircleSize') === null ? 50 : localStorage.getItem('lineCircleSize'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLCircleSize(0);\r\n                localStorage.setItem('lineCircleSize', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLCircleSize(1000);\r\n                localStorage.setItem('lineCircleSize', '1000');\r\n            } else {\r\n                setLCircleSize(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineCircleSize', '0');\r\n                } else {\r\n                    localStorage.setItem('lineCircleSize', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLCircleSize(0);\r\n            localStorage.setItem('lineCircleSize', '1');\r\n        }\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"standard-basic\"\r\n                        label=\"Line CircleSize\"\r\n                        value={lCircleSize}\r\n                        onChange={updateMargin} />\r\n                </Box>\r\n            </FormControl>\r\n        )\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\nexport default LineCircleSize;","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst LineCircleShow = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('showLineCircle') === null ? false : 'true' === localStorage.getItem('showLineCircle'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('showLineCircle', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <FormControlLabel className={classes.formControl} style={{ color: \"#b9b9bb\" }}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Show Circle\"\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineCircleShow;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Clipping = (classes) => {\r\n\r\n\r\n    const handleClipping = (value) => {\r\n        if (localStorage.getItem('clipping') != value) {\r\n            localStorage.setItem('clipping', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: '0',\r\n        },\r\n        {\r\n            value: 200,\r\n            label: '200',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Clipping\r\n                </InputLabel>\r\n                <Slider style={{ marginTop: \"24px\" }}\r\n                    getAriaValueText={handleClipping}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={200}\r\n                    defaultValue={localStorage.getItem('clipping') === null ? 100 : localStorage.getItem('clipping')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Clipping;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Attack = (classes) => {\r\n\r\n\r\n    const handleAttack = (value) => {\r\n        if (localStorage.getItem('attack') != value) {\r\n            localStorage.setItem('attack', value);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: '0',\r\n        },\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Attack\r\n                </InputLabel>\r\n                <Slider style={{ marginTop: \"24px\" }}\r\n                    getAriaValueText={handleAttack}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={0.01}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={0.99}\r\n                    defaultValue={localStorage.getItem('attack') === null ? 0.9 : localStorage.getItem('attack')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Attack;","import React from 'react';\r\nimport Datapoints from './General/Datapoints';\r\nimport BackgroundColor from './General/BackgroundColor';\r\nimport SoundRange from './General/SoundRange';\r\nimport Height from './General/Height';\r\nimport BarMargin from \"./Bar/BarMargin\";\r\nimport LineColor from \"./General/LineColor\";\r\nimport LineWeight from \"./General/LineWeight\";\r\nimport BarType from \"./Bar/BarType\";\r\nimport LineType from \"./Line/LineType\";\r\nimport LineFill from \"./Line/LineFill\";\r\nimport FillColor from \"./General/BarColor\";\r\nimport LineCircleSize from \"./Line/LineCircleSize\";\r\nimport LineCircleShow from \"./Line/LineCircleShow\";\r\nimport Clipping from \"./General/Clipping\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport Attack from \"./General/Attack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Selection = () => {\r\n    const classes = useStyles();\r\n    const aSettings = localStorage.getItem('settings') === \"Advanced\";\r\n\r\n    return (\r\n        <>\r\n            <div className=\"s-container\">\r\n                <BarType classes={classes} />\r\n                <BarMargin classes={classes} />\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <LineType classes={classes} />\r\n                <LineFill classes={classes} />\r\n                {aSettings && <LineCircleSize classes={classes} />}\r\n                <LineCircleShow classes={classes} />\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <Datapoints classes={classes} />\r\n                {aSettings && <Attack classes={classes} />}\r\n                <SoundRange classes={classes} />\r\n                <Height classes={classes} />\r\n                {aSettings && <>\r\n                    <Clipping classes={classes} />\r\n                    <LineWeight classes={classes} />\r\n                    <LineColor classes={classes} />\r\n                </>}\r\n                <FillColor classes={classes} />\r\n                <BackgroundColor classes={classes} />\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Selection;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport { createSvgIcon } from '@mui/material';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 360,\r\n    bgcolor: '#111',\r\n    boxShadow: 24,\r\n    p: 3,\r\n    borderRadius: '60px',\r\n    paddingBottom: '32px',\r\n};\r\n\r\nconst PwaModal = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const ShareIcon = createSvgIcon(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\"><path d=\"M30.3 13.7L25 8.4l-5.3 5.3-1.4-1.4L25 5.6l6.7 6.7z\" /><path d=\"M24 7h2v21h-2z\" /><path d=\"M35 40H15c-1.7 0-3-1.3-3-3V19c0-1.7 1.3-3 3-3h7v2h-7c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h20c.6 0 1-.4 1-1V19c0-.6-.4-1-1-1h-7v-2h7c1.7 0 3 1.3 3 3v18c0 1.7-1.3 3-3 3z\" /></svg>,\r\n        'Home',\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <a style={{ cursor: \"pointer\" }} className=\"a-footer\" onClick={handleOpen}><p className=\"footer-p\">Mobile</p></a>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\">\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Tap<SvgIcon component={ShareIcon} fontSize=\"large\" sx={{ marginBottom: -0.5 }} />&nbsp; then \"Add to Home Screen\"\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PwaModal;","import React from 'react'\r\nimport {\r\n    EmailShareButton,\r\n    WhatsappShareButton,\r\n    RedditShareButton,\r\n    LinkedinShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    HatenaShareButton,\r\n    FacebookShareButton,\r\n    FacebookMessengerShareButton,\r\n    TwitterShareButton\r\n} from \"react-share\";\r\n\r\n\r\nimport {\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    FacebookMessengerIcon,\r\n    HatenaIcon,\r\n    LinkedinIcon,\r\n    RedditIcon,\r\n    TelegramIcon,\r\n    TumblrIcon,\r\n    WhatsappIcon,\r\n    TwitterIcon\r\n} from \"react-share\";\r\n\r\nconst Share = () => {\r\n    const shareUrl = 'https://soundvisualiser.com';\r\n\r\n    return (\r\n        <div style={{ margin: \"20px\" }}>\r\n            <EmailShareButton url={shareUrl}><EmailIcon size={42} round={true} /></EmailShareButton>\r\n            <FacebookShareButton url={shareUrl}><FacebookIcon size={42} round={true} /></FacebookShareButton>\r\n            <FacebookMessengerShareButton url={shareUrl}><FacebookMessengerIcon size={42}\r\n                round={true} /></FacebookMessengerShareButton>\r\n            <TwitterShareButton url={shareUrl}><TwitterIcon size={42} round={true} /></TwitterShareButton>\r\n            <WhatsappShareButton url={shareUrl}><WhatsappIcon size={42} round={true} /></WhatsappShareButton>\r\n            <RedditShareButton url={shareUrl}><RedditIcon size={42} round={true} /></RedditShareButton>\r\n            <LinkedinShareButton url={shareUrl}><LinkedinIcon size={42} round={true} /></LinkedinShareButton>\r\n            <TelegramShareButton url={shareUrl}><TelegramIcon size={42} round={true} /></TelegramShareButton>\r\n            <TumblrShareButton url={shareUrl}><TumblrIcon size={42} round={true} /></TumblrShareButton>\r\n            <HatenaShareButton url={shareUrl}><HatenaIcon size={42} round={true} /></HatenaShareButton>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Share;\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PwaModal from './PwaModal';\r\nimport Share from \"./Share\";\r\n\r\nconst Footer = () => {\r\n\r\n    const [bS, setBS] = useState(localStorage.getItem(\"batteryS\") !== null ? localStorage.getItem(\"batteryS\") : \"true\");\r\n\r\n    const Mailto = ({ mailto, label }) => {\r\n        return (\r\n            <Link\r\n                className=\"a-footer\"\r\n                onClick={(e) => {\r\n                    window.location = mailto;\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <p className=\"footer-p\">{label}</p>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"share-container\">\r\n                <h2 style={{ marginLeft: \"32px\" }}>Share Soundvisualiser</h2>\r\n                <Share />\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{ marginLeft: \"0\" }}>Resources</h3>\r\n                <Link className=\"a-footer\"\r\n                    to=\"./main\"><p className=\"footer-p\">Remove footer</p></Link>\r\n                <a className=\"a-footer\"\r\n                    href=\"/visualizer/index.html\"\r\n                    target=\"_blank\"><p className=\"footer-p\">Fullscreen visualizer</p></a>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{ marginLeft: \"0\" }}>Download</h3>\r\n                <PwaModal />\r\n                <a className=\"a-footer\"\r\n                    href=\"https://support.mozilla.org/en-US/kb/create-desktop-shortcut-website\"\r\n                    target=\"_blank\"><p className=\"footer-p\">Desktop</p></a>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{ marginLeft: \"0\" }}>Community</h3>\r\n                <a className=\"a-footer\"\r\n                    href=\"https://reddit.com/r/SoundVisualization\"\r\n                    target=\"_blank\"><p className=\"footer-p\">Reddit</p></a>\r\n                <Mailto label=\"Give Feedback\" mailto=\"mailto:soundvisualiser@gmail.com?subject=User Feedback&body=Hi Noel,%0D%0A%0D%0AI would like to give you some feedback.%0D%0A%0D%0AHere's something that caught my eye: %0D%0A●%0D%0A%0D%0A Here's something I like: %0D%0A●%0D%0A%0D%0A Here's something I don't like:%0D%0A●%0D%0A%0D%0A Cheers, \" />\r\n                <Mailto label=\"Contact\" mailto=\"mailto:soundvisualiser@gmail.com?subject=Contact\" />\r\n            </div>\r\n            <div className=\"f-container\" style={{ maxWidth: \"230px\" }}>\r\n                {bS === \"true\" ?\r\n                    <>\r\n                        <h3 style={{ marginLeft: \"0\" }}>Battery saver enabled</h3>\r\n                        <p>\r\n                            <b style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                setBS(\"false\");\r\n                                localStorage.setItem(\"batteryS\", \"false\");\r\n                            }}>Disable it\r\n                            </b>\r\n                            &nbsp;to keep the app active when the tab is hidden.\r\n                        </p>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <h3 style={{ marginLeft: \"0\" }}>Battery saver disabled</h3>\r\n                        <p>\r\n                            <b style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                setBS(\"true\");\r\n                                localStorage.setItem(\"batteryS\", \"true\");\r\n                            }}>Enable it\r\n                            </b>\r\n                            &nbsp;to make the app inactive when the tab is hidden.\r\n                        </p>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            throwsError: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return {\r\n            throwsError: true\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error);\r\n        console.log(info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.throwsError) {\r\n            return (\r\n                <></>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useWindowDimensions from \"../helpers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport Button from \"@mui/material/Button\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport { styled } from '@mui/material';\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\n\r\nconst LandingPage = () => {\r\n\r\n    const [y, setY] = useState(null);\r\n\r\n    const box = React.createRef();\r\n\r\n    useEffect(() => {\r\n        if (!box || isMobile) return;\r\n\r\n        const pos = box.current?.offsetTop;\r\n        const height = box.current?.offsetHeight;\r\n\r\n\r\n        if (y > pos && y < pos + height) {\r\n            const sliderPos = Math.round((y - pos) / height * 100);\r\n            localStorage.setItem('height', String(sliderPos));\r\n        }\r\n\r\n    }, [y]);\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    const checkWidth = width > 999;\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') !== String(100 - value)) {\r\n            localStorage.setItem('height', String(100 - value));\r\n        }\r\n    };\r\n\r\n    const RoundedDash = () => (\r\n        <SvgIcon viewBox=\"0 0 10 10\" sx={{ transform: \"scale(1.2)\" }}>\r\n            <line x1=\"2.2\" y1=\"5.2\" x2=\"7.8\" y2=\"5.2\" stroke=\"#acb3b9\"\r\n                stroke-linecap=\"round\" />\r\n        </SvgIcon>\r\n    )\r\n\r\n\r\n    const CustomSlider = withStyles({\r\n        root: {\r\n            color: \"#8f5024\",\r\n            width: 7\r\n        },\r\n        disabled: {\r\n            color: \"#8f5024\"\r\n        },\r\n        thumb: {\r\n            color: \"#8f5024\",\r\n            height: 30,\r\n            width: 30,\r\n        },\r\n        rail: {\r\n            color: \"#8f5024\"\r\n        },\r\n        track: {\r\n            color: \"#8f5024\"\r\n        },\r\n        active: {\r\n            color: \"#8f5024\",\r\n            backgroundColor: \"#8f5024\",\r\n        },\r\n    })(Slider);\r\n\r\n    const CustomButton = styled(Button)({\r\n        backgroundColor: '#c36522',\r\n        '&:hover': {\r\n            backgroundColor: '#984f1b',\r\n        },\r\n        '&:active': {\r\n            backgroundColor: '#c36522',\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div style={{\r\n            backgroundColor: \"#0f0e0e\", position: \"fixed\",\r\n            padding: 0,\r\n            margin: 0,\r\n            top: 0,\r\n            left: 0, width: \"100%\",\r\n            height: \"100%\"\r\n        }}>\r\n            {!isMobile &&\r\n                <div style={{\r\n                    position: \"fixed\",\r\n                    padding: 0,\r\n                    margin: 0,\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}\r\n                    onMouseMove={event => setY(event.pageY)}></div>\r\n            }\r\n            <Grid container spacing={2} align=\"center\" sx={{ height: \"100vh\", paddingX: 0 }}>\r\n                <Grid item xs={checkWidth ? 6 : 12} justify=\"center\" sx={{ marginY: \"auto\" }}>\r\n                    <Container sx={{ maxWidth: \"650px!important\" }}>\r\n                        <Typography variant=\"h2\" component=\"div\" sx={{ fontWeight: 700 }}>Microphone and Music Visualizer</Typography>\r\n                        <Typography variant=\"h4\" sx={{ fontWeight: 400, marginY: \"calc(6vh + 10px)\" }}>\r\n                            Free <RoundedDash /> No Login <RoundedDash /> Forever </Typography>\r\n                    </Container>\r\n                    <Link to=\"./visualiser\" style={{ textDecoration: \"none\" }}>\r\n                        <CustomButton variant=\"contained\" size=\"large\" onClick={() => localStorage.setItem('height', 90)} color=\"primary\"\r\n                            onMouseMove={event => !isMobile && setY(event.pageY)}\r\n                            sx={{ marginY: 3, width: 350, paddingY: 1.5, borderRadius: 15 }}>\r\n                            Open Visualizer\r\n                        </CustomButton>\r\n                    </Link>\r\n                </Grid>\r\n                {checkWidth &&\r\n                    <Grid item xs={6} sx={{ marginY: \"auto\" }}>\r\n                        <Grid container>\r\n                            <Grid item xs={1}>\r\n                                <Box sx={{ minHeight: \"350px\", height: \"45vh\", marginTop: \"4.5vh\" }} ref={box}>\r\n                                    <ErrorBoundary>\r\n                                        <CustomSlider\r\n                                            sx={{\r\n                                                '& input[type=\"range\"]': {\r\n                                                    WebkitAppearance: 'slider-vertical',\r\n                                                },\r\n                                            }}\r\n                                            orientation=\"vertical\"\r\n                                            defaultValue={localStorage.getItem('height') === null ? 100 : 100 - localStorage.getItem('height')}\r\n                                            aria-label=\"Height\"\r\n                                            getAriaValueText={handleHeight}\r\n                                            valueLabelDisplay=\"off\"\r\n                                            disabled={!isMobile}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <iframe id=\"iframe1\" title=\"visualizer\" src=\"/visualizer/LandingPageVis.html\"\r\n                                    style={{ height: \"50vh\" }} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n            <div className='decorative-wave bottom' onMouseMove={event => !isMobile && setY(event.pageY)}></div>\r\n            <div className='decorative-wave top' onMouseMove={event => !isMobile && setY(event.pageY)}></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LandingPage;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport { useState } from \"react\";\r\n\r\nconst options = ['Start Rendering PNG (best performance)', 'Start Rendering webm'];\r\n\r\nconst Record = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [record, setRecord] = useState(\"false\");\r\n\r\n    const handleClick = () => {\r\n        if (selectedIndex === 0) {\r\n            setRecord(\"png\");\r\n            localStorage.setItem(\"record\", \"png\");\r\n        }\r\n        if (selectedIndex === 1) {\r\n            setRecord(\"webm\");\r\n            localStorage.setItem(\"record\", \"webm\");\r\n        }\r\n    };\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const startRecording = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <ButtonGroup variant=\"outlined\" ref={anchorRef} aria-label=\"split button\">\r\n                    <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        aria-controls={open ? 'split-button-menu' : undefined}\r\n                        aria-expanded={open ? 'true' : undefined}\r\n                        aria-label=\"select merge strategy\"\r\n                        aria-haspopup=\"menu\"\r\n                        onClick={handleToggle}\r\n                    >\r\n                        <ArrowDropDownIcon />\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <Popper\r\n                    open={open}\r\n                    anchorEl={anchorRef.current}\r\n                    role={undefined}\r\n                    transition\r\n                    disablePortal\r\n                >\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{\r\n                                transformOrigin:\r\n                                    placement === 'bottom' ? 'center top' : 'center bottom',\r\n                            }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList id=\"split-button-menu\">\r\n                                        {options.map((option, index) => (\r\n                                            <MenuItem\r\n                                                key={option}\r\n                                                selected={index === selectedIndex}\r\n                                                onClick={(event) => handleMenuItemClick(event, index)}\r\n                                            >\r\n                                                {option}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n\r\n    if (record !== \"false\") {\r\n        return (\r\n            <Button className=\"bottom-button\" variant=\"outlined\"\r\n                onClick={() => {\r\n                    setRecord(\"false\");\r\n                    localStorage.setItem(\"record\", \"false\");\r\n                }}>End Recording</Button>\r\n        )\r\n    } else {\r\n        return startRecording();\r\n    }\r\n\r\n}\r\n\r\nexport default Record;","import React, { useState } from \"react\"\r\nimport Slider from \"@mui/material/Slider\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Record from \"./Record\";\r\n\r\n\r\nconst AudioPlayer = () => {\r\n    const [endTime, setEndTime] = useState(0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [checked, setChecked] = useState(localStorage.getItem(\"startOnZero\") === null ? false : localStorage.getItem(\"startOnZero\"));\r\n\r\n\r\n    window.addEventListener(\"storage\", () => {\r\n        if (localStorage.getItem('currentTime') !== currentTime) {\r\n            setCurrentTime(Number(localStorage.getItem('currentTime')));\r\n        }\r\n        if (localStorage.getItem('duration') !== endTime) {\r\n            setEndTime(Number(localStorage.getItem('duration')));\r\n        }\r\n    });\r\n\r\n    const isDisabled = () => {\r\n        return localStorage.getItem(\"micOrSound\") !== \"sound\";\r\n    };\r\n\r\n    const formatSmol = (num) => {\r\n        if (num < 10) {\r\n            return `0${num}`\r\n        } else if (num < 60) {\r\n            return `${num}`\r\n        }\r\n    };\r\n\r\n\r\n    const formatToTime = (sec) => {\r\n        if (sec === undefined) {\r\n            sec = 0;\r\n        }\r\n        sec = Math.floor(sec);\r\n        const min = Math.floor(sec / 60);\r\n        sec = sec % 60;\r\n        return `${formatSmol(min)}:${formatSmol(sec)}`\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        localStorage.setItem(\"changeTime\", newValue);\r\n    };\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        localStorage.setItem(\"startOnZero\", event.target.checked);\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div style={{ margin: \"0 40px 20px 40px\", paddingBottom: \"15px\", marginTop: \"-25px\" }}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs>\r\n                    <div className=\"box-shadowy\">\r\n                        <Grid container spacing={3} alignItems=\"center\">\r\n                            <Grid item>\r\n                                {formatToTime(currentTime)}\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Slider\r\n                                    className=\"time-slider\"\r\n                                    aria-label=\"Time\"\r\n                                    disabled={isDisabled()}\r\n                                    value={currentTime}\r\n                                    max={endTime}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {formatToTime(endTime)}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControlLabel control={<Checkbox color={\"primary\"} checked={checked} disabled={isDisabled()} />}\r\n                        label=\"Start on zero\" onChange={handleCheckboxChange} />\r\n                </Grid>\r\n                <Grid item xs className=\"record\">\r\n                    <Record />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AudioPlayer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import TextField from \"@mui/material/TextField\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nexport const WhiteTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            color: '#fff!important', // Text color\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n        },\r\n    },\r\n})(TextField);","import { useState, useEffect } from 'react';\r\n\r\nconst getWindowDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n};\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n\r\n\r\nexport function unpackSettings(data) {\r\n\r\n    const res = data.replace(\"{\", \"\").replace(\"}\", \"\").split(\":\");\r\n\r\n    const set = res.map(r => {\r\n        if (!r.includes(\",\")) {\r\n            return `\\\"${r}\\\"`;\r\n        }\r\n        const sub = r.split(\",\");\r\n        if (sub.length === 2) {\r\n            return `\\\"${sub[0]}\\\",\\\"${sub[1]}\\\"`\r\n        } else {\r\n            return `\\\"${sub[0]},${sub[1]}\\\",\\\"${sub[2]}\\\"`\r\n        }\r\n    }).join(':');\r\n\r\n    const setting = `{${set}}`.replace(/§/g, \"#\")\r\n\r\n    const settings = JSON.parse(setting);\r\n\r\n    const range = settings.r.split(\",\").map(val => Math.round(1.04713 ** Number(val) * 10) / 10).join();\r\n\r\n    localStorage.setItem('micOrSound', settings.m);\r\n    localStorage.setItem('type', settings.t);\r\n    localStorage.setItem('vis', settings.v);\r\n    localStorage.setItem('barMultiple', settings.b);\r\n    localStorage.setItem('attack', settings.a);\r\n    localStorage.setItem('unscaledBarRange', settings.r);\r\n    localStorage.setItem('barRange', range);\r\n    localStorage.setItem('height', settings.h);\r\n    localStorage.setItem('clipping', settings.c);\r\n    localStorage.setItem('lineWeight', settings.w);\r\n    localStorage.setItem('linecolor', settings.l);\r\n    localStorage.setItem('fillcolor', settings.f);\r\n    localStorage.setItem('bcolor', settings.o);\r\n    localStorage.setItem('barMargin', settings.g);\r\n    localStorage.setItem('lineFill', settings.n);\r\n    localStorage.setItem('lineCircleSize', settings.s);\r\n    localStorage.setItem('showLineCircle', settings.i);\r\n}\r\n\r\nexport function createSettings() {\r\n    const settings = {\r\n        \"m\": localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'),\r\n        \"t\": localStorage.getItem('type') === null ? \"bar\" : localStorage.getItem('type'),\r\n        \"v\": localStorage.getItem('vis') === null ? \"bars\" : localStorage.getItem('vis'),\r\n        \"b\": localStorage.getItem('barMultiple') === null ? \"9\" : localStorage.getItem('barMultiple'),\r\n        \"a\": localStorage.getItem('attack') === null ? \"0.9\" : localStorage.getItem('attack'),\r\n        \"r\": localStorage.getItem('unscaledBarRange') === null ? \"0,50\" : localStorage.getItem('unscaledBarRange'),\r\n        \"h\": localStorage.getItem('height') === null ? \"90\" : localStorage.getItem('height'),\r\n        \"c\": localStorage.getItem('clipping') === null ? \"100\" : localStorage.getItem('clipping'),\r\n        \"w\": localStorage.getItem('lineWeight') === null ? \"1\" : localStorage.getItem('lineWeight'),\r\n        \"l\": localStorage.getItem('linecolor') === null ? \"#fff\" : localStorage.getItem('linecolor'),\r\n        \"f\": localStorage.getItem('fillcolor') === null ? \"#fff\" : localStorage.getItem('fillcolor'),\r\n        \"o\": localStorage.getItem('bcolor') === null ? \"#000\" : localStorage.getItem('bcolor'),\r\n        \"g\": localStorage.getItem('barMargin') === null ? \"5\" : localStorage.getItem('barMargin'),\r\n        \"n\": localStorage.getItem('lineFill') === null ? \"false\" : localStorage.getItem('lineFill'),\r\n        \"s\": localStorage.getItem('lineCircleSize') === null ? \"50\" : localStorage.getItem('lineCircleSize'),\r\n        \"i\": localStorage.getItem('showLineCircle') === null ? \"false\" : localStorage.getItem('showLineCircle'),\r\n    }\r\n\r\n    return JSON.stringify(settings).replace(/\"/g, '').replace(/#/g, \"§\");\r\n}"],"sourceRoot":""}