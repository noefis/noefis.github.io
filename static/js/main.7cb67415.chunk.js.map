{"version":3,"sources":["App.js","components/BackgroundColor.js","components/LineColor.js","components/BarColor.js","components/Datapoints.js","components/SoundRange.js","components/Height.js","components/BarMargin.js","components/LineWeight.js","components/BarType.js","components/LineType.js","components/LineFill.js","components/Selection.js","reportWebVitals.js","index.js"],"names":["App","useState","reload","setReload","global","refreshCanvas","theme","createMuiTheme","palette","type","className","id","variant","onClick","href","target","localStorage","clear","src","title","BackgroundColor","classes","color","getItem","style","minWidth","marginLeft","marginRight","marginBottom","formControl","shrink","marginTop","name","defaultValue","onChange","undefined","setItem","LineColor","FillColor","Datapoints","FormControl","InputLabel","Slider","getAriaValueText","value","valueLabelDisplay","step","marks","label","min","max","SoundRange","first","Number","split","last","React","setValue","event","newValue","Height","BarMargin","margin","setMargin","TextField","e","parseInt","LineWeight","lWeight","setLWeight","BarType","diagram","setDiagram","Select","labelId","displayEmpty","selectEmpty","MenuItem","LineType","LineFill","checked","setChecked","FormControlLabel","control","Checkbox","useStyles","makeStyles","spacing","Selection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb67415.chunk.js","sourcesContent":["import {useState} from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport Button from '@material-ui/core/Button';\n\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\nfunction App() {\n    const [reload, setReload] = useState(0);\n\n    global.refreshCanvas = () => {\n        setReload(reload + 1);\n    };\n\n    const theme = createMuiTheme({\n        palette: {\n            type: 'dark',\n        },\n    });\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n                <Selection key={reload}/>\n\n                <div id=\"full-screen\">\n                    <Button className=\"bottom-button\" variant=\"outlined\" onClick={() => setReload(reload + 1)}>reload\n                        Cavas</Button> &nbsp;\n                    <Button className=\"bottom-button\" variant=\"outlined\" href=\"/visualizer\" target=\"_blank\"> Open\n                        Visualizer in\n                        Fullscreen</Button> &nbsp;\n                    <Button className=\"bottom-button\" variant=\"outlined\" onClick={() => {\n                        setReload(reload + 1);\n                        localStorage.clear()\n                    }}> Reset Visualizer</Button>\n                </div>\n            </ThemeProvider>\n            <iframe key={reload} src=\"/visualizer\" title={reload}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst BackgroundColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('bcolor') === null ? '#000000' : localStorage.getItem('bcolor'));\r\n\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('bcolor') !== color) {\r\n            localStorage.setItem('bcolor', color);\r\n        }\r\n        if (color === undefined) {\r\n            global.refreshCanvas();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}\r\n                     className={classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Background Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default BackgroundColor;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst LineColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('linecolor') === null ? '#ffffff' : localStorage.getItem('linecolor'));\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('linecolor') !== color) {\r\n            localStorage.setItem('linecolor', color);\r\n        }\r\n        if (color === undefined) {\r\n            global.refreshCanvas();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}\r\n                     className={classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Line Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineColor;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst FillColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('fillcolor') === null ? '#ffffff' : localStorage.getItem('fillcolor'));\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('fillcolor') !== color) {\r\n            localStorage.setItem('fillcolor', color);\r\n        }\r\n        if (color === undefined) {\r\n            global.refreshCanvas();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}\r\n                     className={classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Fill Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default FillColor;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Datapoints = (classes) => {\r\n\r\n\r\n    const handleBarMultiple = (value) => {\r\n        if (localStorage.getItem('barMultiple') != value) {\r\n            localStorage.setItem('barMultiple', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 5,\r\n            label: '2^5 bars',\r\n        },\r\n        {\r\n            value: 8,\r\n            label: '2^8 bars',\r\n        },\r\n        {\r\n            value: 12,\r\n            label: '2^12 bars',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}\r\n                     style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Amount of Datapoints\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleBarMultiple}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={5}\r\n                    max={14}\r\n                    defaultValue={localStorage.getItem('barMultiple') === null ? 9 : localStorage.getItem('barMultiple')}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Datapoints;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst SoundRange = (classes) => {\r\n    const first = localStorage.getItem('barRange') === null ? 0 : Number(localStorage.getItem('barRange').split(\",\")[0]);\r\n    const last = localStorage.getItem('barRange') === null ? 100 : Number(localStorage.getItem('barRange').split(\",\")[1]);\r\n\r\n    const [value, setValue] = React.useState([first, last]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        if (localStorage.getItem('barRange') != value) {\r\n            localStorage.setItem('barRange', value);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}\r\n                     style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Range\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    marks={marks}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default SoundRange;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Height = (classes) => {\r\n\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') != value) {\r\n            localStorage.setItem('height', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}\r\n                     style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Height\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleHeight}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={localStorage.getItem('height') === null ? 50 : localStorage.getItem('height')}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Height;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst BarMargin = (classes) => {\r\n\r\n    const [margin, setMargin] = useState(localStorage.getItem('barMargin') === null ? 5 : localStorage.getItem('barMargin'));\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setMargin(0);\r\n                localStorage.setItem('barMargin', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setMargin(1000);\r\n                localStorage.setItem('barMargin', '1000');\r\n            } else {\r\n                setMargin(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('barMargin', '0');\r\n                } else {\r\n                    localStorage.setItem('barMargin', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setMargin(0);\r\n            localStorage.setItem('barMargin', '0');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormControl style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}\r\n                     className={classes.formControl}>\r\n            <TextField type=\"number\" id=\"standard-basic\" label=\"Bar Margin\" value={margin} onChange={updateMargin}/>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default BarMargin;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst LineWeight = (classes) => {\r\n\r\n    const [lWeight, setLWeight] = useState(localStorage.getItem('lineWeight') === null ? 0 : localStorage.getItem('lineWeight'));\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLWeight(0);\r\n                localStorage.setItem('lineWeight', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLWeight(1000);\r\n                localStorage.setItem('lineWeight', '1000');\r\n            } else {\r\n                setLWeight(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineWeight', '0');\r\n                } else {\r\n                    localStorage.setItem('lineWeight', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLWeight(0);\r\n            localStorage.setItem('lineWeight', '1');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormControl style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}\r\n                     className={classes.formControl}>\r\n            <TextField type=\"number\" id=\"standard-basic\" label=\"Line Weight\" value={lWeight} onChange={updateMargin}/>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineWeight;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst BarType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(localStorage.getItem('vis') === null || localStorage.getItem('vis') === \"bars\" ? \"\" : localStorage.getItem('vis'));\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"bar\");\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"bars\");\r\n                break;\r\n            case \"doubleBars\":\r\n                localStorage.setItem('vis', \"doubleBars\");\r\n                break;\r\n            case \"sidebars\":\r\n                localStorage.setItem('vis', \"sidebars\");\r\n                break;\r\n            case \"bar_circle\":\r\n                localStorage.setItem('vis', \"bar_circle\");\r\n                break;\r\n            case \"multiColor\":\r\n                localStorage.setItem('vis', \"multiColor\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"bars\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}\r\n                     className={classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Bar Diagrams\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Bars</MenuItem>\r\n                <MenuItem value={\"doubleBars\"}>Double Bars</MenuItem>\r\n                <MenuItem value={\"sidebars\"}>Sidebars</MenuItem>\r\n                <MenuItem value={\"bar_circle\"}>Circle</MenuItem>\r\n                <MenuItem value={\"multiColor\"}>Multi Color</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default BarType;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst LineType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(getLS);\r\n\r\n    function getLS() {\r\n        if (localStorage.getItem('vis') === null) {\r\n            return \"none\";\r\n        } else if (localStorage.getItem('vis') === \"line\") {\r\n            return \"\";\r\n        } else {\r\n            return localStorage.getItem('vis');\r\n        }\r\n\r\n    }\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"line\");\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"line\");\r\n                break;\r\n            case \"line_circle\":\r\n                localStorage.setItem('vis', \"line_circle\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"line\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}\r\n                     className={classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Line Diagrams\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Line</MenuItem>\r\n                <MenuItem value={\"line_circle\"}>Circle</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default LineType;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst LineFill = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('lineFill') === null ? false : 'true' === localStorage.getItem('lineFill'));\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('lineFill', event.target.checked)\r\n    };\r\n\r\n    return (\r\n        <FormControl style={{minWidth: \"180px\", marginLeft: \"30px\", marginRight: \"30px\", marginBottom: \"12px\"}}\r\n                     className={classes.formControl}>\r\n            <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                              control={\r\n                                  <Checkbox\r\n                                      checked={checked}\r\n                                      onChange={handleChange}\r\n                                      name=\"checkedB\"\r\n                                      color=\"primary\"\r\n                                  />\r\n                              }\r\n                              label=\"Fill\"\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default LineFill;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Datapoints from './Datapoints';\r\nimport BackgroundColor from './BackgroundColor';\r\nimport SoundRange from './SoundRange';\r\nimport Height from './Height';\r\nimport BarMargin from \"./BarMargin\";\r\nimport LineColor from \"./LineColor\";\r\nimport LineWeight from \"./LineWeight\";\r\nimport BarType from \"./BarType\";\r\nimport LineType from \"./LineType\";\r\nimport LineFill from \"./LineFill\";\r\nimport FillColor from \"./BarColor\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Selection = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{margin: \"20px\"}}>\r\n            <div className=\"s-container\">\r\n                <BarType classes={classes}/>\r\n                <BarMargin classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <LineType classes={classes}/>\r\n                <LineFill classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <Datapoints classes={classes}/>\r\n                <SoundRange classes={classes}/>\r\n                <Height classes={classes}/>\r\n                <LineColor classes={classes}/>\r\n                <LineWeight classes={classes}/>\r\n                <FillColor classes={classes}/>\r\n                <BackgroundColor classes={classes}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Selection;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}