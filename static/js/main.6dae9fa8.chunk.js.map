{"version":3,"sources":["App.js","components/General/Datapoints.js","components/Bar/BarType.js","components/Line/LineType.js","components/MusicSelect.js","components/SwitchMicMusic.js","components/Share.js","components/General/FreqSelect.js","components/General/BackgroundColor.js","components/General/SoundRange.js","components/General/Height.js","components/Bar/BarMargin.js","components/General/LineColor.js","components/General/LineWeight.js","components/Line/LineFill.js","components/General/BarColor.js","components/Line/LineCircleSize.js","components/Line/LineCircleShow.js","components/General/Clipping.js","components/Selection.js","reportWebVitals.js","index.js"],"names":["App","useState","reload","setReload","isVisible","usePageVisibility","localStorage","getItem","split","inputs","setInputs","window","addEventListener","global","refreshCanvas","theme","createMuiTheme","palette","type","className","style","textDecoration","color","href","src","title","id","float","variant","marginBottom","onClick","target","URL","revokeObjectURL","clear","setItem","Number","textAlign","marginTop","Datapoints","classes","formControl","shrink","getAriaValueText","value","valueLabelDisplay","step","marks","label","min","max","defaultValue","onBlur","BarType","React","diagram","setDiagram","labelId","onChange","event","displayEmpty","selectEmpty","LineType","MusicSelect","setFileName","Input","styled","display","htmlFor","e","file","files","startsWith","name","createObjectURL","console","log","manageChange","component","SwitchMicMusic","micOrSound","setMicOrSound","Share","shareUrl","margin","url","size","round","FreqSelect","freq","setFreq","parseInt","InputLabelProps","BackgroundColor","FormControl","InputLabel","undefined","SoundRange","first","last","setValue","Slider","newValue","Height","BarMargin","setMargin","TextField","LineColor","LineWeight","lWeight","setLWeight","LineFill","checked","setChecked","vis","FormControlLabel","control","Checkbox","FillColor","LineCircleSize","lCircleSize","setLCircleSize","LineCircleShow","Clipping","useStyles","makeStyles","spacing","minWidth","Selection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dae9fa8.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport Button from '@material-ui/core/Button';\n\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport MusicSelect from \"./components/MusicSelect\";\nimport SwitchMicMusic from \"./components/SwitchMicMusic\";\nimport Share from \"./components/Share\";\nimport {usePageVisibility} from 'react-page-visibility';\nimport FreqSelect from \"./components/General/FreqSelect\";\n\nfunction App() {\n    const [reload, setReload] = useState(0);\n    const isVisible = usePageVisibility();\n    const [inputs, setInputs] = useState(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n\n    window.addEventListener(\"storage\", () => {\n        setInputs(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n    });\n\n    global.refreshCanvas = () => {\n        setReload(reload + 1);\n    };\n\n    const theme = createMuiTheme({\n        palette: {\n            type: 'dark',\n        },\n    });\n\n    if (isVisible) {\n        return (\n            <div className=\"App\">\n                <h1><a style={{textDecoration: \"none\", color: \"inherit\"}} href=\"https://soundvisualiser.com\">Sound\n                    Visualizer</a></h1>\n                <div className=\"sticky-canvas\">\n                    <iframe key={reload} src=\"./visualizer/index.html\" title={reload}/>\n                    <div key={\"l\" + reload} className=\"troubleshooting\">\n                        If the canvas doesn't load, try the following:\n                        <ol>\n                            <li>Press Reload Canvas</li>\n                            {localStorage.getItem('musicData') !== null ? <li><b>Select your sound file again</b></li> :\n                                <li>Check microphone permissions for your browser in your OS's system</li>}\n                            <li>Disable any adblocker that might cause an interference</li>\n                            <li>Make sure that you don't have any javascript blockers active</li>\n                        </ol>\n                    </div>\n                </div>\n                <ThemeProvider theme={theme}>\n                    <div className=\"big-container full-screen\">\n                        <div id=\"full-screen\">\n                            <div style={{float: \"right\"}}>\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        onClick={() => setReload(reload + 1)}>reload\n                                    Canvas</Button>&nbsp;\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        href=\"/visualizer\" target=\"_blank\"> Open\n                                    Visualizer in\n                                    Fullscreen</Button>&nbsp;\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            if (localStorage.getItem('musicData') !== null) {\n                                                URL.revokeObjectURL(localStorage.getItem('musicData'))\n                                            }\n                                            localStorage.clear();\n                                        }}> Reset Visualizer</Button>\n                            </div>\n                            {(localStorage.getItem('micOrSound') === null || localStorage.getItem('micOrSound') === \"mic\" || localStorage.getItem('micOrSound') === \"compareInputs\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to freeze/unfreeze\n                                diagram</p>}\n                            {localStorage.getItem('micOrSound') === \"sound\" &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to create a tone</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"true\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n\n                            <p>&nbsp;</p>\n                        </div>\n                    </div>\n                    <div className=\"big-container\">\n                        <div id=\"full-screen\">\n                            {localStorage.getItem('micOrSound') !== \"compareInputs\" &&\n                            <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                    onClick={() => {\n                                        setReload(reload + 1);\n                                        localStorage.setItem('micOrSound', \"compareInputs\");\n                                    }}>\n                                Compare two audio sources\n                            </Button>\n                            }\n                            &nbsp;\n                            {(localStorage.getItem('micOrSound') !== \"toneGenerator\" || localStorage.getItem('pinkNoise') !== \"true\") &&\n                            <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                    onClick={() => {\n                                        setReload(reload + 1);\n                                        localStorage.setItem('micOrSound', \"toneGenerator\");\n                                        localStorage.setItem('pinkNoise', \"true\");\n                                    }}>\n                                Generate Pink Noise\n                            </Button>\n                            }\n                            &nbsp;\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") === false &&\n                            < Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                     onClick={() => {\n                                         setReload(reload + 1);\n                                         localStorage.setItem('micOrSound', \"toneGenerator\");\n                                         localStorage.setItem('pinkNoise', \"false\");\n                                     }}>\n                                Tone Generator\n                            </Button>\n                            }\n                            {localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"false\" &&\n                            <FreqSelect/>\n                            }\n\n                            <MusicSelect key={\"m\" + reload}/>\n                            <SwitchMicMusic key={\"s\" + reload}/>\n                            {localStorage.getItem('micOrSound') === \"sound\" && <p>Song\n                                name: {localStorage.getItem('musicName')}</p>}\n                            {localStorage.getItem('micOrSound') === \"compareInputs\" ? <><p>Info: This feature is\n                                    only\n                                    supported by the following browsers: <b>Chrome, Edge</b></p><p>\n                                    Info: {inputs[0]} input(s) found{Number(inputs[0]) > 1 && <>,\n                                    using {inputs[1] != '' ? inputs[1] : 'first'} and {inputs[2] != '' ? inputs[2] : 'last'} for\n                                    the comparison\n                                </>}</p></>\n                                :\n                                <p className=\"text-margin\">&nbsp;</p>}\n                        </div>\n                    </div>\n                    <div className=\"big-container\">\n                        <Selection key={\"g\" + reload}/>\n                    </div>\n                    <div className=\"big-container\">\n                        <Share/>\n                    </div>\n                </ThemeProvider>\n            </div>\n        );\n    } else {\n        return <div style={{color: \"white\", textAlign: \"center\", marginTop: \"49vh\"}}>\n            <h2>Battery Saver active, click <a href=\"/\">here</a> to reload</h2>\n        </div>\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Datapoints = (classes) => {\r\n\r\n\r\n    const handleBarMultiple = (value) => {\r\n        if (localStorage.getItem('barMultiple') != value) {\r\n            localStorage.setItem('barMultiple', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 5,\r\n            label: '2^5 bars',\r\n        },\r\n        {\r\n            value: 8,\r\n            label: '2^8 bars',\r\n        },\r\n        {\r\n            value: 12,\r\n            label: '2^12 bars',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Amount of Datapoints\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleBarMultiple}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={5}\r\n                    max={14}\r\n                    defaultValue={localStorage.getItem('barMultiple') === null ? 9 : localStorage.getItem('barMultiple')}\r\n                    onBlur={() => {\r\n                        global.refreshCanvas()\r\n                    }}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Datapoints;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst BarType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(localStorage.getItem('vis') === null || localStorage.getItem('vis') === \"bars\" ? \"\" : localStorage.getItem('vis'));\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"bar\");\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"bars\");\r\n                break;\r\n            case \"doubleBars\":\r\n                localStorage.setItem('vis', \"doubleBars\");\r\n                break;\r\n            case \"sidebars\":\r\n                localStorage.setItem('vis', \"sidebars\");\r\n                break;\r\n            case \"bar_circle\":\r\n                localStorage.setItem('vis', \"bar_circle\");\r\n                break;\r\n            case \"multiColor\":\r\n                localStorage.setItem('vis', \"multiColor\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"bars\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Bar Diagrams\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Bars</MenuItem>\r\n                <MenuItem value={\"doubleBars\"}>Double Bars</MenuItem>\r\n                <MenuItem value={\"sidebars\"}>Sidebars</MenuItem>\r\n                <MenuItem value={\"bar_circle\"}>Circle</MenuItem>\r\n                <MenuItem value={\"multiColor\"}>Multi Color</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default BarType;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst LineType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(getLS);\r\n\r\n    function getLS() {\r\n        if (localStorage.getItem('vis') === null) {\r\n            return \"none\";\r\n        } else if (localStorage.getItem('vis') === \"line\") {\r\n            return \"\";\r\n        } else {\r\n            return localStorage.getItem('vis');\r\n        }\r\n\r\n    }\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"line\");\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"line\");\r\n                break;\r\n            case \"line_circle\":\r\n                localStorage.setItem('vis', \"line_circle\");\r\n                break;\r\n            case \"colorful_circle\":\r\n                localStorage.setItem('vis', \"colorful_circle\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"line\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Line Diagrams\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Line</MenuItem>\r\n                <MenuItem value={\"line_circle\"}>Circle</MenuItem>\r\n                <MenuItem value={\"colorful_circle\"}>Colorful Circle</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default LineType;","import React, {useState} from 'react'\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {styled} from '@material-ui/core/styles';\r\n\r\n\r\nconst MusicSelect = () => {\r\n    const [fileName, setFileName] = useState(localStorage.getItem('musicName') === null ? \"\" : localStorage.getItem('musicName'));\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const manageChange = (e) => {\r\n        let file = e.target.files[0];\r\n        if (file.type && !file.type.startsWith('audio/')) {\r\n            console.log('File is not an audio file.', file.type, file);\r\n            return;\r\n        }\r\n        setFileName(file.name);\r\n        if (localStorage.getItem('musicData') !== null) {\r\n            URL.revokeObjectURL(localStorage.getItem('musicData'));\r\n        }\r\n        localStorage.setItem('musicData', URL.createObjectURL(file));\r\n        localStorage.setItem('musicName', file.name);\r\n        localStorage.setItem('micOrSound', 'sound');\r\n        global.refreshCanvas();\r\n    };\r\n\r\n\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n    if (localStorage.getItem('type') !== \"compareInputs\") {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"contained-button-file\" className=\"song-select\"\r\n                       style={{float: \"right\", marginBottom: \"40px\"}}>\r\n                    <Input id=\"contained-button-file\" type=\"file\"\r\n                           onChange={e => manageChange(e)}/>\r\n                    <Button className=\"bottom-button\" variant=\"outlined\" component=\"span\">\r\n                        Select Song\r\n                    </Button>\r\n                </label>\r\n            </>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\nexport default MusicSelect;","import React, {useState} from 'react'\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst SwitchMicMusic = () => {\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const changeInput = () => {\r\n        setMicOrSound(\"mic\");\r\n        localStorage.setItem('micOrSound', \"mic\");\r\n        global.refreshCanvas();\r\n    };\r\n    if (micOrSound === \"toneGenerator\" || micOrSound === \"compareInputs\" || micOrSound === \"sound\") {\r\n        return (\r\n            <label style={{float: \"right\"}}>\r\n                <Button className=\"bottom-button\" variant=\"outlined\"\r\n                        component=\"span\" onClick={changeInput}>\r\n                    Switch back to Microphone Input\r\n                </Button>\r\n                &nbsp;\r\n            </label>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default SwitchMicMusic;","import React from 'react'\r\nimport {\r\n    EmailShareButton,\r\n    WhatsappShareButton,\r\n    RedditShareButton,\r\n    LinkedinShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    HatenaShareButton,\r\n    FacebookShareButton,\r\n    FacebookMessengerShareButton,\r\n    TwitterShareButton\r\n} from \"react-share\";\r\n\r\n\r\nimport {\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    FacebookMessengerIcon,\r\n    HatenaIcon,\r\n    LinkedinIcon,\r\n    RedditIcon,\r\n    TelegramIcon,\r\n    TumblrIcon,\r\n    WhatsappIcon,\r\n    TwitterIcon\r\n} from \"react-share\";\r\n\r\nconst Share = () => {\r\n    const shareUrl = 'https://soundvisualiser.com';\r\n\r\n    return (\r\n        <div style={{margin: \"20px\"}}>\r\n            <h3>Share</h3>\r\n            <EmailShareButton url={shareUrl}><EmailIcon size={42} round={true}/></EmailShareButton>\r\n            <FacebookShareButton url={shareUrl}><FacebookIcon size={42} round={true}/></FacebookShareButton>\r\n            <FacebookMessengerShareButton url={shareUrl}><FacebookMessengerIcon size={42}\r\n                                                                                round={true}/></FacebookMessengerShareButton>\r\n            <TwitterShareButton url={shareUrl}><TwitterIcon size={42} round={true}/></TwitterShareButton>\r\n            <WhatsappShareButton url={shareUrl}><WhatsappIcon size={42} round={true}/></WhatsappShareButton>\r\n            <RedditShareButton url={shareUrl}><RedditIcon size={42} round={true}/></RedditShareButton>\r\n            <LinkedinShareButton url={shareUrl}><LinkedinIcon size={42} round={true}/></LinkedinShareButton>\r\n            <TelegramShareButton url={shareUrl}><TelegramIcon size={42} round={true}/></TelegramShareButton>\r\n            <TumblrShareButton url={shareUrl}><TumblrIcon size={42} round={true}/></TumblrShareButton>\r\n            <HatenaShareButton url={shareUrl}><HatenaIcon size={42} round={true}/></HatenaShareButton>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Share;\r\n","import React, {useState} from 'react'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst FreqSelect = (classes) => {\r\n\r\n    const [freq, setFreq] = useState(localStorage.getItem('freq') === null ? 50 : localStorage.getItem('freq'));\r\n\r\n    const updateFreq = (e) => {\r\n        try {\r\n            if (e.target.value > 9999) {\r\n                setFreq(9999);\r\n                localStorage.setItem('freq', '9999');\r\n            } else {\r\n                if (e.target.value === '' || e.target.value < 50) {\r\n                    setFreq(e.target.value)\r\n                } else {\r\n                    setFreq(parseInt(e.target.value));\r\n                    localStorage.setItem('freq', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setFreq(0);\r\n            localStorage.setItem('freq', '0');\r\n        }\r\n    };\r\n\r\n    const changeText = () => {\r\n        if (freq === '' || freq < 50) {\r\n            setFreq(50);\r\n            localStorage.setItem('freq', '50');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"freq \" + classes.formControl}>\r\n            <TextField type=\"number\" id=\"outlined-number\" label=\"Frequency\" value={freq} onChange={updateFreq}\r\n                       InputLabelProps={{shrink: true,}} onBlur={changeText}/>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default FreqSelect;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst BackgroundColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('bcolor') === null ? '#000000' : localStorage.getItem('bcolor'));\r\n\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('bcolor') !== color) {\r\n            localStorage.setItem('bcolor', color);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Background Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default BackgroundColor;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst SoundRange = (classes) => {\r\n    const first = localStorage.getItem('barRange') === null ? 0 : Number(localStorage.getItem('barRange').split(\",\")[0]);\r\n    const last = localStorage.getItem('barRange') === null ? 50 : Number(localStorage.getItem('barRange').split(\",\")[1]);\r\n\r\n    const [value, setValue] = React.useState([first, last]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        if (localStorage.getItem('barRange') != value) {\r\n            localStorage.setItem('barRange', value);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n    if (localStorage.getItem(\"micOrSound\") !== \"toneGenerator\" || localStorage.getItem(\"pinkNoise\") === \"true\") {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Range\r\n                </InputLabel>\r\n                <Slider style={{marginTop: \"24px\"}}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        marks={marks}\r\n                />\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\n\r\nexport default SoundRange;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Height = (classes) => {\r\n\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') != value) {\r\n            localStorage.setItem('height', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Height\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleHeight}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={localStorage.getItem('height') === null ? 50 : localStorage.getItem('height')}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Height;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst BarMargin = (classes) => {\r\n\r\n    const [margin, setMargin] = useState(localStorage.getItem('barMargin') === null ? 5 : localStorage.getItem('barMargin'));\r\n    const type = localStorage.getItem('type') === null ? 'bar' : localStorage.getItem('type');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setMargin(0);\r\n                localStorage.setItem('barMargin', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setMargin(1000);\r\n                localStorage.setItem('barMargin', '1000');\r\n            } else {\r\n                setMargin(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('barMargin', '0');\r\n                } else {\r\n                    localStorage.setItem('barMargin', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setMargin(0);\r\n            localStorage.setItem('barMargin', '0');\r\n        }\r\n    };\r\n\r\n    if (type === 'bar') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <TextField type=\"number\" id=\"standard-basic\" label=\"Bar Margin\" value={margin} onChange={updateMargin}/>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default BarMargin;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst LineColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('linecolor') === null ? '#ffffff' : localStorage.getItem('linecolor'));\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('linecolor') !== color) {\r\n            localStorage.setItem('linecolor', color);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Line Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineColor;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst LineWeight = (classes) => {\r\n\r\n    const [lWeight, setLWeight] = useState(localStorage.getItem('lineWeight') === null ? 1 : localStorage.getItem('lineWeight'));\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLWeight(0);\r\n                localStorage.setItem('lineWeight', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLWeight(1000);\r\n                localStorage.setItem('lineWeight', '1000');\r\n            } else {\r\n                setLWeight(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineWeight', '0');\r\n                } else {\r\n                    localStorage.setItem('lineWeight', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLWeight(0);\r\n            localStorage.setItem('lineWeight', '1');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <TextField type=\"number\" id=\"standard-basic\" label=\"Line Weight\" value={lWeight} onChange={updateMargin}/>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineWeight;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst LineFill = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('lineFill') === null ? false : 'true' === localStorage.getItem('lineFill'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bar' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('lineFill', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line' || vis === 'line_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                                  control={\r\n                                      <Checkbox\r\n                                          checked={checked}\r\n                                          onChange={handleChange}\r\n                                          name=\"checkedB\"\r\n                                          color=\"primary\"\r\n                                      />\r\n                                  }\r\n                                  label=\"Fill\"\r\n                />\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineFill;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst FillColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('fillcolor') === null ? '#ffffff' : localStorage.getItem('fillcolor'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('fillcolor') !== color) {\r\n            localStorage.setItem('fillcolor', color);\r\n        }\r\n    };\r\n    if (vis === 'multiColor' || vis === 'colorful_circle') {\r\n        return (<></>);\r\n    } else {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Fill Color\r\n                </InputLabel>\r\n                <ColorPicker style={{marginTop: \"18px\"}}\r\n                             name='color'\r\n                             defaultValue={color}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                             onChange={setColor}\r\n\r\n                />\r\n            </FormControl>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FillColor;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst LineCircleSize = (classes) => {\r\n\r\n    const [lCircleSize, setLCircleSize] = useState(localStorage.getItem('lineCircleSize') === null ? 50 : localStorage.getItem('lineCircleSize'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLCircleSize(0);\r\n                localStorage.setItem('lineCircleSize', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLCircleSize(1000);\r\n                localStorage.setItem('lineCircleSize', '1000');\r\n            } else {\r\n                setLCircleSize(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineCircleSize', '0');\r\n                } else {\r\n                    localStorage.setItem('lineCircleSize', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLCircleSize(0);\r\n            localStorage.setItem('lineCircleSize', '1');\r\n        }\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <TextField type=\"number\" id=\"standard-basic\" label=\"Line CircleSize\" value={lCircleSize}\r\n                           onChange={updateMargin}/>\r\n            </FormControl>\r\n        )\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\nexport default LineCircleSize;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst LineCircleShow = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('showLineCircle') === null ? false : 'true' === localStorage.getItem('showLineCircle'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('showLineCircle', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                                  control={\r\n                                      <Checkbox\r\n                                          checked={checked}\r\n                                          onChange={handleChange}\r\n                                          name=\"checkedB\"\r\n                                          color=\"primary\"\r\n                                      />\r\n                                  }\r\n                                  label=\"Show Circle\"\r\n                />\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineCircleShow;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Clipping = (classes) => {\r\n\r\n\r\n    const handleClipping = (value) => {\r\n        if (localStorage.getItem('clipping') != value) {\r\n            localStorage.setItem('clipping', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: '0',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Clipping\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleClipping}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={localStorage.getItem('clipping') === null ? 20 : localStorage.getItem('clipping')}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Clipping;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Datapoints from './General/Datapoints';\r\nimport BackgroundColor from './General/BackgroundColor';\r\nimport SoundRange from './General/SoundRange';\r\nimport Height from './General/Height';\r\nimport BarMargin from \"./Bar/BarMargin\";\r\nimport LineColor from \"./General/LineColor\";\r\nimport LineWeight from \"./General/LineWeight\";\r\nimport BarType from \"./Bar/BarType\";\r\nimport LineType from \"./Line/LineType\";\r\nimport LineFill from \"./Line/LineFill\";\r\nimport FillColor from \"./General/BarColor\";\r\nimport LineCircleSize from \"./Line/LineCircleSize\";\r\nimport LineCircleShow from \"./Line/LineCircleShow\";\r\nimport Clipping from \"./General/Clipping\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Selection = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{margin: \"20px\"}}>\r\n            <div className=\"s-container\">\r\n                <BarType classes={classes}/>\r\n                <BarMargin classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <LineType classes={classes}/>\r\n                <LineFill classes={classes}/>\r\n                <LineCircleSize classes={classes}/>\r\n                <LineCircleShow classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <Datapoints classes={classes}/>\r\n                <SoundRange classes={classes}/>\r\n                <Height classes={classes}/>\r\n                <Clipping classes={classes}/>\r\n                <LineWeight classes={classes}/>\r\n                <LineColor classes={classes}/>\r\n                <FillColor classes={classes}/>\r\n                <BackgroundColor classes={classes}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Selection;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}