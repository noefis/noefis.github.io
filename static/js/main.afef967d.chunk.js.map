{"version":3,"sources":["components/service.js","MainApp.js","App.js","components/General/Datapoints.js","components/Bar/BarType.js","components/Line/LineType.js","components/MusicSelect.js","components/SwitchMicMusic.js","components/General/FreqSelect.js","components/MusicFromLink.js","components/BehindCanvas.js","components/AudioPlayer.js","components/Error.js","components/General/BackgroundColor.js","components/General/SoundRange.js","components/General/Height.js","components/Bar/BarMargin.js","components/General/LineColor.js","components/General/LineWeight.js","components/Line/LineFill.js","components/General/BarColor.js","components/Line/LineCircleSize.js","components/Line/LineCircleShow.js","components/General/Clipping.js","components/Selection.js","components/Share.js","components/Footer.js","reportWebVitals.js","index.js","components/WhiteTextField.js"],"names":["getYtLink","id","done","a","undefined","localStorage","getItem","mp3","title","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","status","setItem","JSON","parse","responseText","file","response","onerror","send","MainApp","useState","reload","setReload","isVisible","usePageVisibility","split","inputs","setInputs","window","addEventListener","global","refreshCanvas","theme","createTheme","palette","mode","overrides","MuiOutlinedInput","root","position","borderColor","borderWidth","CheckError","React","setOpen","sx","width","in","severity","action","color","size","onClick","removeItem","fontSize","mb","className","style","textDecoration","href","src","float","variant","marginBottom","target","URL","revokeObjectURL","clear","Number","border","textAlign","marginTop","App","path","component","v","URLSearchParams","location","search","get","err","message","history","pushState","document","exact","Error","Datapoints","classes","formControl","m","noValidate","autoComplete","shrink","getAriaValueText","value","valueLabelDisplay","step","marks","label","min","max","defaultValue","onBlur","BarType","diagram","setDiagram","minWidth","select","onChange","event","LineType","selectEmpty","MusicSelect","setFileName","Input","styled","display","htmlFor","type","e","files","startsWith","name","createObjectURL","console","log","manageChange","SwitchMicMusic","micOrSound","setMicOrSound","FreqSelect","freq","setFreq","parseInt","InputLabelProps","MusicFromLink","loading","setLoading","youtube_parser","match","length","placeholder","link","BehindCanvas","percent","setPercent","AudioPlayer","endTime","setEndTime","currentTime","setCurrentTime","record","setRecord","checked","setChecked","isDisabled","formatSmol","num","formatToTime","sec","Math","floor","margin","paddingBottom","container","spacing","alignItems","item","xs","disabled","newValue","control","marginLeft","to","BackgroundColor","makeStyles","borderBottomColor","useStyles","FormControl","Box","InputLabel","SoundRange","first","last","setValue","Slider","Height","BarMargin","setMargin","WhiteTextField","LineColor","LineWeight","lWeight","setLWeight","LineFill","vis","FormControlLabel","Checkbox","FillColor","LineCircleSize","lCircleSize","setLCircleSize","LineCircleShow","Clipping","Selection","Share","shareUrl","EmailShareButton","EmailIcon","round","FacebookShareButton","FacebookIcon","FacebookMessengerShareButton","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","RedditShareButton","RedditIcon","LinkedinShareButton","LinkedinIcon","TelegramShareButton","TelegramIcon","TumblrShareButton","TumblrIcon","HatenaShareButton","HatenaIcon","Footer","bS","setBS","maxWidth","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","withStyles","TextField"],"mappings":"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","file":"static/js/main.afef967d.chunk.js","sourcesContent":["export async function getYtLink(id, done) {\r\n    if (id !== null && id !== undefined) {\r\n        if (localStorage.getItem(\"ytID\") === id) {\r\n            done(null, {mp3: localStorage.getItem(\"ytlink\"), title: localStorage.getItem('musicName')});\r\n        } else {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            let url = \"https://youtube.michaelbelgium.me/api/converter/convert?api_token=a6yTCDXhocWl43LRvrzazsBxvnYPo0vZL4Dm0788iJQPzzTep7Ns2qqUMsDQ&url=https://www.youtube.com/watch?v=\" + id;\r\n\r\n            xhr.open(\"POST\", `${url}`, true);\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        localStorage.setItem(\"ytID\", id);\r\n                        done(null, {mp3: JSON.parse(xhr.responseText).file, title: JSON.parse(xhr.responseText).title});\r\n                    } else {\r\n                        done(JSON.parse(xhr.response));\r\n                    }\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                done(xhr.response);\r\n            };\r\n\r\n            xhr.send(`u=${id}`);\r\n        }\r\n    }\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport Button from '@mui/material/Button';\n\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport MusicSelect from \"./components/MusicSelect\";\nimport SwitchMicMusic from \"./components/SwitchMicMusic\";\nimport {usePageVisibility} from 'react-page-visibility';\nimport FreqSelect from \"./components/General/FreqSelect\";\nimport MusicFromLink from \"./components/MusicFromLink\";\nimport BehindCanvas from \"./components/BehindCanvas\";\nimport AudioPlayer from \"./components/AudioPlayer\";\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Alert from \"@mui/material/Alert/Alert\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\n\nfunction MainApp() {\n    const [reload, setReload] = useState(0);\n    const isVisible = usePageVisibility();\n    const [inputs, setInputs] = useState(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n\n    window.addEventListener(\"storage\", () => {\n        if (localStorage.getItem('micOrSound') === \"compareInputs\") {\n            setInputs(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n        }\n    });\n\n    global.refreshCanvas = () => {\n        setReload(reload + 1);\n    };\n\n    const theme = createTheme({\n        palette: {\n            mode: 'dark',\n        },\n\n        overrides: {\n            MuiOutlinedInput: {\n                root: {\n                    position: \"relative\",\n                    \"& $notchedOutline\": {\n                        borderColor: \"#FFFFFF\"\n                    },\n                    \"&:hover:not($disabled):not($focused):not($error) $notchedOutline\": {\n                        borderColor: \"#FFFFFF\",\n                        \"@media (hover: none)\": {\n                            borderColor: \"#FFFFFF\"\n                        }\n                    },\n                    \"&$focused $notchedOutline\": {\n                        borderColor: \"#FFFFFF\",\n                        borderWidth: 1\n                    }\n                }\n            }\n        }\n    });\n\n    const CheckError = () => {\n\n        const [open, setOpen] = React.useState(localStorage.getItem(\"error\") !== null);\n\n        return (\n            <Box sx={{width: '100%'}}>\n                <Collapse in={open}>\n                    <Alert\n                        severity=\"error\"\n                        action={\n                            <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                size=\"small\"\n                                onClick={() => {\n                                    setOpen(false);\n                                    localStorage.removeItem(\"error\");\n                                }}\n                            >\n                                <CloseIcon fontSize=\"inherit\"/>\n                            </IconButton>\n                        }\n                        sx={{mb: 2}}\n                    >\n                        {localStorage.getItem(\"error\")}\n                    </Alert>\n                </Collapse>\n            </Box>\n        )\n    };\n\n    if (isVisible || localStorage.getItem(\"batteryS\") === \"false\") {\n        return (\n            <div className=\"app\">\n                <ThemeProvider theme={theme}>\n                    <h1><a style={{textDecoration: \"none\", color: \"inherit\"}} href=\"https://soundvisualiser.com\">Sound\n                        Visualizer</a></h1>\n                    <div className=\"sticky-canvas\" key={reload}>\n                        <iframe id=\"iframe1\" src=\"/visualizer/index.html\" title={reload}/>\n                        <BehindCanvas/>\n                        <AudioPlayer/>\n                    </div>\n                    <div className=\"big-container\">\n                        <div id=\"full-screen\">\n                            <div style={{float: \"right\"}}>\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        onClick={() => setReload(reload + 1)}>reload\n                                    Canvas</Button>&nbsp;\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        href=\"/visualizer\" target=\"_blank\"> Open\n                                    Visualizer in\n                                    Fullscreen</Button>&nbsp;\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{marginBottom: \"20px\"}}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            if (localStorage.getItem('musicData') !== null) {\n                                                URL.revokeObjectURL(localStorage.getItem('musicData'))\n                                            }\n                                            localStorage.clear();\n                                        }}> Reset Visualizer</Button>\n                            </div>\n                            {(localStorage.getItem('micOrSound') === null || localStorage.getItem('micOrSound') === \"mic\" || localStorage.getItem('micOrSound') === \"compareInputs\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to freeze/unfreeze\n                                diagram</p>}\n                            {localStorage.getItem('micOrSound') === \"sound\" &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to create a tone</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"true\") &&\n                            <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n\n                            <p>&nbsp;</p>\n                        </div>\n                    </div>\n                    <div className=\"big-container\">\n                        <div id=\"full-screen\">\n                            {localStorage.getItem('micOrSound') !== \"compareInputs\" &&\n                            <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                    onClick={() => {\n                                        setReload(reload + 1);\n                                        localStorage.setItem('micOrSound', \"compareInputs\");\n                                    }}>\n                                Compare two audio sources\n                            </Button>\n                            }\n                            &nbsp;\n                            {(localStorage.getItem('micOrSound') !== \"toneGenerator\" || localStorage.getItem('pinkNoise') !== \"true\") &&\n                            <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                    onClick={() => {\n                                        setReload(reload + 1);\n                                        localStorage.setItem('micOrSound', \"toneGenerator\");\n                                        localStorage.setItem('pinkNoise', \"true\");\n                                    }}>\n                                Generate Pink Noise\n                            </Button>\n                            }\n                            &nbsp;\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") === false &&\n                            < Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                                     onClick={() => {\n                                         setReload(reload + 1);\n                                         localStorage.setItem('micOrSound', \"toneGenerator\");\n                                         localStorage.setItem('pinkNoise', \"false\");\n                                     }}>\n                                Tone Generator\n                            </Button>\n                            }\n                            &nbsp;\n                            {localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"false\" &&\n                            <FreqSelect/>\n                            }\n                            <MusicSelect key={\"m\" + reload}/>\n                            <MusicFromLink key={\"reg\" + reload}/>\n                            <SwitchMicMusic key={\"s\" + reload}/>\n                            {localStorage.getItem('micOrSound') === \"sound\" && <p>Song\n                                name: {localStorage.getItem('musicName')}</p>}\n                            {localStorage.getItem('micOrSound') === \"compareInputs\" ? <><p>Info: This feature is\n                                    only\n                                    supported by the following browsers: <b>Chrome, Edge</b></p><p>\n                                    Info: {inputs[0]} input(s) found{Number(inputs[0]) > 1 && <>,\n                                    using {inputs[1] != '' ? inputs[1] : 'first'} and {inputs[2] != '' ? inputs[2] : 'last'} for\n                                    the comparison\n                                </>}</p></>\n                                :\n                                <p className=\"text-margin\">&nbsp;</p>}\n                        </div>\n                        <CheckError/>\n                    </div>\n                    <div className=\"big-container\" style={{border: \"none\"}}>\n                        <Selection key={\"g\" + reload}/>\n                    </div>\n                </ThemeProvider>\n            </div>\n        );\n    } else {\n        return <div style={{color: \"white\", textAlign: \"center\", marginTop: \"49vh\"}}>\n            <h2>Battery Saver active, click <a href=\"/\">here</a> to reload</h2>\n        </div>\n    }\n}\n\nexport default MainApp;\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport MainApp from \"./MainApp\";\r\nimport Error from \"./components/Error\";\r\nimport Footer from \"./components/Footer\";\r\nimport {getYtLink} from \"./components/service\";\r\n\r\nfunction App() {\r\n\r\n    const FullMainApp = () => {\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        const v = queryParams.get('v');\r\n\r\n        getYtLink(v, (err, url) => {\r\n            if (err) {\r\n                localStorage.setItem(\"error\", err.message);\r\n                global.refreshCanvas();\r\n                window.history.pushState({}, document.title, \"/\");\r\n            }\r\n            if (url !== undefined) {\r\n                localStorage.setItem('micOrSound', 'sound');\r\n                localStorage.setItem('musicName', url.title);\r\n                localStorage.setItem(\"ytlink\", url.mp3);\r\n                window.history.pushState({}, document.title, \"/\");\r\n                global.refreshCanvas();\r\n            }\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <MainApp/>\r\n                <Footer/>\r\n            </>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route path=\"/\" component={FullMainApp} exact/>\r\n                <Route path=\"/main\" component={MainApp}/>\r\n                <Route component={Error}/>\r\n            </Switch>\r\n        </main>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Datapoints = (classes) => {\r\n\r\n\r\n    const handleBarMultiple = (value) => {\r\n        if (localStorage.getItem('barMultiple') != value) {\r\n            localStorage.setItem('barMultiple', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 5,\r\n            label: '2^5',\r\n        },\r\n        {\r\n            value: 8,\r\n            label: '2^8',\r\n        },\r\n        {\r\n            value: 12,\r\n            label: '2^12',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Amount of Datapoints\r\n                </InputLabel>\r\n                <Slider style={{marginTop: \"24px\"}}\r\n                        getAriaValueText={handleBarMultiple}\r\n                        aria-labelledby=\"discrete-slider\"\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={1}\r\n                        marks={marks}\r\n                        min={5}\r\n                        max={14}\r\n                        defaultValue={localStorage.getItem('barMultiple') === null ? 9 : localStorage.getItem('barMultiple')}\r\n                        onBlur={() => {\r\n                            global.refreshCanvas()\r\n                        }}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Datapoints;","import React from 'react';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {WhiteTextField} from \"../WhiteTextField\";\r\n\r\nconst BarType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(localStorage.getItem('vis') === null || localStorage.getItem('vis') === \"bars\" ? \"bars\" : localStorage.getItem('vis'));\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"bar\");\r\n        switch (event.target.value) {\r\n            case \"bars\":\r\n                localStorage.setItem('vis', \"bars\");\r\n                break;\r\n            case \"doubleBars\":\r\n                localStorage.setItem('vis', \"doubleBars\");\r\n                break;\r\n            case \"sidebars\":\r\n                localStorage.setItem('vis', \"sidebars\");\r\n                break;\r\n            case \"bar_circle\":\r\n                localStorage.setItem('vis', \"bar_circle\");\r\n                break;\r\n            case \"multiColor\":\r\n                localStorage.setItem('vis', \"multiColor\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"bars\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': {m: 1, minWidth: '25ch'},\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField\r\n                    className={\"all-form-inputs\"}\r\n                    id=\"outlined\"\r\n                    select\r\n                    label=\"Bar Diagrams\"\r\n                    variant=\"standard\"\r\n                    value={diagram}\r\n                    onChange={handleDiagram}\r\n                >\r\n                    <MenuItem key={\"bars\"} value={\"bars\"}>Bars</MenuItem>\r\n                    <MenuItem key={\"doubleBars\"} value={\"doubleBars\"}>Double Bars</MenuItem>\r\n                    <MenuItem key={\"sidebars\"} value={\"sidebars\"}>Sidebars</MenuItem>\r\n                    <MenuItem key={\"bar_circle\"} value={\"bar_circle\"}>Circle</MenuItem>\r\n                    <MenuItem key={\"multiColor\"} value={\"multiColor\"}>Multi Color</MenuItem>\r\n                </WhiteTextField>\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default BarType;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField/TextField\";\r\nimport {WhiteTextField} from \"../WhiteTextField\";\r\n\r\nconst LineType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(getLS);\r\n\r\n    function getLS() {\r\n        if (localStorage.getItem('vis') === null) {\r\n            return \"none\";\r\n        } else if (localStorage.getItem('vis') === \"line\") {\r\n            return \"line\";\r\n        } else {\r\n            return localStorage.getItem('vis');\r\n        }\r\n\r\n    }\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"line\");\r\n        switch (event.target.value) {\r\n            case \"line\":\r\n                localStorage.setItem('vis', \"line\");\r\n                break;\r\n            case \"line_circle\":\r\n                localStorage.setItem('vis', \"line_circle\");\r\n                break;\r\n            case \"colorful_circle\":\r\n                localStorage.setItem('vis', \"colorful_circle\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"line\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': {m: 1, minWidth: '25ch'},\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField variant=\"standard\"\r\n                                id=\"outlined\"\r\n                                select\r\n                                label=\"Line Diagrams\"\r\n                                value={diagram}\r\n                                onChange={handleDiagram}\r\n                                className={\"all-form-inputs \" + classes.selectEmpty}\r\n                >\r\n                    <MenuItem value={\"line\"}>Line</MenuItem>\r\n                    <MenuItem value={\"line_circle\"}>Circle</MenuItem>\r\n                    <MenuItem value={\"colorful_circle\"}>Colorful Circle</MenuItem>\r\n                </WhiteTextField>\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default LineType;","import React, {useState} from 'react'\r\nimport Input from \"@mui/material/Input\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\n\r\nconst MusicSelect = () => {\r\n    const [fileName, setFileName] = useState(localStorage.getItem('musicName') === null ? \"\" : localStorage.getItem('musicName'));\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const manageChange = (e) => {\r\n        let file = e.target.files[0];\r\n        if (file.type && !file.type.startsWith('audio/')) {\r\n            console.log('File is not an audio file.', file.type, file);\r\n            return;\r\n        }\r\n        setFileName(file.name);\r\n        if (localStorage.getItem('musicData') !== null) {\r\n            URL.revokeObjectURL(localStorage.getItem('musicData'));\r\n        }\r\n        localStorage.setItem('musicData', URL.createObjectURL(file));\r\n        localStorage.setItem('musicName', file.name);\r\n        localStorage.setItem('micOrSound', 'sound');\r\n        localStorage.removeItem('ytlink');\r\n        global.refreshCanvas();\r\n    };\r\n\r\n\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n    if (localStorage.getItem('type') !== \"compareInputs\") {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"contained-button-file\" className=\"right-when-large\"\r\n                       style={{marginBottom: \"40px\"}}>\r\n                    <Input id=\"contained-button-file\" type=\"file\"\r\n                           onChange={e => manageChange(e)}/>\r\n                    <Button className=\"bottom-button\" style={{marginBottom: \"20px\"}} variant=\"outlined\"\r\n                            component=\"span\">\r\n                        Select Song\r\n                    </Button>\r\n                    &nbsp;\r\n                </label>\r\n            </>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\nexport default MusicSelect;","import React, {useState} from 'react'\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nconst SwitchMicMusic = () => {\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const changeInput = () => {\r\n        setMicOrSound(\"mic\");\r\n        localStorage.setItem('micOrSound', \"mic\");\r\n        global.refreshCanvas();\r\n    };\r\n    if (micOrSound === \"toneGenerator\" || micOrSound === \"compareInputs\" || micOrSound === \"sound\") {\r\n        return (\r\n            <label className=\"right-when-large\">\r\n                <Button className=\"bottom-button\" style={{marginBottom: \"20px\"}} variant=\"outlined\"\r\n                        component=\"span\" onClick={changeInput}>\r\n                    Switch back to Microphone Input\r\n                </Button>\r\n                &nbsp;\r\n            </label>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default SwitchMicMusic;","import React, {useState} from 'react'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {WhiteTextField} from \"../WhiteTextField\";\r\n\r\n\r\nconst FreqSelect = (classes) => {\r\n\r\n    const [freq, setFreq] = useState(localStorage.getItem('freq') === null ? 50 : localStorage.getItem('freq'));\r\n\r\n    const updateFreq = (e) => {\r\n        try {\r\n            if (e.target.value > 9999) {\r\n                setFreq(9999);\r\n                localStorage.setItem('freq', '9999');\r\n            } else {\r\n                if (e.target.value === '' || e.target.value < 50) {\r\n                    setFreq(e.target.value)\r\n                } else {\r\n                    setFreq(parseInt(e.target.value));\r\n                    localStorage.setItem('freq', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setFreq(0);\r\n            localStorage.setItem('freq', '0');\r\n        }\r\n    };\r\n\r\n    const changeText = () => {\r\n        if (freq === '' || freq < 50) {\r\n            setFreq(50);\r\n            localStorage.setItem('freq', '50');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"freq \" + classes.formControl}>\r\n            <WhiteTextField variant=\"standard\" type=\"number\" id=\"outlined-number\" label=\"Frequency\" value={freq}\r\n                            onChange={updateFreq}\r\n                            InputLabelProps={{shrink: true,}} onBlur={changeText}/>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default FreqSelect;","import React, {useState} from 'react'\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {getYtLink} from \"./service\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\n\r\nconst MusicFromLink = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function youtube_parser(url) {\r\n        var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n        var match = url.match(regExp);\r\n        return (match && match[7].length === 11) ? match[7] : false;\r\n    }\r\n\r\n    const manageChange = (e) => {\r\n        const link = e.target.value;\r\n        if (link.length > 15 && youtube_parser(link) !== false) {\r\n            const id = youtube_parser(link);\r\n            setLoading(true);\r\n            getYtLink(id, (err, url) => {\r\n                setLoading(false);\r\n                if (err) {\r\n                    localStorage.setItem(\"error\", err.message);\r\n                    global.refreshCanvas();\r\n                } else {\r\n                    localStorage.setItem('micOrSound', 'sound');\r\n                    localStorage.setItem('musicName', url.title);\r\n                    localStorage.setItem(\"ytlink\", url.mp3);\r\n                    global.refreshCanvas();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <label className=\"right-when-large\" style={{marginBottom: \"20px\"}}>\r\n            <TextField id=\"outlined-basic\" style={{marginBottom: \"20px\"}} className=\"bottom-button\"\r\n                       placeholder=\"YouTube Link\" variant=\"outlined\"\r\n                       onChange={e => manageChange(e)}/>\r\n            &nbsp;\r\n            {loading &&\r\n            <Box sx={{display: 'flex'}}>\r\n                <CircularProgress size={30}/>\r\n                &nbsp;\r\n            </Box>\r\n            }\r\n        </label>\r\n    )\r\n};\r\n\r\nexport default MusicFromLink;","import React, {useState} from 'react'\r\n\r\nconst BehindCanvas = () => {\r\n    const [percent, setPercent] = useState(\"\");\r\n\r\n    window.addEventListener(\"storage\", () => {\r\n        if (localStorage.getItem(\"percentLoaded\") !== null) {\r\n            setPercent(localStorage.getItem(\"percentLoaded\"));\r\n        }\r\n    });\r\n\r\n    if (localStorage.getItem(\"percentLoaded\") !== null) {\r\n        return (\r\n            <div className=\"troubleshooting\">\r\n                Loaded {percent}%\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"troubleshooting\">\r\n                If the canvas doesn't load, try the following:\r\n                <ol>\r\n                    <li>Press Reload Canvas</li>\r\n                    {localStorage.getItem('musicData') !== null ? <li><b>Select your sound file again</b></li> :\r\n                        <li>Check microphone permissions for your browser in your OS's system</li>}\r\n                    <li>Disable any adblocker that might cause an interference</li>\r\n                    <li>Make sure that you don't have any javascript blockers active</li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default BehindCanvas;","import React, {useState} from \"react\"\r\nimport Slider from \"@mui/material/Slider\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\n\r\nconst AudioPlayer = () => {\r\n    const [endTime, setEndTime] = useState(0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [record, setRecord] = useState(false);\r\n    const [checked, setChecked] = useState(localStorage.getItem(\"startOnZero\") === null ? false : localStorage.getItem(\"startOnZero\"));\r\n\r\n\r\n    window.addEventListener(\"storage\", () => {\r\n        if (localStorage.getItem('currentTime') !== currentTime) {\r\n            setCurrentTime(Number(localStorage.getItem('currentTime')));\r\n        }\r\n        if (localStorage.getItem('duration') !== endTime) {\r\n            setEndTime(Number(localStorage.getItem('duration')));\r\n        }\r\n    });\r\n\r\n    const isDisabled = () => {\r\n        if (localStorage.getItem(\"micOrSound\") === \"sound\") {\r\n            return false\r\n        }\r\n        return true\r\n    };\r\n\r\n    const formatSmol = (num) => {\r\n        if (num < 10) {\r\n            return `0${num}`\r\n        } else if (num < 60) {\r\n            return `${num}`\r\n        }\r\n    };\r\n\r\n\r\n    const formatToTime = (sec) => {\r\n        if (sec === undefined) {\r\n            sec = 0;\r\n        }\r\n        sec = Math.floor(sec);\r\n        const min = Math.floor(sec / 60);\r\n        sec = sec % 60;\r\n        return `${formatSmol(min)}:${formatSmol(sec)}`\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        localStorage.setItem(\"changeTime\", newValue);\r\n    };\r\n\r\n    const handleRecording = () => {\r\n        if (!record) {\r\n            setRecord(true);\r\n            localStorage.setItem(\"record\", \"true\");\r\n        } else {\r\n            setRecord(false);\r\n            localStorage.setItem(\"record\", \"false\");\r\n        }\r\n    };\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        localStorage.setItem(\"startOnZero\", event.target.checked);\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div style={{margin: \"0 40px 40px 40px\", paddingBottom: \"20px\"}}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs>\r\n                    <div className=\"box-shadowy\">\r\n                        <Grid container spacing={3} alignItems=\"center\">\r\n                            <Grid item>\r\n                                {formatToTime(currentTime)}\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Slider\r\n                                    className=\"time-slider\"\r\n                                    aria-label=\"Time\"\r\n                                    disabled={isDisabled()}\r\n                                    value={currentTime}\r\n                                    max={endTime}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {formatToTime(endTime)}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControlLabel control={<Checkbox color={\"primary\"} checked={checked} disabled={isDisabled()}/>}\r\n                                      label=\"Start on zero\" onChange={handleCheckboxChange}/>\r\n                </Grid>\r\n                <Grid item xs className=\"record\">\r\n                    <Button className=\"bottom-button\" variant=\"outlined\"\r\n                            onClick={handleRecording}>{!record ? \"Start Recording\" : \"End Recording\"}</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AudioPlayer;","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n    return (\r\n        <>\r\n            <p style={{marginLeft: \"20px\", color: \"white\"}}>Error: Page not found!</p>\r\n            <Link style={{fontSize: \"24px\", marginLeft: \"20px\", color: \"white\"}} to=\"/\">Oh no, go back</Link>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Error;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst BackgroundColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('bcolor') === null ? '#000000' : localStorage.getItem('bcolor'));\r\n\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('bcolor') !== color) {\r\n            localStorage.setItem('bcolor', color);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': {m: 1, minWidth: '25ch'},\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Background Color\r\n                </InputLabel>\r\n                <ColorPicker style={{marginTop: \"18px\"}}\r\n                             name='color'\r\n                             defaultValue={color}\r\n                             className={\"all-form-inputs \" + classes.root}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                             onChange={setColor}\r\n\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default BackgroundColor;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst SoundRange = (classes) => {\r\n    const first = localStorage.getItem('barRange') === null ? 0 : Number(localStorage.getItem('barRange').split(\",\")[0]);\r\n    const last = localStorage.getItem('barRange') === null ? 50 : Number(localStorage.getItem('barRange').split(\",\")[1]);\r\n\r\n    const [value, setValue] = React.useState([first, last]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        if (localStorage.getItem('barRange') != value) {\r\n            localStorage.setItem('barRange', value);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n    if (localStorage.getItem(\"micOrSound\") !== \"toneGenerator\" || localStorage.getItem(\"pinkNoise\") === \"true\") {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Frequency Range\r\n                    </InputLabel>\r\n                    <Slider style={{marginTop: \"24px\"}}\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            valueLabelDisplay=\"auto\"\r\n                            aria-labelledby=\"range-slider\"\r\n                            marks={marks}\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\n\r\nexport default SoundRange;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Height = (classes) => {\r\n\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') != value) {\r\n            localStorage.setItem('height', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Height\r\n                </InputLabel>\r\n                <Slider style={{marginTop: \"24px\"}}\r\n                        getAriaValueText={handleHeight}\r\n                        aria-labelledby=\"discrete-slider\"\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={1}\r\n                        marks={marks}\r\n                        min={0}\r\n                        max={100}\r\n                        defaultValue={localStorage.getItem('height') === null ? 50 : localStorage.getItem('height')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Height;","import React, {useState} from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {WhiteTextField} from \"../WhiteTextField\";\r\n\r\n\r\nconst BarMargin = (classes) => {\r\n\r\n    const [margin, setMargin] = useState(localStorage.getItem('barMargin') === null ? 5 : localStorage.getItem('barMargin'));\r\n    const type = localStorage.getItem('type') === null ? 'bar' : localStorage.getItem('type');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setMargin(0);\r\n                localStorage.setItem('barMargin', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setMargin(1000);\r\n                localStorage.setItem('barMargin', '1000');\r\n            } else {\r\n                setMargin(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('barMargin', '0');\r\n                } else {\r\n                    localStorage.setItem('barMargin', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setMargin(0);\r\n            localStorage.setItem('barMargin', '0');\r\n        }\r\n    };\r\n\r\n    if (type === 'bar') {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': {m: 1, minWidth: '25ch'},\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"outlined-number\" label=\"Bar Margin\"\r\n                                    value={margin}\r\n                                    onChange={updateMargin} InputLabelProps={{\r\n                        shrink: true,\r\n                    }}/>\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default BarMargin;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst LineColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('linecolor') === null ? '#ffffff' : localStorage.getItem('linecolor'));\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('linecolor') !== color) {\r\n            localStorage.setItem('linecolor', color);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': {m: 1, minWidth: '25ch'},\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Line Color\r\n                </InputLabel>\r\n                <ColorPicker style={{marginTop: \"18px\"}}\r\n                             name='color'\r\n                             defaultValue={color}\r\n                             className={\"all-form-inputs \" + classes.root}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                             onChange={setColor}\r\n\r\n                />\r\n\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineColor;","import React, {useState} from 'react'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {WhiteTextField} from \"../WhiteTextField\";\r\n\r\n\r\nconst LineWeight = (classes) => {\r\n\r\n    const [lWeight, setLWeight] = useState(localStorage.getItem('lineWeight') === null ? 1 : localStorage.getItem('lineWeight'));\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLWeight(0);\r\n                localStorage.setItem('lineWeight', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLWeight(1000);\r\n                localStorage.setItem('lineWeight', '1000');\r\n            } else {\r\n                setLWeight(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineWeight', '0');\r\n                } else {\r\n                    localStorage.setItem('lineWeight', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLWeight(0);\r\n            localStorage.setItem('lineWeight', '1');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': {m: 1, minWidth: '25ch'},\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"standard-basic\" label=\"Line Weight\" value={lWeight}\r\n                                onChange={updateMargin}/>\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineWeight;","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst LineFill = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('lineFill') === null ? false : 'true' === localStorage.getItem('lineFill'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bar' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('lineFill', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line' || vis === 'line_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                                  control={\r\n                                      <Checkbox\r\n                                          checked={checked}\r\n                                          onChange={handleChange}\r\n                                          name=\"checkedB\"\r\n                                          color=\"primary\"\r\n                                      />\r\n                                  }\r\n                                  label=\"Fill\"\r\n                />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineFill;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst FillColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('fillcolor') === null ? '#ffffff' : localStorage.getItem('fillcolor'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('fillcolor') !== color) {\r\n            localStorage.setItem('fillcolor', color);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    if (vis === 'multiColor' || vis === 'colorful_circle') {\r\n        return (<></>);\r\n    } else {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': {m: 1, minWidth: '25ch'},\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Fill Color\r\n                    </InputLabel>\r\n                    <ColorPicker style={{marginTop: \"18px\"}}\r\n                                 name='color'\r\n                                 defaultValue={color}\r\n                                 className={\"all-form-inputs \" + classes.root}\r\n                        // value={this.state.color} - for controlled component\r\n\r\n                                 onChange={setColor}\r\n\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FillColor;","import React, {useState} from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {WhiteTextField} from \"../WhiteTextField\";\r\n\r\n\r\nconst LineCircleSize = (classes) => {\r\n\r\n    const [lCircleSize, setLCircleSize] = useState(localStorage.getItem('lineCircleSize') === null ? 50 : localStorage.getItem('lineCircleSize'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLCircleSize(0);\r\n                localStorage.setItem('lineCircleSize', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLCircleSize(1000);\r\n                localStorage.setItem('lineCircleSize', '1000');\r\n            } else {\r\n                setLCircleSize(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineCircleSize', '0');\r\n                } else {\r\n                    localStorage.setItem('lineCircleSize', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLCircleSize(0);\r\n            localStorage.setItem('lineCircleSize', '1');\r\n        }\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': {m: 1, minWidth: '25ch'},\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"standard-basic\"\r\n                                    label=\"Line CircleSize\"\r\n                                    value={lCircleSize}\r\n                                    onChange={updateMargin}/>\r\n                </Box>\r\n            </FormControl>\r\n        )\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\nexport default LineCircleSize;","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst LineCircleShow = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('showLineCircle') === null ? false : 'true' === localStorage.getItem('showLineCircle'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('showLineCircle', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                                      control={\r\n                                          <Checkbox\r\n                                              checked={checked}\r\n                                              onChange={handleChange}\r\n                                              name=\"checkedB\"\r\n                                              color=\"primary\"\r\n                                          />\r\n                                      }\r\n                                      label=\"Show Circle\"\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineCircleShow;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Clipping = (classes) => {\r\n\r\n\r\n    const handleClipping = (value) => {\r\n        if (localStorage.getItem('clipping') != value) {\r\n            localStorage.setItem('clipping', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: '0',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Clipping\r\n                </InputLabel>\r\n                <Slider style={{marginTop: \"24px\"}}\r\n                        getAriaValueText={handleClipping}\r\n                        aria-labelledby=\"discrete-slider\"\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={1}\r\n                        marks={marks}\r\n                        min={0}\r\n                        max={100}\r\n                        defaultValue={localStorage.getItem('clipping') === null ? 20 : localStorage.getItem('clipping')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Clipping;","import React from 'react';\r\nimport Datapoints from './General/Datapoints';\r\nimport BackgroundColor from './General/BackgroundColor';\r\nimport SoundRange from './General/SoundRange';\r\nimport Height from './General/Height';\r\nimport BarMargin from \"./Bar/BarMargin\";\r\nimport LineColor from \"./General/LineColor\";\r\nimport LineWeight from \"./General/LineWeight\";\r\nimport BarType from \"./Bar/BarType\";\r\nimport LineType from \"./Line/LineType\";\r\nimport LineFill from \"./Line/LineFill\";\r\nimport FillColor from \"./General/BarColor\";\r\nimport LineCircleSize from \"./Line/LineCircleSize\";\r\nimport LineCircleShow from \"./Line/LineCircleShow\";\r\nimport Clipping from \"./General/Clipping\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Selection = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"s-container\">\r\n                <BarType classes={classes}/>\r\n                <BarMargin classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <LineType classes={classes}/>\r\n                <LineFill classes={classes}/>\r\n                <LineCircleSize classes={classes}/>\r\n                <LineCircleShow classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <Datapoints classes={classes}/>\r\n                <SoundRange classes={classes}/>\r\n                <Height classes={classes}/>\r\n                <Clipping classes={classes}/>\r\n                <LineWeight classes={classes}/>\r\n                <LineColor classes={classes}/>\r\n                <FillColor classes={classes}/>\r\n                <BackgroundColor classes={classes}/>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Selection;","import React from 'react'\r\nimport {\r\n    EmailShareButton,\r\n    WhatsappShareButton,\r\n    RedditShareButton,\r\n    LinkedinShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    HatenaShareButton,\r\n    FacebookShareButton,\r\n    FacebookMessengerShareButton,\r\n    TwitterShareButton\r\n} from \"react-share\";\r\n\r\n\r\nimport {\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    FacebookMessengerIcon,\r\n    HatenaIcon,\r\n    LinkedinIcon,\r\n    RedditIcon,\r\n    TelegramIcon,\r\n    TumblrIcon,\r\n    WhatsappIcon,\r\n    TwitterIcon\r\n} from \"react-share\";\r\n\r\nconst Share = () => {\r\n    const shareUrl = 'https://soundvisualiser.com';\r\n\r\n    return (\r\n        <div style={{margin: \"20px\"}}>\r\n            <EmailShareButton url={shareUrl}><EmailIcon size={42} round={true}/></EmailShareButton>\r\n            <FacebookShareButton url={shareUrl}><FacebookIcon size={42} round={true}/></FacebookShareButton>\r\n            <FacebookMessengerShareButton url={shareUrl}><FacebookMessengerIcon size={42}\r\n                                                                                round={true}/></FacebookMessengerShareButton>\r\n            <TwitterShareButton url={shareUrl}><TwitterIcon size={42} round={true}/></TwitterShareButton>\r\n            <WhatsappShareButton url={shareUrl}><WhatsappIcon size={42} round={true}/></WhatsappShareButton>\r\n            <RedditShareButton url={shareUrl}><RedditIcon size={42} round={true}/></RedditShareButton>\r\n            <LinkedinShareButton url={shareUrl}><LinkedinIcon size={42} round={true}/></LinkedinShareButton>\r\n            <TelegramShareButton url={shareUrl}><TelegramIcon size={42} round={true}/></TelegramShareButton>\r\n            <TumblrShareButton url={shareUrl}><TumblrIcon size={42} round={true}/></TumblrShareButton>\r\n            <HatenaShareButton url={shareUrl}><HatenaIcon size={42} round={true}/></HatenaShareButton>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Share;\r\n","import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport Share from \"./Share\";\r\n\r\nconst Footer = () => {\r\n\r\n    const [bS, setBS] = useState(localStorage.getItem(\"batteryS\") !== null ? localStorage.getItem(\"batteryS\") : \"true\");\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"share-container\">\r\n                <h2 style={{marginLeft: \"32px\"}}>Share Soundvisualiser</h2>\r\n                <Share/>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{marginLeft: \"0\"}}>Resources</h3>\r\n                <p className=\"footer-p\">How to use (inactive)</p>\r\n                <Link className=\"a-footer\"\r\n                      to=\"./main\"><p className=\"footer-p\">Remove footer</p></Link>\r\n                <a className=\"a-footer\"\r\n                   href=\"/visualizer\"\r\n                   target=\"_blank\"><p className=\"footer-p\">Fullscreen visualizer</p></a>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{marginLeft: \"0\"}}>Add to Desktop</h3>\r\n                <a className=\"a-footer\"\r\n                   href=\"https://natomasunified.org/kb/add-website-to-mobile-device-home-screen/\"\r\n                   target=\"_blank\"><p className=\"footer-p\">Mobile</p></a>\r\n                <a className=\"a-footer\"\r\n                   href=\"https://support.mozilla.org/en-US/kb/create-desktop-shortcut-website\"\r\n                   target=\"_blank\"><p className=\"footer-p\">Desktop</p></a>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{marginLeft: \"0\"}}>Community</h3>\r\n                <a className=\"a-footer\"\r\n                   href=\"https://reddit.com/r/SoundVisualization\"\r\n                   target=\"_blank\"><p className=\"footer-p\">Reddit</p></a>\r\n            </div>\r\n            <div className=\"f-container\" style={{maxWidth: \"230px\"}}>\r\n                {bS === \"true\" ?\r\n                    <>\r\n                        <h3 style={{marginLeft: \"0\"}}>Battery saver enabled</h3>\r\n                        <p>\r\n                            <b style={{cursor: \"pointer\"}} onClick={() => {\r\n                                setBS(\"false\");\r\n                                localStorage.setItem(\"batteryS\", \"false\");\r\n                            }}>Disable it\r\n                            </b>\r\n                            &nbsp;to keep the app active when the tab is hidden.\r\n                        </p>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <h3 style={{marginLeft: \"0\"}}>Battery saver disabled</h3>\r\n                        <p>\r\n                            <b style={{cursor: \"pointer\"}} onClick={() => {\r\n                                setBS(\"true\");\r\n                                localStorage.setItem(\"batteryS\", \"true\");\r\n                            }}>Enable it\r\n                            </b>\r\n                            &nbsp;to make the app inactive when the tab is hidden.\r\n                        </p>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App/>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import TextField from \"@mui/material/TextField\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nexport const WhiteTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            color: '#fff!important', // Text color\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n        },\r\n    },\r\n})(TextField);"],"sourceRoot":""}