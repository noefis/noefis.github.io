{"version":3,"sources":["components/service.js","MainApp.js","App.js","components/Bar/BarType.js","components/Line/LineType.js","components/MusicSelect.js","components/SwitchMicMusic.js","components/General/FreqSelect.js","components/MusicFromLink.js","components/BehindCanvas.js","components/TopSelection.js","components/Error.js","components/General/Datapoints.js","components/General/BackgroundColor.js","components/General/SoundRange.js","components/General/Height.js","components/Bar/BarMargin.js","components/General/LineColor.js","components/General/LineWeight.js","components/Line/LineFill.js","components/General/BarColor.js","components/Line/LineCircleSize.js","components/Line/LineCircleShow.js","components/General/Clipping.js","components/General/Attack.js","components/Selection.js","footer/PwaModal.js","footer/Share.js","footer/Footer.js","ErrorBoundary.js","components/LandingPage.js","components/Record.js","components/AudioPlayer.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js","components/WhiteTextField.js","helpers.js"],"names":["getYtLink","id","done","a","undefined","localStorage","getItem","mp3","title","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","status","setItem","JSON","parse","responseText","file","response","onerror","send","MainApp","useState","reload","setReload","isVisible","usePageVisibility","split","inputs","setInputs","aSettings","window","addEventListener","global","refreshCanvas","theme","createTheme","palette","mode","overrides","MuiOutlinedInput","root","position","borderColor","borderWidth","CheckError","React","setOpen","sx","width","in","severity","action","color","size","onClick","removeItem","fontSize","mb","className","style","marginTop","display","alignItems","paddingTop","textDecoration","href","overflow","src","float","variant","marginBottom","target","URL","revokeObjectURL","clear","minHeight","Number","border","textAlign","App","path","component","LandingPage","exact","search","useLocation","history","useHistory","queryParams","URLSearchParams","v","get","err","message","pushState","document","settings","length","unpackSettings","push","setTimeout","e","Error","BarType","classes","diagram","setDiagram","formControl","m","minWidth","noValidate","autoComplete","select","label","value","onChange","event","LineType","selectEmpty","MusicSelect","setFileName","Input","styled","htmlFor","type","files","startsWith","name","createObjectURL","console","log","manageChange","fontWeight","SwitchMicMusic","micOrSound","setMicOrSound","FreqSelect","freq","setFreq","parseInt","InputLabelProps","shrink","onBlur","MusicFromLink","BehindCanvas","percent","setPercent","TopSelection","text","setText","sText","setSText","marginRight","navigator","clipboard","writeText","createSettings","then","marginLeft","to","Datapoints","FormControl","Box","InputLabel","Slider","getAriaValueText","valueLabelDisplay","step","marks","min","max","defaultValue","BackgroundColor","makeStyles","borderBottomColor","useStyles","SoundRange","first","last","setValue","calculateValue","Math","round","newValue","map","val","scale","Height","BarMargin","margin","setMargin","WhiteTextField","LineColor","LineWeight","lWeight","setLWeight","LineFill","checked","setChecked","vis","FormControlLabel","control","Checkbox","FillColor","LineCircleSize","lCircleSize","setLCircleSize","LineCircleShow","Clipping","Attack","spacing","Selection","top","left","transform","bgcolor","boxShadow","p","borderRadius","paddingBottom","PwaModal","ShareIcon","createSvgIcon","xmlns","viewBox","d","cursor","Modal","onClose","justifyContent","Typography","SvgIcon","Share","shareUrl","EmailShareButton","EmailIcon","FacebookShareButton","FacebookIcon","FacebookMessengerShareButton","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","RedditShareButton","RedditIcon","LinkedinShareButton","LinkedinIcon","TelegramShareButton","TelegramIcon","TumblrShareButton","TumblrIcon","HatenaShareButton","HatenaIcon","Footer","bS","setBS","Mailto","mailto","location","preventDefault","maxWidth","ErrorBoundary","props","state","throwsError","error","info","this","children","Component","y","setY","box","createRef","useEffect","isMobile","pos","current","offsetTop","height","offsetHeight","sliderPos","String","useWindowDimensions","checkWidth","checkWidth2","CustomSlider","withStyles","disabled","thumb","rail","track","padding","onMouseMove","pageY","Grid","container","align","paddingX","item","xs","justify","marginY","ref","WebkitAppearance","orientation","Container","List","ListItem","ListItemIcon","ListItemText","Button","paddingY","options","Record","anchorRef","selectedIndex","setSelectedIndex","record","setRecord","handleClick","handleToggle","prevOpen","handleClose","contains","ButtonGroup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","index","MenuItem","selected","handleMenuItemClick","AudioPlayer","endTime","setEndTime","currentTime","setCurrentTime","isDisabled","formatSmol","num","formatToTime","sec","floor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","process","origin","fetch","headers","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","TextField","getWindowDimensions","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","removeEventListener","data","set","replace","r","includes","sub","join","setting","range","t","b","h","c","w","l","f","o","g","n","s","i","stringify"],"mappings":"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","file":"static/js/main.481c4b50.chunk.js","sourcesContent":["export async function getYtLink(id, done) {\r\n    if (id !== null && id !== undefined) {\r\n        if (localStorage.getItem(\"ytID\") === id) {\r\n            done(null, { mp3: localStorage.getItem(\"ytlink\"), title: localStorage.getItem('musicName') });\r\n        } else {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            let url = \"https://youtube.michaelbelgium.me/api/converter/convert?api_token=a6yTCDXhocWl43LRvrzazsBxvnYPo0vZL4Dm0788iJQPzzTep7Ns2qqUMsDQ&url=https://www.youtube.com/watch?v=\" + id;\r\n\r\n            xhr.open(\"POST\", `${url}`, true);\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        localStorage.setItem(\"ytID\", id);\r\n                        done(null, { mp3: JSON.parse(xhr.responseText).file, title: JSON.parse(xhr.responseText).title });\r\n                    } else {\r\n                        done(JSON.parse(xhr.response));\r\n                    }\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                done(xhr.response);\r\n            };\r\n\r\n            xhr.send(`u=${id}`);\r\n        }\r\n    }\r\n}","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport Button from '@mui/material/Button';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport MusicSelect from \"./components/MusicSelect\";\nimport SwitchMicMusic from \"./components/SwitchMicMusic\";\nimport { usePageVisibility } from 'react-page-visibility';\nimport FreqSelect from \"./components/General/FreqSelect\";\nimport MusicFromLink from \"./components/MusicFromLink\";\nimport BehindCanvas from \"./components/BehindCanvas\";\nimport AudioPlayer from \"./components/AudioPlayer\";\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Alert from \"@mui/material/Alert/Alert\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport TopSelection from './components/TopSelection';\n\nfunction MainApp() {\n    const [reload, setReload] = useState(0);\n    const isVisible = usePageVisibility();\n    const [inputs, setInputs] = useState(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n\n    const aSettings = localStorage.getItem('settings') === \"Advanced\";\n\n    window.addEventListener(\"storage\", () => {\n        if (localStorage.getItem('micOrSound') === \"compareInputs\") {\n            setInputs(typeof localStorage.getItem('icw') === \"string\" ? localStorage.getItem('icw').split(',') : [0, \"none\", \"none\"]);\n        }\n    });\n\n    global.refreshCanvas = () => {\n        setReload(reload + 1);\n    };\n\n    const theme = createTheme({\n        palette: {\n            mode: 'dark',\n        },\n\n        overrides: {\n            MuiOutlinedInput: {\n                root: {\n                    position: \"relative\",\n                    \"& $notchedOutline\": {\n                        borderColor: \"#FFFFFF\"\n                    },\n                    \"&:hover:not($disabled):not($focused):not($error) $notchedOutline\": {\n                        borderColor: \"#FFFFFF\",\n                        \"@media (hover: none)\": {\n                            borderColor: \"#FFFFFF\"\n                        }\n                    },\n                    \"&$focused $notchedOutline\": {\n                        borderColor: \"#FFFFFF\",\n                        borderWidth: 1\n                    }\n                }\n            }\n        }\n    });\n\n    const CheckError = () => {\n\n        const [open, setOpen] = React.useState(localStorage.getItem(\"error\") !== null);\n\n        return (\n            <Box sx={{ width: '100%' }}>\n                <Collapse in={open}>\n                    <Alert\n                        severity=\"error\"\n                        action={\n                            <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                size=\"small\"\n                                onClick={() => {\n                                    setOpen(false);\n                                    localStorage.removeItem(\"error\");\n                                }}\n                            >\n                                <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                    >\n                        {localStorage.getItem(\"error\")}\n                    </Alert>\n                </Collapse>\n            </Box>\n        )\n    };\n\n    if (isVisible || localStorage.getItem(\"batteryS\") === \"false\") {\n        return (\n            <div className=\"app\">\n                <ThemeProvider theme={theme}>\n                    <div style={{ marginTop: 15, display: \"flex\", alignItems: \"center\" }}>\n                        <h1 style={{ display: \"inline\", paddingTop: 0 }}><a style={{ textDecoration: \"none\", color: \"inherit\" }} href=\"https://soundvisualiser.com\">Sound&nbsp;Visualizer</a>\n                        </h1>\n                        <div style={{ width: \"100%\", overflow: \"auto\" }}>\n                            <TopSelection key={reload} />\n                        </div>\n                    </div>\n                    <div className=\"sticky-canvas\" key={reload}>\n                        <iframe id=\"iframe1\" src=\"/visualizer/index.html\" title={reload} />\n                        <BehindCanvas />\n                        <AudioPlayer />\n                    </div>\n                    <div className=\"big-container\">\n                        <div id=\"full-screen\">\n                            <div className='float-container' style={{ float: \"right\" }}>\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                    style={{ marginBottom: \"20px\" }}\n                                    onClick={() => setReload(reload + 1)}>reload\n                                    Canvas</Button>&nbsp;\n                                {aSettings && <>\n                                    <Button className=\"bottom-button\" variant=\"outlined\"\n                                        style={{ marginBottom: \"20px\" }}\n                                        href=\"/visualizer/index.html\" target=\"_blank\"> Open\n                                        Visualizer in\n                                        Fullscreen</Button> &nbsp;\n                                </>}\n                                <Button className=\"bottom-button\" variant=\"outlined\"\n                                    style={{ marginBottom: \"20px\" }}\n                                    onClick={() => {\n                                        setReload(reload + 1);\n                                        if (localStorage.getItem('musicData') !== null) {\n                                            URL.revokeObjectURL(localStorage.getItem('musicData'))\n                                        }\n                                        localStorage.clear();\n                                    }}> Reset Visualizer</Button>\n                            </div>\n                            <p>Info:&nbsp;In&nbsp;Fullscreen:&nbsp;Press&nbsp;\"P\"&nbsp;to&nbsp;record PNG, \"W\" to record\n                                webm and \"S\" to stop</p>\n                            {(localStorage.getItem('micOrSound') === null || localStorage.getItem('micOrSound') === \"mic\" || localStorage.getItem('micOrSound') === \"compareInputs\") &&\n                                <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to freeze/unfreeze\n                                    diagram</p>}\n                            {localStorage.getItem('micOrSound') === \"sound\" &&\n                                <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") &&\n                                <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to create a tone</p>}\n                            {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"true\") &&\n                                <p>Info:&nbsp;Press&nbsp;on&nbsp;the&nbsp;canvas to play/pause</p>}\n                        </div>\n                    </div>\n                    <div className=\"big-container\">\n                        <div id=\"full-screen\" style={{ minHeight: \"40px\" }}>\n                            {aSettings && <>\n                                {localStorage.getItem('micOrSound') !== \"compareInputs\" &&\n                                    <Button className=\"bottom-button\" variant=\"outlined\" style={{ marginBottom: \"20px\" }}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            localStorage.setItem('micOrSound', \"compareInputs\");\n                                        }}>\n                                        Compare two audio sources\n                                    </Button>\n                                }\n                                &nbsp;\n                                {(localStorage.getItem('micOrSound') !== \"toneGenerator\" || localStorage.getItem('pinkNoise') !== \"true\") &&\n                                    <Button className=\"bottom-button\" variant=\"outlined\" style={{ marginBottom: \"20px\" }}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            localStorage.setItem('micOrSound', \"toneGenerator\");\n                                            localStorage.setItem('pinkNoise', \"true\");\n                                        }}>\n                                        Generate Pink Noise\n                                    </Button>\n                                }\n                                &nbsp;\n                                {(localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') !== \"true\") === false &&\n                                    < Button className=\"bottom-button\" variant=\"outlined\" style={{ marginBottom: \"20px\" }}\n                                        onClick={() => {\n                                            setReload(reload + 1);\n                                            localStorage.setItem('micOrSound', \"toneGenerator\");\n                                            localStorage.setItem('pinkNoise', \"false\");\n                                        }}>\n                                        Tone Generator\n                                    </Button>\n                                }\n                                &nbsp;\n                                {localStorage.getItem('micOrSound') === \"toneGenerator\" && localStorage.getItem('pinkNoise') === \"false\" &&\n                                    <FreqSelect />\n                                }\n                            </>}\n                            <MusicSelect key={\"m\" + reload} />\n                            <MusicFromLink key={\"reg\" + reload} />\n                            <SwitchMicMusic key={\"s\" + reload} />\n                            {localStorage.getItem('micOrSound') === \"sound\" && <p>Song\n                                name: {localStorage.getItem('musicName')}</p>}\n                            {localStorage.getItem('micOrSound') === \"compareInputs\" && <><p>Info: This feature is\n                                only\n                                supported by the following browsers: <b>Chrome, Edge</b></p><p>\n                                    Info: {inputs[0]} input(s) found{Number(inputs[0]) > 1 && <>,\n                                        using {inputs[1] != '' ? inputs[1] : 'first'} and {inputs[2] != '' ? inputs[2] : 'last'} for\n                                        the comparison\n                                    </>}</p></>\n                            }\n                        </div>\n                        <CheckError />\n                    </div>\n                    <div className=\"big-container\" style={{ border: \"none\" }}>\n                        <Selection key={\"g\" + reload} />\n                    </div>\n                </ThemeProvider>\n            </div>\n        );\n    } else {\n        return <div style={{ color: \"white\", textAlign: \"center\", marginTop: \"49vh\" }}>\n            <h2>Battery Saver active, click <a href=\"/\">here</a> to reload</h2>\n        </div>\n    }\n}\n\nexport default MainApp;\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MainApp from \"./MainApp\";\r\nimport Error from \"./components/Error\";\r\nimport Footer from \"./footer/Footer\";\r\nimport { getYtLink } from \"./components/service\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport { unpackSettings } from './helpers';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n    const FullMainApp = () => {\r\n        const { search } = useLocation();\r\n        const history = useHistory();\r\n        const queryParams = new URLSearchParams(search, [search]);\r\n        const v = queryParams.get('v');\r\n\r\n\r\n        getYtLink(v, (err, url) => {\r\n            if (err) {\r\n                localStorage.setItem(\"error\", err.message);\r\n                global.refreshCanvas();\r\n                window.history.pushState({}, document.title, \"/\");\r\n            }\r\n            if (url !== undefined) {\r\n                localStorage.setItem('micOrSound', 'sound');\r\n                localStorage.setItem('musicName', url.title);\r\n                localStorage.setItem(\"ytlink\", url.mp3);\r\n                window.history.pushState({}, document.title, \"/\");\r\n                global.refreshCanvas();\r\n            }\r\n        });\r\n\r\n\r\n        const settings = queryParams.get('settings');\r\n        if (settings !== null && settings !== undefined && settings.length > 9) {\r\n            unpackSettings(settings);\r\n            history.push(\"/visualiser\");\r\n            setTimeout(() => { try { global.refreshCanvas(); } catch (e) { } }, 150);\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <MainApp />\r\n                <Footer />\r\n            </>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route path=\"/\" component={LandingPage} exact />\r\n                <Route path=\"/visualiser\" component={FullMainApp} exact />\r\n                <Route path=\"/main\" component={MainApp} />\r\n                <Route component={Error} />\r\n            </Switch>\r\n        </main>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\nconst BarType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(localStorage.getItem('vis') === null || localStorage.getItem('vis') === \"bars\" ? \"bars\" : localStorage.getItem('vis'));\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"bar\");\r\n        switch (event.target.value) {\r\n            case \"bars\":\r\n                localStorage.setItem('vis', \"bars\");\r\n                break;\r\n            case \"doubleBars\":\r\n                localStorage.setItem('vis', \"doubleBars\");\r\n                break;\r\n            case \"sidebars\":\r\n                localStorage.setItem('vis', \"sidebars\");\r\n                break;\r\n            case \"bar_circle\":\r\n                localStorage.setItem('vis', \"bar_circle\");\r\n                break;\r\n            case \"multiColor\":\r\n                localStorage.setItem('vis', \"multiColor\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"bars\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField\r\n                    className={\"all-form-inputs\"}\r\n                    id=\"outlined\"\r\n                    select\r\n                    label=\"Bar Diagrams\"\r\n                    variant=\"standard\"\r\n                    value={diagram}\r\n                    onChange={handleDiagram}\r\n                >\r\n                    <MenuItem key={\"bars\"} value={\"bars\"}>Bars</MenuItem>\r\n                    <MenuItem key={\"doubleBars\"} value={\"doubleBars\"}>Double Bars</MenuItem>\r\n                    <MenuItem key={\"sidebars\"} value={\"sidebars\"}>Sidebars</MenuItem>\r\n                    <MenuItem key={\"bar_circle\"} value={\"bar_circle\"}>Circle</MenuItem>\r\n                    <MenuItem key={\"multiColor\"} value={\"multiColor\"}>Multi Color</MenuItem>\r\n                </WhiteTextField>\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default BarType;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField/TextField\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\nconst LineType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(getLS);\r\n\r\n    function getLS() {\r\n        if (localStorage.getItem('vis') === null) {\r\n            return \"none\";\r\n        } else if (localStorage.getItem('vis') === \"line\") {\r\n            return \"line\";\r\n        } else {\r\n            return localStorage.getItem('vis');\r\n        }\r\n\r\n    }\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"line\");\r\n        switch (event.target.value) {\r\n            case \"line\":\r\n                localStorage.setItem('vis', \"line\");\r\n                break;\r\n            case \"line_circle\":\r\n                localStorage.setItem('vis', \"line_circle\");\r\n                break;\r\n            case \"colorful_circle\":\r\n                localStorage.setItem('vis', \"colorful_circle\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"line\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField variant=\"standard\"\r\n                    id=\"outlined\"\r\n                    select\r\n                    label=\"Line Diagrams\"\r\n                    value={diagram}\r\n                    onChange={handleDiagram}\r\n                    className={\"all-form-inputs \" + classes.selectEmpty}\r\n                >\r\n                    <MenuItem value={\"line\"}>Line</MenuItem>\r\n                    <MenuItem value={\"line_circle\"}>Circle</MenuItem>\r\n                    <MenuItem value={\"colorful_circle\"}>Colorful Circle</MenuItem>\r\n                </WhiteTextField>\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default LineType;","import React, { useState } from 'react'\r\nimport Input from \"@mui/material/Input\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\nconst MusicSelect = () => {\r\n    const [fileName, setFileName] = useState(localStorage.getItem('musicName') === null ? \"\" : localStorage.getItem('musicName'));\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const manageChange = (e) => {\r\n        let file = e.target.files[0];\r\n        if (file.type && !file.type.startsWith('audio/')) {\r\n            console.log('File is not an audio file.', file.type, file);\r\n            return;\r\n        }\r\n        setFileName(file.name);\r\n        if (localStorage.getItem('musicData') !== null) {\r\n            URL.revokeObjectURL(localStorage.getItem('musicData'));\r\n        }\r\n        localStorage.setItem('musicData', URL.createObjectURL(file));\r\n        localStorage.setItem('musicName', file.name);\r\n        localStorage.setItem('micOrSound', 'sound');\r\n        localStorage.removeItem('ytlink');\r\n        global.refreshCanvas();\r\n    };\r\n\r\n\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n    if (localStorage.getItem('type') !== \"compareInputs\") {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"contained-button-file\" className=\"right-when-large\"\r\n                    style={{ marginBottom: \"40px\" }}>\r\n                    <Input id=\"contained-button-file\" type=\"file\"\r\n                        onChange={e => manageChange(e)} />\r\n                    <Button className=\"bottom-button\" style={{ marginBottom: \"20px\", fontWeight: 700 }} variant=\"contained\"\r\n                        component=\"span\">\r\n                        Select Song\r\n                    </Button>\r\n                    &nbsp;\r\n                </label>\r\n            </>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\nexport default MusicSelect;","import React, { useState } from 'react'\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nconst SwitchMicMusic = () => {\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const changeInput = () => {\r\n        setMicOrSound(\"mic\");\r\n        localStorage.setItem('micOrSound', \"mic\");\r\n        global.refreshCanvas();\r\n    };\r\n    if (micOrSound === \"toneGenerator\" || micOrSound === \"compareInputs\" || micOrSound === \"sound\") {\r\n        return (\r\n            <label className=\"right-when-large\">\r\n                <Button className=\"bottom-button\" style={{ marginBottom: \"20px\" }} variant=\"outlined\"\r\n                    component=\"span\" onClick={changeInput}>\r\n                    Switch back to Microphone Input\r\n                </Button>\r\n                &nbsp;\r\n            </label>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default SwitchMicMusic;","import React, { useState } from 'react'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\n\r\nconst FreqSelect = (classes) => {\r\n\r\n    const [freq, setFreq] = useState(localStorage.getItem('freq') === null ? 50 : localStorage.getItem('freq'));\r\n\r\n    const updateFreq = (e) => {\r\n        try {\r\n            if (e.target.value > 9999) {\r\n                setFreq(9999);\r\n                localStorage.setItem('freq', '9999');\r\n            } else {\r\n                if (e.target.value === '' || e.target.value < 50) {\r\n                    setFreq(e.target.value)\r\n                } else {\r\n                    setFreq(parseInt(e.target.value));\r\n                    localStorage.setItem('freq', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setFreq(0);\r\n            localStorage.setItem('freq', '0');\r\n        }\r\n    };\r\n\r\n    const changeText = () => {\r\n        if (freq === '' || freq < 50) {\r\n            setFreq(50);\r\n            localStorage.setItem('freq', '50');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"freq \" + classes.formControl}>\r\n            <WhiteTextField variant=\"standard\" type=\"number\" id=\"outlined-number\" label=\"Frequency\" value={freq}\r\n                onChange={updateFreq}\r\n                InputLabelProps={{ shrink: true, }} onBlur={changeText} />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default FreqSelect;","import React, { useState } from 'react'\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { getYtLink } from \"./service\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\n\r\nconst MusicFromLink = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function youtube_parser(url) {\r\n        var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n        var match = url.match(regExp);\r\n        return (match && match[7].length === 11) ? match[7] : false;\r\n    }\r\n\r\n    const manageChange = (e) => {\r\n        const link = e.target.value;\r\n        if (link.length > 15 && youtube_parser(link) !== false) {\r\n            const id = youtube_parser(link);\r\n            setLoading(true);\r\n            getYtLink(id, (err, url) => {\r\n                setLoading(false);\r\n                if (err) {\r\n                    localStorage.setItem(\"error\", err.message);\r\n                    global.refreshCanvas();\r\n                } else {\r\n                    localStorage.setItem('micOrSound', 'sound');\r\n                    localStorage.setItem('musicName', url.title);\r\n                    localStorage.setItem(\"ytlink\", url.mp3);\r\n                    global.refreshCanvas();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return <></>; //This feature doesn't work anymore\r\n    /*\r\n        return (\r\n            <label className=\"right-when-large\" style={{marginBottom: \"20px\"}}>\r\n                <TextField id=\"outlined-basic\" style={{marginBottom: \"20px\"}} className=\"bottom-button\"\r\n                           placeholder=\"YouTube Link\" variant=\"outlined\"\r\n                           onChange={e => manageChange(e)}/>\r\n                &nbsp;\r\n                {loading &&\r\n                <Box sx={{display: 'flex'}}>\r\n                    <CircularProgress size={30}/>\r\n                    &nbsp;\r\n                </Box>\r\n                }\r\n            </label>\r\n        )\r\n     */\r\n};\r\n\r\nexport default MusicFromLink;","import React, { useState } from 'react'\r\n\r\nconst BehindCanvas = () => {\r\n    const [percent, setPercent] = useState(\"\");\r\n\r\n    window.addEventListener(\"storage\", () => {\r\n        if (localStorage.getItem(\"percentLoaded\") !== null) {\r\n            setPercent(localStorage.getItem(\"percentLoaded\"));\r\n        }\r\n    });\r\n\r\n    if (localStorage.getItem(\"percentLoaded\") !== null) {\r\n        return (\r\n            <div className=\"troubleshooting\">\r\n                Loaded {percent}%\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"troubleshooting\">\r\n                If the canvas doesn't load, try the following:\r\n                <ol>\r\n                    <li>Press Reload Canvas</li>\r\n                    {localStorage.getItem('musicData') !== null ? <li><b>Select your sound file again</b></li> :\r\n                        <li>Check microphone permissions for your browser in your OS's system</li>}\r\n                    <li>Disable any ad or javascript blocker that might cause an interference</li>\r\n                    <li>Press <b>Reset Visualizer</b></li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default BehindCanvas;","import { Button } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { createSettings } from \"../helpers\";\r\n\r\n\r\nconst TopSelection = () => {\r\n\r\n    const [text, setText] = useState(\"Save Settings as Link\");\r\n    const [sText, setSText] = useState(localStorage.getItem('settings') === \"Advanced\" ? \"Simple\" : \"Advanced\");\r\n\r\n    const saveToClipboard = () => {\r\n        navigator.clipboard.writeText(\"http://soundvisualiser.com/#/visualiser?settings=\" + createSettings()).then(() => {\r\n            setText(\"Copied!\");\r\n            setTimeout(() => { setText(\"Save Settings as Link\") }, 1500);\r\n        })\r\n    }\r\n\r\n    const changeSettingsType = () => {\r\n        if (sText === \"Advanced\") {\r\n            setSText(\"Simple\");\r\n            localStorage.setItem('settings', 'Advanced');\r\n            global.refreshCanvas();\r\n        } else {\r\n            setSText(\"Advanced\");\r\n            localStorage.setItem('settings', 'Simpl');\r\n            global.refreshCanvas();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ float: \"right\", marginRight: 25 }}>\r\n            <Button className=\"bottom-button\" variant=\"outlined\" onClick={saveToClipboard}>{text}</Button>&nbsp;\r\n            <Button className=\"bottom-button\" style={{ fontWeight: sText === \"Advanced\" ? 700 : 300 }} variant={sText === \"Advanced\" ? 'contained' : 'outlined'} onClick={changeSettingsType}>Show {sText} Settings</Button>&nbsp;\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TopSelection;","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n    return (\r\n        <>\r\n            <p style={{ marginLeft: \"20px\", color: \"white\" }}>Error: Page not found!</p>\r\n            <Link style={{ fontSize: \"24px\", marginLeft: \"20px\", color: \"white\" }} to=\"/\">Oh no, go back</Link>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Datapoints = (classes) => {\r\n\r\n\r\n    const handleBarMultiple = (value) => {\r\n        if (localStorage.getItem('barMultiple') != value) {\r\n            localStorage.setItem('barMultiple', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 5,\r\n            label: '2^5',\r\n        },\r\n        {\r\n            value: 8,\r\n            label: '2^8',\r\n        },\r\n        {\r\n            value: 12,\r\n            label: '2^12',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Amount of Datapoints\r\n                </InputLabel>\r\n                <Slider style={{ marginTop: \"24px\" }}\r\n                    getAriaValueText={handleBarMultiple}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={5}\r\n                    max={14}\r\n                    defaultValue={localStorage.getItem('barMultiple') === null ? 9 : localStorage.getItem('barMultiple')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Datapoints;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst BackgroundColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('bcolor') === null ? '#000000' : localStorage.getItem('bcolor'));\r\n\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('bcolor') !== color) {\r\n            localStorage.setItem('bcolor', color);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Background Color\r\n                </InputLabel>\r\n                <ColorPicker style={{ marginTop: \"18px\" }}\r\n                    name='color'\r\n                    defaultValue={color}\r\n                    className={\"all-form-inputs \" + classes.root}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                    onChange={setColor}\r\n\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default BackgroundColor;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst SoundRange = (classes) => {\r\n    const first = localStorage.getItem('unscaledBarRange') === null ? 0 : Number(localStorage.getItem('unscaledBarRange').split(\",\")[0]);\r\n    const last = localStorage.getItem('unscaledBarRange') === null ? 50 : Number(localStorage.getItem('unscaledBarRange').split(\",\")[1]);\r\n\r\n    const [value, setValue] = React.useState([first, last]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        console.log(newValue);\r\n        if (newValue[0] - newValue[1] > 1 || newValue[0] - newValue[1] < -1) {\r\n            setValue(newValue);\r\n            if (localStorage.getItem('unscaledBarRange') != value) {\r\n                localStorage.setItem('unscaledBarRange', value);\r\n                localStorage.setItem('barRange', value.map(val => calculateValue(val)));\r\n            }\r\n        }\r\n    };\r\n\r\n    function calculateValue(value) {\r\n        const val = Math.round(1.04713 ** value * 10) / 10;\r\n        return val;\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n    if (localStorage.getItem(\"micOrSound\") !== \"toneGenerator\" || localStorage.getItem(\"pinkNoise\") === \"true\") {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Frequency Range\r\n                    </InputLabel>\r\n                    <Slider style={{ marginTop: \"24px\" }}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        scale={calculateValue}\r\n                        marks={marks}\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n\r\n\r\nexport default SoundRange;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Height = (classes) => {\r\n\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') != value) {\r\n            localStorage.setItem('height', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 200,\r\n            label: '200',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Height\r\n                </InputLabel>\r\n                <Slider style={{ marginTop: \"24px\" }}\r\n                    getAriaValueText={handleHeight}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={200}\r\n                    defaultValue={localStorage.getItem('height') === null ? 90 : localStorage.getItem('height')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Height;","import React, { useState } from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\n\r\nconst BarMargin = (classes) => {\r\n\r\n    const [margin, setMargin] = useState(localStorage.getItem('barMargin') === null ? 5 : localStorage.getItem('barMargin'));\r\n    const type = localStorage.getItem('type') === null ? 'bar' : localStorage.getItem('type');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setMargin(0);\r\n                localStorage.setItem('barMargin', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setMargin(1000);\r\n                localStorage.setItem('barMargin', '1000');\r\n            } else {\r\n                setMargin(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('barMargin', '0');\r\n                } else {\r\n                    localStorage.setItem('barMargin', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setMargin(0);\r\n            localStorage.setItem('barMargin', '0');\r\n        }\r\n    };\r\n\r\n    if (type === 'bar') {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"outlined-number\" label=\"Bar Margin\"\r\n                        value={margin}\r\n                        onChange={updateMargin} InputLabelProps={{\r\n                            shrink: true,\r\n                        }} />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default BarMargin;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst LineColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('linecolor') === null ? '#ffffff' : localStorage.getItem('linecolor'));\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('linecolor') !== color) {\r\n            localStorage.setItem('linecolor', color);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Line Color\r\n                </InputLabel>\r\n                <ColorPicker style={{ marginTop: \"18px\" }}\r\n                    name='color'\r\n                    defaultValue={color}\r\n                    className={\"all-form-inputs \" + classes.root}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                    onChange={setColor}\r\n\r\n                />\r\n\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineColor;","import React, { useState } from 'react'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\n\r\nconst LineWeight = (classes) => {\r\n\r\n    const [lWeight, setLWeight] = useState(localStorage.getItem('lineWeight') === null ? 1 : localStorage.getItem('lineWeight'));\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLWeight(0);\r\n                localStorage.setItem('lineWeight', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLWeight(1000);\r\n                localStorage.setItem('lineWeight', '1000');\r\n            } else {\r\n                setLWeight(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineWeight', '0');\r\n                } else {\r\n                    localStorage.setItem('lineWeight', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLWeight(0);\r\n            localStorage.setItem('lineWeight', '1');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"standard-basic\" label=\"Line Weight\" value={lWeight}\r\n                    onChange={updateMargin} />\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineWeight;","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst LineFill = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('lineFill') === null ? false : 'true' === localStorage.getItem('lineFill'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bar' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('lineFill', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line' || vis === 'line_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <FormControlLabel className={classes.formControl} style={{ color: \"#b9b9bb\" }}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Fill\"\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineFill;","import React from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\nimport Box from \"@mui/material/Box\";\r\nimport makeStyles from \"@mui/styles/makeStyles/makeStyles\";\r\n\r\n\r\nconst FillColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('fillcolor') === null ? '#ffffff' : localStorage.getItem('fillcolor'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const aSettings = localStorage.getItem('settings') === \"Advanced\";\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('fillcolor') !== color) {\r\n            localStorage.setItem('fillcolor', color);\r\n\r\n            if(!aSettings){\r\n                localStorage.setItem('linecolor', color);\r\n            }\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n            },\r\n        },\r\n    });\r\n    classes = useStyles();\r\n\r\n    if (vis === 'multiColor' || vis === 'colorful_circle') {\r\n        return (<></>);\r\n    } else {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <InputLabel className={\"all-form-inputs\"} shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Fill Color\r\n                    </InputLabel>\r\n                    <ColorPicker style={{ marginTop: \"18px\" }}\r\n                        name='color'\r\n                        defaultValue={color}\r\n                        className={\"all-form-inputs \" + classes.root}\r\n                        // value={this.state.color} - for controlled component\r\n\r\n                        onChange={setColor}\r\n\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FillColor;","import React, { useState } from 'react'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { WhiteTextField } from \"../WhiteTextField\";\r\n\r\n\r\nconst LineCircleSize = (classes) => {\r\n\r\n    const [lCircleSize, setLCircleSize] = useState(localStorage.getItem('lineCircleSize') === null ? 50 : localStorage.getItem('lineCircleSize'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLCircleSize(0);\r\n                localStorage.setItem('lineCircleSize', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLCircleSize(1000);\r\n                localStorage.setItem('lineCircleSize', '1000');\r\n            } else {\r\n                setLCircleSize(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineCircleSize', '0');\r\n                } else {\r\n                    localStorage.setItem('lineCircleSize', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLCircleSize(0);\r\n            localStorage.setItem('lineCircleSize', '1');\r\n        }\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, minWidth: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <WhiteTextField className={\"all-form-inputs\"} variant=\"standard\" type=\"number\" id=\"standard-basic\"\r\n                        label=\"Line CircleSize\"\r\n                        value={lCircleSize}\r\n                        onChange={updateMargin} />\r\n                </Box>\r\n            </FormControl>\r\n        )\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\nexport default LineCircleSize;","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst LineCircleShow = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('showLineCircle') === null ? false : 'true' === localStorage.getItem('showLineCircle'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('showLineCircle', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <FormControlLabel className={classes.formControl} style={{ color: \"#b9b9bb\" }}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Show Circle\"\r\n                    />\r\n                </Box>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineCircleShow;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Clipping = (classes) => {\r\n\r\n\r\n    const handleClipping = (value) => {\r\n        if (localStorage.getItem('clipping') != value) {\r\n            localStorage.setItem('clipping', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: '0',\r\n        },\r\n        {\r\n            value: 200,\r\n            label: '200',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Clipping\r\n                </InputLabel>\r\n                <Slider style={{ marginTop: \"24px\" }}\r\n                    getAriaValueText={handleClipping}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={200}\r\n                    defaultValue={localStorage.getItem('clipping') === null ? 100 : localStorage.getItem('clipping')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Clipping;","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst Attack = (classes) => {\r\n\r\n\r\n    const handleAttack = (value) => {\r\n        if (localStorage.getItem('attack') != value) {\r\n            localStorage.setItem('attack', value);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: '0',\r\n        },\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Attack\r\n                </InputLabel>\r\n                <Slider style={{ marginTop: \"24px\" }}\r\n                    getAriaValueText={handleAttack}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={0.01}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={0.99}\r\n                    defaultValue={localStorage.getItem('attack') === null ? 0.9 : localStorage.getItem('attack')}\r\n                />\r\n            </Box>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Attack;","import React from 'react';\r\nimport Datapoints from './General/Datapoints';\r\nimport BackgroundColor from './General/BackgroundColor';\r\nimport SoundRange from './General/SoundRange';\r\nimport Height from './General/Height';\r\nimport BarMargin from \"./Bar/BarMargin\";\r\nimport LineColor from \"./General/LineColor\";\r\nimport LineWeight from \"./General/LineWeight\";\r\nimport BarType from \"./Bar/BarType\";\r\nimport LineType from \"./Line/LineType\";\r\nimport LineFill from \"./Line/LineFill\";\r\nimport FillColor from \"./General/BarColor\";\r\nimport LineCircleSize from \"./Line/LineCircleSize\";\r\nimport LineCircleShow from \"./Line/LineCircleShow\";\r\nimport Clipping from \"./General/Clipping\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport Attack from \"./General/Attack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Selection = () => {\r\n    const classes = useStyles();\r\n    const aSettings = localStorage.getItem('settings') === \"Advanced\";\r\n\r\n    return (\r\n        <>\r\n            <div className=\"s-container\">\r\n                <BarType classes={classes} />\r\n                <BarMargin classes={classes} />\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <LineType classes={classes} />\r\n                <LineFill classes={classes} />\r\n                {aSettings && <LineCircleSize classes={classes} />}\r\n                <LineCircleShow classes={classes} />\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <Datapoints classes={classes} />\r\n                {aSettings && <Attack classes={classes} />}\r\n                <SoundRange classes={classes} />\r\n                <Height classes={classes} />\r\n                {aSettings && <>\r\n                    <Clipping classes={classes} />\r\n                    <LineWeight classes={classes} />\r\n                    <LineColor classes={classes} />\r\n                </>}\r\n                <FillColor classes={classes} />\r\n                <BackgroundColor classes={classes} />\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Selection;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport { createSvgIcon } from '@mui/material';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 360,\r\n    bgcolor: '#111',\r\n    boxShadow: 24,\r\n    p: 3,\r\n    borderRadius: '60px',\r\n    paddingBottom: '32px',\r\n};\r\n\r\nconst PwaModal = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const ShareIcon = createSvgIcon(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\"><path d=\"M30.3 13.7L25 8.4l-5.3 5.3-1.4-1.4L25 5.6l6.7 6.7z\" /><path d=\"M24 7h2v21h-2z\" /><path d=\"M35 40H15c-1.7 0-3-1.3-3-3V19c0-1.7 1.3-3 3-3h7v2h-7c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h20c.6 0 1-.4 1-1V19c0-.6-.4-1-1-1h-7v-2h7c1.7 0 3 1.3 3 3v18c0 1.7-1.3 3-3 3z\" /></svg>,\r\n        'Home',\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <a style={{ cursor: \"pointer\" }} className=\"a-footer\" onClick={handleOpen}><p className=\"footer-p\">Mobile</p></a>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\">\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Tap<SvgIcon component={ShareIcon} fontSize=\"large\" sx={{ marginBottom: -0.5 }} />&nbsp; then \"Add to Home Screen\"\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PwaModal;","import React from 'react'\r\nimport {\r\n    EmailShareButton,\r\n    WhatsappShareButton,\r\n    RedditShareButton,\r\n    LinkedinShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    HatenaShareButton,\r\n    FacebookShareButton,\r\n    FacebookMessengerShareButton,\r\n    TwitterShareButton\r\n} from \"react-share\";\r\n\r\n\r\nimport {\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    FacebookMessengerIcon,\r\n    HatenaIcon,\r\n    LinkedinIcon,\r\n    RedditIcon,\r\n    TelegramIcon,\r\n    TumblrIcon,\r\n    WhatsappIcon,\r\n    TwitterIcon\r\n} from \"react-share\";\r\n\r\nconst Share = () => {\r\n    const shareUrl = 'https://soundvisualiser.com';\r\n\r\n    return (\r\n        <div style={{ margin: \"20px\" }}>\r\n            <EmailShareButton url={shareUrl}><EmailIcon size={42} round={true} /></EmailShareButton>\r\n            <FacebookShareButton url={shareUrl}><FacebookIcon size={42} round={true} /></FacebookShareButton>\r\n            <FacebookMessengerShareButton url={shareUrl}><FacebookMessengerIcon size={42}\r\n                round={true} /></FacebookMessengerShareButton>\r\n            <TwitterShareButton url={shareUrl}><TwitterIcon size={42} round={true} /></TwitterShareButton>\r\n            <WhatsappShareButton url={shareUrl}><WhatsappIcon size={42} round={true} /></WhatsappShareButton>\r\n            <RedditShareButton url={shareUrl}><RedditIcon size={42} round={true} /></RedditShareButton>\r\n            <LinkedinShareButton url={shareUrl}><LinkedinIcon size={42} round={true} /></LinkedinShareButton>\r\n            <TelegramShareButton url={shareUrl}><TelegramIcon size={42} round={true} /></TelegramShareButton>\r\n            <TumblrShareButton url={shareUrl}><TumblrIcon size={42} round={true} /></TumblrShareButton>\r\n            <HatenaShareButton url={shareUrl}><HatenaIcon size={42} round={true} /></HatenaShareButton>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Share;\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PwaModal from './PwaModal';\r\nimport Share from \"./Share\";\r\n\r\nconst Footer = () => {\r\n\r\n    const [bS, setBS] = useState(localStorage.getItem(\"batteryS\") !== null ? localStorage.getItem(\"batteryS\") : \"true\");\r\n\r\n    const Mailto = ({ mailto, label }) => {\r\n        return (\r\n            <Link\r\n                className=\"a-footer\"\r\n                onClick={(e) => {\r\n                    window.location = mailto;\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <p className=\"footer-p\">{label}</p>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"share-container\">\r\n                <h2 style={{ marginLeft: \"32px\" }}>Share Soundvisualiser</h2>\r\n                <Share />\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{ marginLeft: \"0\" }}>Resources</h3>\r\n                <Link className=\"a-footer\"\r\n                    to=\"./main\"><p className=\"footer-p\">Remove footer</p></Link>\r\n                <a className=\"a-footer\"\r\n                    href=\"/visualizer/index.html\"\r\n                    target=\"_blank\"><p className=\"footer-p\">Fullscreen visualizer</p></a>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{ marginLeft: \"0\" }}>Download</h3>\r\n                <PwaModal />\r\n                <a className=\"a-footer\"\r\n                    href=\"https://support.mozilla.org/en-US/kb/create-desktop-shortcut-website\"\r\n                    target=\"_blank\"><p className=\"footer-p\">Desktop</p></a>\r\n            </div>\r\n            <div className=\"f-container\">\r\n                <h3 style={{ marginLeft: \"0\" }}>Community</h3>\r\n                <a className=\"a-footer\"\r\n                    href=\"https://reddit.com/r/SoundVisualization\"\r\n                    target=\"_blank\"><p className=\"footer-p\">Reddit</p></a>\r\n                <Mailto label=\"Give Feedback\" mailto=\"mailto:soundvisualiser@gmail.com?subject=User Feedback&body=Hi Noel,%0D%0A%0D%0AI would like to give you some feedback.%0D%0A%0D%0AHere's something that caught my eye: %0D%0A●%0D%0A%0D%0A Here's something I like: %0D%0A●%0D%0A%0D%0A Here's something I don't like:%0D%0A●%0D%0A%0D%0A Cheers, \" />\r\n                <Mailto label=\"Contact\" mailto=\"mailto:soundvisualiser@gmail.com?subject=Contact\" />\r\n            </div>\r\n            <div className=\"f-container\" style={{ maxWidth: \"230px\" }}>\r\n                {bS === \"true\" ?\r\n                    <>\r\n                        <h3 style={{ marginLeft: \"0\" }}>Battery saver enabled</h3>\r\n                        <p>\r\n                            <b style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                setBS(\"false\");\r\n                                localStorage.setItem(\"batteryS\", \"false\");\r\n                            }}>Disable it\r\n                            </b>\r\n                            &nbsp;to keep the app active when the tab is hidden.\r\n                        </p>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <h3 style={{ marginLeft: \"0\" }}>Battery saver disabled</h3>\r\n                        <p>\r\n                            <b style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                setBS(\"true\");\r\n                                localStorage.setItem(\"batteryS\", \"true\");\r\n                            }}>Enable it\r\n                            </b>\r\n                            &nbsp;to make the app inactive when the tab is hidden.\r\n                        </p>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            throwsError: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return {\r\n            throwsError: true\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error);\r\n        console.log(info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.throwsError) {\r\n            return (\r\n                <></>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useWindowDimensions from \"../helpers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst LandingPage = () => {\r\n\r\n    const [y, setY] = useState(null);\r\n\r\n    const box = React.createRef();\r\n\r\n    useEffect(() => {\r\n        if (!box || isMobile) return;\r\n\r\n        const pos = box.current?.offsetTop;\r\n        const height = box.current?.offsetHeight;\r\n\r\n\r\n        if (y > pos && y < pos + height) {\r\n            const sliderPos = Math.round((y - pos) / height * 100);\r\n            localStorage.setItem('height', String(sliderPos));\r\n        }\r\n\r\n    }, [y]);\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    const checkWidth = width > 800;\r\n    const checkWidth2 = width < 2250;\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') !== String(100 - value)) {\r\n            localStorage.setItem('height', String(100 - value));\r\n        }\r\n    };\r\n\r\n    const CustomSlider = withStyles({\r\n        root: {\r\n            color: \"#679\",\r\n            width: 7\r\n        },\r\n        disabled: {\r\n            color: \"#679\"\r\n        },\r\n        thumb: {\r\n            height: 30,\r\n            width: 30,\r\n        },\r\n        rail: {\r\n            color: \"#679\"\r\n        },\r\n        track: {\r\n            color: \"#679\"\r\n        }\r\n    })(Slider);\r\n\r\n    return (\r\n        <>\r\n            {!isMobile &&\r\n                <div style={{\r\n                    position: \"fixed\",\r\n                    padding: 0,\r\n                    margin: 0,\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}\r\n                    onMouseMove={event => setY(event.pageY)}></div>\r\n            }\r\n            <Grid container spacing={2} align=\"center\" sx={{ height: \"100vh\", paddingX: checkWidth2 ? 0 : 50 }}>\r\n                {checkWidth &&\r\n                    <Grid item xs={checkWidth2 ? 6 : 8} justify=\"center\" sx={{ marginY: \"auto\" }}>\r\n                        <Grid container>\r\n                            <Grid item xs={11}>\r\n                                <iframe id=\"iframe1\" title=\"visualizer\" src=\"/visualizer/LandingPageVis.html\"\r\n                                    style={{ height: \"50vh\" }} />\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                                <Box sx={{ height: \"100%\" }} ref={box}>\r\n                                    <ErrorBoundary>\r\n                                        <CustomSlider\r\n                                            sx={{\r\n                                                '& input[type=\"range\"]': {\r\n                                                    WebkitAppearance: 'slider-vertical',\r\n                                                },\r\n                                            }}\r\n                                            orientation=\"vertical\"\r\n                                            defaultValue={localStorage.getItem('height') === null ? 30 : 100 - localStorage.getItem('height')}\r\n                                            aria-label=\"Height\"\r\n                                            getAriaValueText={handleHeight}\r\n                                            valueLabelDisplay=\"off\"\r\n                                            disabled={!isMobile}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                <Grid item xs={checkWidth ? checkWidth2 ? 6 : 4 : 12} justify=\"center\" sx={{ marginY: \"auto\" }}>\r\n                    <Container sx={{ maxWidth: \"650px!important\" }}>\r\n                        <Typography variant=\"h2\" component=\"div\">Microphone and Music Visualizer</Typography>\r\n                        <List sx={{ marginY: 5 }} onMouseMove={event => setY(event.pageY)}>\r\n                            <ListItem sx={{ marginY: -1 }}>\r\n                                <ListItemIcon>\r\n                                    <Typography component=\"p\">⬤</Typography>\r\n                                </ListItemIcon>\r\n                                <ListItemText>\r\n                                    <Typography variant=\"h4\" sx={{ fontWeight: 700 }}> Free </Typography>\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            <ListItem sx={{ marginY: -3 }}>\r\n                                <ListItemIcon>\r\n                                    <Typography component=\"p\">⬤</Typography>\r\n                                </ListItemIcon>\r\n                                <ListItemText>\r\n                                    <Typography variant=\"h4\" sx={{ fontWeight: 700 }}> No&nbsp;Login</Typography>\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            <ListItem sx={{ marginY: -3 }}>\r\n                                <ListItemIcon>\r\n                                    <Typography component=\"p\">⬤</Typography>\r\n                                </ListItemIcon>\r\n                                <ListItemText>\r\n                                    <Typography variant=\"h4\" sx={{ fontWeight: 700 }}> Forever </Typography>\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Container>\r\n                    <Link to=\"./visualiser\" style={{ textDecoration: \"none\" }}>\r\n                        <Button variant=\"contained\" size=\"large\" onClick={() => localStorage.setItem('height', 90)}\r\n                            onMouseMove={event => !isMobile && setY(event.pageY)}\r\n                            sx={{ marginY: 5, paddingX: 15, paddingY: 1.5, borderRadius: 15 }}>\r\n                            Open Visualizer\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default LandingPage;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport { useState } from \"react\";\r\n\r\nconst options = ['Start Rendering PNG (best performance)', 'Start Rendering webm'];\r\n\r\nconst Record = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [record, setRecord] = useState(\"false\");\r\n\r\n    const handleClick = () => {\r\n        if (selectedIndex === 0) {\r\n            setRecord(\"png\");\r\n            localStorage.setItem(\"record\", \"png\");\r\n        }\r\n        if (selectedIndex === 1) {\r\n            setRecord(\"webm\");\r\n            localStorage.setItem(\"record\", \"webm\");\r\n        }\r\n    };\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const startRecording = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <ButtonGroup variant=\"outlined\" ref={anchorRef} aria-label=\"split button\">\r\n                    <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        aria-controls={open ? 'split-button-menu' : undefined}\r\n                        aria-expanded={open ? 'true' : undefined}\r\n                        aria-label=\"select merge strategy\"\r\n                        aria-haspopup=\"menu\"\r\n                        onClick={handleToggle}\r\n                    >\r\n                        <ArrowDropDownIcon />\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <Popper\r\n                    open={open}\r\n                    anchorEl={anchorRef.current}\r\n                    role={undefined}\r\n                    transition\r\n                    disablePortal\r\n                >\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{\r\n                                transformOrigin:\r\n                                    placement === 'bottom' ? 'center top' : 'center bottom',\r\n                            }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList id=\"split-button-menu\">\r\n                                        {options.map((option, index) => (\r\n                                            <MenuItem\r\n                                                key={option}\r\n                                                selected={index === selectedIndex}\r\n                                                onClick={(event) => handleMenuItemClick(event, index)}\r\n                                            >\r\n                                                {option}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n\r\n    if (record !== \"false\") {\r\n        return (\r\n            <Button className=\"bottom-button\" variant=\"outlined\"\r\n                onClick={() => {\r\n                    setRecord(\"false\");\r\n                    localStorage.setItem(\"record\", \"false\");\r\n                }}>End Recording</Button>\r\n        )\r\n    } else {\r\n        return startRecording();\r\n    }\r\n\r\n}\r\n\r\nexport default Record;","import React, { useState } from \"react\"\r\nimport Slider from \"@mui/material/Slider\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Record from \"./Record\";\r\n\r\n\r\nconst AudioPlayer = () => {\r\n    const [endTime, setEndTime] = useState(0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [checked, setChecked] = useState(localStorage.getItem(\"startOnZero\") === null ? false : localStorage.getItem(\"startOnZero\"));\r\n\r\n\r\n    window.addEventListener(\"storage\", () => {\r\n        if (localStorage.getItem('currentTime') !== currentTime) {\r\n            setCurrentTime(Number(localStorage.getItem('currentTime')));\r\n        }\r\n        if (localStorage.getItem('duration') !== endTime) {\r\n            setEndTime(Number(localStorage.getItem('duration')));\r\n        }\r\n    });\r\n\r\n    const isDisabled = () => {\r\n        return localStorage.getItem(\"micOrSound\") !== \"sound\";\r\n    };\r\n\r\n    const formatSmol = (num) => {\r\n        if (num < 10) {\r\n            return `0${num}`\r\n        } else if (num < 60) {\r\n            return `${num}`\r\n        }\r\n    };\r\n\r\n\r\n    const formatToTime = (sec) => {\r\n        if (sec === undefined) {\r\n            sec = 0;\r\n        }\r\n        sec = Math.floor(sec);\r\n        const min = Math.floor(sec / 60);\r\n        sec = sec % 60;\r\n        return `${formatSmol(min)}:${formatSmol(sec)}`\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        localStorage.setItem(\"changeTime\", newValue);\r\n    };\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        localStorage.setItem(\"startOnZero\", event.target.checked);\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div style={{ margin: \"0 40px 20px 40px\", paddingBottom: \"15px\", marginTop: \"-25px\" }}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs>\r\n                    <div className=\"box-shadowy\">\r\n                        <Grid container spacing={3} alignItems=\"center\">\r\n                            <Grid item>\r\n                                {formatToTime(currentTime)}\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Slider\r\n                                    className=\"time-slider\"\r\n                                    aria-label=\"Time\"\r\n                                    disabled={isDisabled()}\r\n                                    value={currentTime}\r\n                                    max={endTime}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {formatToTime(endTime)}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControlLabel control={<Checkbox color={\"primary\"} checked={checked} disabled={isDisabled()} />}\r\n                        label=\"Start on zero\" onChange={handleCheckboxChange} />\r\n                </Grid>\r\n                <Grid item xs className=\"record\">\r\n                    <Record />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AudioPlayer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import TextField from \"@mui/material/TextField\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nexport const WhiteTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            color: '#fff!important', // Text color\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: '#fff8 !important', // Semi-transparent underline\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#90caf9 !important', // Solid underline on hover\r\n        },\r\n    },\r\n})(TextField);","import { useState, useEffect } from 'react';\r\n\r\nconst getWindowDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n};\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n\r\n\r\nexport function unpackSettings(data) {\r\n\r\n    const res = data.replace(\"{\", \"\").replace(\"}\", \"\").split(\":\");\r\n\r\n    const set = res.map(r => {\r\n        if (!r.includes(\",\")) {\r\n            return `\\\"${r}\\\"`;\r\n        }\r\n        const sub = r.split(\",\");\r\n        if (sub.length === 2) {\r\n            return `\\\"${sub[0]}\\\",\\\"${sub[1]}\\\"`\r\n        } else {\r\n            return `\\\"${sub[0]},${sub[1]}\\\",\\\"${sub[2]}\\\"`\r\n        }\r\n    }).join(':');\r\n\r\n    const setting = `{${set}}`.replace(/§/g, \"#\")\r\n\r\n    const settings = JSON.parse(setting);\r\n\r\n    const range = settings.r.split(\",\").map(val => Math.round(1.04713 ** Number(val) * 10) / 10).join();\r\n\r\n    localStorage.setItem('micOrSound', settings.m);\r\n    localStorage.setItem('type', settings.t);\r\n    localStorage.setItem('vis', settings.v);\r\n    localStorage.setItem('barMultiple', settings.b);\r\n    localStorage.setItem('attack', settings.a);\r\n    localStorage.setItem('unscaledBarRange', settings.r);\r\n    localStorage.setItem('barRange', range);\r\n    localStorage.setItem('height', settings.h);\r\n    localStorage.setItem('clipping', settings.c);\r\n    localStorage.setItem('lineWeight', settings.w);\r\n    localStorage.setItem('linecolor', settings.l);\r\n    localStorage.setItem('fillcolor', settings.f);\r\n    localStorage.setItem('bcolor', settings.o);\r\n    localStorage.setItem('barMargin', settings.g);\r\n    localStorage.setItem('lineFill', settings.n);\r\n    localStorage.setItem('lineCircleSize', settings.s);\r\n    localStorage.setItem('showLineCircle', settings.i);\r\n}\r\n\r\nexport function createSettings() {\r\n    const settings = {\r\n        \"m\": localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'),\r\n        \"t\": localStorage.getItem('type') === null ? \"bar\" : localStorage.getItem('type'),\r\n        \"v\": localStorage.getItem('vis') === null ? \"bars\" : localStorage.getItem('vis'),\r\n        \"b\": localStorage.getItem('barMultiple') === null ? \"9\" : localStorage.getItem('barMultiple'),\r\n        \"a\": localStorage.getItem('attack') === null ? \"0.9\" : localStorage.getItem('attack'),\r\n        \"r\": localStorage.getItem('unscaledBarRange') === null ? \"0,50\" : localStorage.getItem('unscaledBarRange'),\r\n        \"h\": localStorage.getItem('height') === null ? \"90\" : localStorage.getItem('height'),\r\n        \"c\": localStorage.getItem('clipping') === null ? \"100\" : localStorage.getItem('clipping'),\r\n        \"w\": localStorage.getItem('lineWeight') === null ? \"1\" : localStorage.getItem('lineWeight'),\r\n        \"l\": localStorage.getItem('linecolor') === null ? \"#fff\" : localStorage.getItem('linecolor'),\r\n        \"f\": localStorage.getItem('fillcolor') === null ? \"#fff\" : localStorage.getItem('fillcolor'),\r\n        \"o\": localStorage.getItem('bcolor') === null ? \"#000\" : localStorage.getItem('bcolor'),\r\n        \"g\": localStorage.getItem('barMargin') === null ? \"5\" : localStorage.getItem('barMargin'),\r\n        \"n\": localStorage.getItem('lineFill') === null ? \"false\" : localStorage.getItem('lineFill'),\r\n        \"s\": localStorage.getItem('lineCircleSize') === null ? \"50\" : localStorage.getItem('lineCircleSize'),\r\n        \"i\": localStorage.getItem('showLineCircle') === null ? \"false\" : localStorage.getItem('showLineCircle'),\r\n    }\r\n\r\n    return JSON.stringify(settings).replace(/\"/g, '').replace(/#/g, \"§\");\r\n}"],"sourceRoot":""}