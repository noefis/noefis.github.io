{"version":3,"sources":["App.js","components/BackgroundColor.js","components/LineColor.js","components/BarType.js","components/LineType.js","components/BarColor.js","components/MusicSelect.js","components/SwitchMicMusic.js","components/Datapoints.js","components/SoundRange.js","components/Height.js","components/BarMargin.js","components/LineWeight.js","components/LineFill.js","components/LineCircleSize.js","components/LineCircleShow.js","components/Selection.js","reportWebVitals.js","index.js"],"names":["App","useState","reload","setReload","global","refreshCanvas","theme","createMuiTheme","palette","type","className","id","variant","style","marginBottom","onClick","href","target","localStorage","getItem","URL","revokeObjectURL","clear","src","title","BackgroundColor","classes","color","formControl","shrink","marginTop","name","defaultValue","onChange","undefined","setItem","LineColor","BarType","React","diagram","setDiagram","labelId","value","event","displayEmpty","selectEmpty","LineType","FillColor","vis","MusicSelect","fileName","setFileName","micOrSound","Input","styled","display","htmlFor","float","e","file","files","startsWith","createObjectURL","console","log","manageChange","component","SwitchMicMusic","setMicOrSound","Datapoints","FormControl","InputLabel","Slider","getAriaValueText","valueLabelDisplay","step","marks","label","min","max","SoundRange","first","Number","split","last","setValue","newValue","Height","BarMargin","margin","setMargin","TextField","parseInt","LineWeight","lWeight","setLWeight","LineFill","checked","setChecked","FormControlLabel","control","Checkbox","LineCircleSize","lCircleSize","setLCircleSize","LineCircleShow","useStyles","makeStyles","spacing","minWidth","Selection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05d8ec03.chunk.js","sourcesContent":["import {useState} from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport Button from '@material-ui/core/Button';\n\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport MusicSelect from \"./components/MusicSelect\";\nimport SwitchMicMusic from \"./components/SwitchMicMusic\";\n\nfunction App() {\n    const [reload, setReload] = useState(0);\n\n    global.refreshCanvas = () => {\n        setReload(reload + 1);\n    };\n\n    const theme = createMuiTheme({\n        palette: {\n            type: 'dark',\n        },\n    });\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n                <Selection key={reload}/>\n                <div id=\"full-screen\">\n                    <p>Info: Press \"Reload Canvas\" to see your changes </p>\n                    <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                            onClick={() => setReload(reload + 1)}>reload\n                        Canvas</Button> &nbsp;\n                    <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}}\n                            href=\"/visualizer\" target=\"_blank\"> Open\n                        Visualizer in\n                        Fullscreen</Button> &nbsp;\n                    <Button className=\"bottom-button\" variant=\"outlined\" style={{marginBottom: \"20px\"}} onClick={() => {\n                        setReload(reload + 1);\n                        if (localStorage.getItem('musicData') !== null) {\n                            URL.revokeObjectURL(localStorage.getItem('musicData'))\n                        }\n                        localStorage.clear();\n                    }}> Reset Visualizer</Button>\n                    <MusicSelect key={\"m\" + reload}/>\n                    <SwitchMicMusic key={\"s\" + reload}/>\n                </div>\n            </ThemeProvider>\n            <iframe key={reload} src=\"/visualizer\" title={reload}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst BackgroundColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('bcolor') === null ? '#000000' : localStorage.getItem('bcolor'));\r\n\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('bcolor') !== color) {\r\n            localStorage.setItem('bcolor', color);\r\n        }\r\n        if (color === undefined) {\r\n            global.refreshCanvas();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Background Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default BackgroundColor;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst LineColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('linecolor') === null ? '#ffffff' : localStorage.getItem('linecolor'));\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('linecolor') !== color) {\r\n            localStorage.setItem('linecolor', color);\r\n        }\r\n        if (color === undefined) {\r\n            global.refreshCanvas();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Line Color\r\n            </InputLabel>\r\n            <ColorPicker style={{marginTop: \"18px\"}}\r\n                         name='color'\r\n                         defaultValue={color}\r\n                // value={this.state.color} - for controlled component\r\n\r\n                         onChange={setColor}\r\n\r\n            />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineColor;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst BarType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(localStorage.getItem('vis') === null || localStorage.getItem('vis') === \"bars\" ? \"\" : localStorage.getItem('vis'));\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"bar\");\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"bars\");\r\n                break;\r\n            case \"doubleBars\":\r\n                localStorage.setItem('vis', \"doubleBars\");\r\n                break;\r\n            case \"sidebars\":\r\n                localStorage.setItem('vis', \"sidebars\");\r\n                break;\r\n            case \"bar_circle\":\r\n                localStorage.setItem('vis', \"bar_circle\");\r\n                break;\r\n            case \"multiColor\":\r\n                localStorage.setItem('vis', \"multiColor\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"bars\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Bar Diagrams\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Bars</MenuItem>\r\n                <MenuItem value={\"doubleBars\"}>Double Bars</MenuItem>\r\n                <MenuItem value={\"sidebars\"}>Sidebars</MenuItem>\r\n                <MenuItem value={\"bar_circle\"}>Circle</MenuItem>\r\n                <MenuItem value={\"multiColor\"}>Multi Color</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default BarType;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst LineType = (classes) => {\r\n    const [diagram, setDiagram] = React.useState(getLS);\r\n\r\n    function getLS() {\r\n        if (localStorage.getItem('vis') === null) {\r\n            return \"none\";\r\n        } else if (localStorage.getItem('vis') === \"line\") {\r\n            return \"\";\r\n        } else {\r\n            return localStorage.getItem('vis');\r\n        }\r\n\r\n    }\r\n\r\n    const handleDiagram = (event) => {\r\n        setDiagram(event.target.value);\r\n        localStorage.setItem('type', \"line\");\r\n        switch (event.target.value) {\r\n            case \"\":\r\n                localStorage.setItem('vis', \"line\");\r\n                break;\r\n            case \"line_circle\":\r\n                localStorage.setItem('vis', \"line_circle\");\r\n                break;\r\n            case \"colorful_circle\":\r\n                localStorage.setItem('vis', \"colorful_circle\");\r\n                break;\r\n            default:\r\n                localStorage.setItem('vis', \"line\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Line Diagrams\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                id=\"demo-simple-select-placeholder-label\"\r\n                value={diagram}\r\n                onChange={handleDiagram}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n            >\r\n                <MenuItem value={\"\"}>Line</MenuItem>\r\n                <MenuItem value={\"line_circle\"}>Circle</MenuItem>\r\n                <MenuItem value={\"colorful_circle\"}>Colorful Circle</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default LineType;","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n\r\nconst FillColor = (classes) => {\r\n\r\n    let color = (localStorage.getItem('fillcolor') === null ? '#ffffff' : localStorage.getItem('fillcolor'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const setColor = (color) => {\r\n        if (color !== undefined && localStorage.getItem('fillcolor') !== color) {\r\n            localStorage.setItem('fillcolor', color);\r\n        }\r\n        if (color === undefined) {\r\n            global.refreshCanvas();\r\n        }\r\n    };\r\n    if (vis === 'multiColor' || vis === 'colorful_circle') {\r\n        return (<></>);\r\n    } else {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                    Fill Color\r\n                </InputLabel>\r\n                <ColorPicker style={{marginTop: \"18px\"}}\r\n                             name='color'\r\n                             defaultValue={color}\r\n                    // value={this.state.color} - for controlled component\r\n\r\n                             onChange={setColor}\r\n\r\n                />\r\n            </FormControl>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FillColor;","import React, {useState} from 'react'\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {styled} from '@material-ui/core/styles';\r\n\r\n\r\nconst MusicSelect = () => {\r\n    const [fileName, setFileName] = useState(localStorage.getItem('musicName') === null ? \"\" : localStorage.getItem('musicName'));\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const manageChange = (e) => {\r\n        let file = e.target.files[0];\r\n        if (file.type && !file.type.startsWith('audio/')) {\r\n            console.log('File is not an audio file.', file.type, file);\r\n            return;\r\n        }\r\n        setFileName(file.name);\r\n        if(localStorage.getItem('musicData') !== null){\r\n            URL.revokeObjectURL(localStorage.getItem('musicData'));\r\n        }\r\n        localStorage.setItem('musicData', URL.createObjectURL(file));\r\n        localStorage.setItem('musicName', file.name);\r\n        localStorage.setItem('micOrSound', 'sound');\r\n        global.refreshCanvas();\r\n    };\r\n\r\n\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor=\"contained-button-file\" style={{float: \"right\", marginBottom: \"20px\"}}>\r\n                <span className=\"music-text\">{micOrSound===\"sound\"?fileName:''}</span>\r\n                <Input id=\"contained-button-file\" type=\"file\"\r\n                       onChange={e => manageChange(e)}/>\r\n                <Button className=\"bottom-button\" variant=\"outlined\" component=\"span\">\r\n                    Select Song\r\n                </Button>\r\n            </label>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default MusicSelect;","import React, {useState} from 'react'\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {styled} from '@material-ui/core/styles';\r\n\r\n\r\nconst SwitchMicMusic = () => {\r\n    const [micOrSound, setMicOrSound] = useState(localStorage.getItem('micOrSound') === null ? \"mic\" : localStorage.getItem('micOrSound'));\r\n\r\n    const changeInput = () => {\r\n        if (micOrSound === \"mic\") {\r\n            setMicOrSound(\"sound\");\r\n            localStorage.setItem('micOrSound', \"sound\");\r\n        } else {\r\n            setMicOrSound(\"mic\");\r\n            localStorage.setItem('micOrSound', \"mic\");\r\n        }\r\n        global.refreshCanvas();\r\n    };\r\n    if (micOrSound === \"sound\") {\r\n        return (\r\n\r\n            <label style={{float: \"right\"}}>\r\n                {micOrSound === \"sound\" &&\r\n                <span className=\"music-text\">Info: Press on the Canvas to Play/Pause</span>}\r\n                <Button className=\"bottom-button\" variant=\"outlined\"\r\n                        component=\"span\" onClick={changeInput}>\r\n                    Switch back to Microphone Input\r\n                </Button>\r\n            </label>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default SwitchMicMusic;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Datapoints = (classes) => {\r\n\r\n\r\n    const handleBarMultiple = (value) => {\r\n        if (localStorage.getItem('barMultiple') != value) {\r\n            localStorage.setItem('barMultiple', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 5,\r\n            label: '2^5 bars',\r\n        },\r\n        {\r\n            value: 8,\r\n            label: '2^8 bars',\r\n        },\r\n        {\r\n            value: 12,\r\n            label: '2^12 bars',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Amount of Datapoints\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleBarMultiple}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={5}\r\n                    max={14}\r\n                    defaultValue={localStorage.getItem('barMultiple') === null ? 9 : localStorage.getItem('barMultiple')}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Datapoints;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst SoundRange = (classes) => {\r\n    const first = localStorage.getItem('barRange') === null ? 0 : Number(localStorage.getItem('barRange').split(\",\")[0]);\r\n    const last = localStorage.getItem('barRange') === null ? 100 : Number(localStorage.getItem('barRange').split(\",\")[1]);\r\n\r\n    const [value, setValue] = React.useState([first, last]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        if (localStorage.getItem('barRange') != value) {\r\n            localStorage.setItem('barRange', value);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Range\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    marks={marks}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default SoundRange;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nconst Height = (classes) => {\r\n\r\n\r\n    const handleHeight = (value) => {\r\n        if (localStorage.getItem('height') != value) {\r\n            localStorage.setItem('height', value);\r\n        }\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 100,\r\n            label: '100',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                Height\r\n            </InputLabel>\r\n            <Slider style={{marginTop: \"24px\"}}\r\n                    getAriaValueText={handleHeight}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={localStorage.getItem('height') === null ? 50 : localStorage.getItem('height')}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n\r\nexport default Height;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst BarMargin = (classes) => {\r\n\r\n    const [margin, setMargin] = useState(localStorage.getItem('barMargin') === null ? 5 : localStorage.getItem('barMargin'));\r\n    const type = localStorage.getItem('type') === null ? 'bar' : localStorage.getItem('type');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setMargin(0);\r\n                localStorage.setItem('barMargin', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setMargin(1000);\r\n                localStorage.setItem('barMargin', '1000');\r\n            } else {\r\n                setMargin(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('barMargin', '0');\r\n                } else {\r\n                    localStorage.setItem('barMargin', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setMargin(0);\r\n            localStorage.setItem('barMargin', '0');\r\n        }\r\n    };\r\n\r\n    if (type === 'bar') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <TextField type=\"number\" id=\"standard-basic\" label=\"Bar Margin\" value={margin} onChange={updateMargin}/>\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default BarMargin;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst LineWeight = (classes) => {\r\n\r\n    const [lWeight, setLWeight] = useState(localStorage.getItem('lineWeight') === null ? 1 : localStorage.getItem('lineWeight'));\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLWeight(0);\r\n                localStorage.setItem('lineWeight', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLWeight(1000);\r\n                localStorage.setItem('lineWeight', '1000');\r\n            } else {\r\n                setLWeight(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineWeight', '0');\r\n                } else {\r\n                    localStorage.setItem('lineWeight', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLWeight(0);\r\n            localStorage.setItem('lineWeight', '1');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n            <TextField type=\"number\" id=\"standard-basic\" label=\"Line Weight\" value={lWeight} onChange={updateMargin}/>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default LineWeight;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst LineFill = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('lineFill') === null ? false : 'true' === localStorage.getItem('lineFill'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bar' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('lineFill', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line' || vis === 'line_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                                  control={\r\n                                      <Checkbox\r\n                                          checked={checked}\r\n                                          onChange={handleChange}\r\n                                          name=\"checkedB\"\r\n                                          color=\"primary\"\r\n                                      />\r\n                                  }\r\n                                  label=\"Fill\"\r\n                />\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineFill;","import React, {useState} from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst LineCircleSize = (classes) => {\r\n\r\n    const [lCircleSize, setLCircleSize] = useState(localStorage.getItem('lineCircleSize') === null ? 60 : localStorage.getItem('lineCircleSize'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const updateMargin = (e) => {\r\n        try {\r\n            if (e.target.value < 0) {\r\n                setLCircleSize(0);\r\n                localStorage.setItem('lineCircleSize', '0');\r\n            } else if (e.target.value > 1000) {\r\n                setLCircleSize(1000);\r\n                localStorage.setItem('lineCircleSize', '1000');\r\n            } else {\r\n                setLCircleSize(parseInt(e.target.value));\r\n                if (e.target.value === '') {\r\n                    localStorage.setItem('lineCircleSize', '0');\r\n                } else {\r\n                    localStorage.setItem('lineCircleSize', '' + parseInt(e.target.value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            setLCircleSize(0);\r\n            localStorage.setItem('lineCircleSize', '1');\r\n        }\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <TextField type=\"number\" id=\"standard-basic\" label=\"Line CircleSize\" value={lCircleSize}\r\n                           onChange={updateMargin}/>\r\n            </FormControl>\r\n        )\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\nexport default LineCircleSize;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst LineCircleShow = (classes) => {\r\n    const [checked, setChecked] = React.useState(localStorage.getItem('showLineCircle') === null ? false : 'true' === localStorage.getItem('showLineCircle'));\r\n    const vis = localStorage.getItem('vis') === null ? 'bars' : localStorage.getItem('vis');\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        localStorage.setItem('showLineCircle', event.target.checked)\r\n    };\r\n\r\n    if (vis === 'line_circle' || vis === 'colorful_circle') {\r\n        return (\r\n            <FormControl className={\"all-form-inputs \" + classes.formControl}>\r\n                <FormControlLabel className={classes.formControl} style={{color: \"#b9b9bb\"}}\r\n                                  control={\r\n                                      <Checkbox\r\n                                          checked={checked}\r\n                                          onChange={handleChange}\r\n                                          name=\"checkedB\"\r\n                                          color=\"primary\"\r\n                                      />\r\n                                  }\r\n                                  label=\"Show Circle\"\r\n                />\r\n            </FormControl>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n};\r\n\r\n\r\nexport default LineCircleShow;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Datapoints from './Datapoints';\r\nimport BackgroundColor from './BackgroundColor';\r\nimport SoundRange from './SoundRange';\r\nimport Height from './Height';\r\nimport BarMargin from \"./BarMargin\";\r\nimport LineColor from \"./LineColor\";\r\nimport LineWeight from \"./LineWeight\";\r\nimport BarType from \"./BarType\";\r\nimport LineType from \"./LineType\";\r\nimport LineFill from \"./LineFill\";\r\nimport FillColor from \"./BarColor\";\r\nimport LineCircleSize from \"./LineCircleSize\";\r\nimport LineCircleShow from \"./LineCircleShow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Selection = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{margin: \"20px\"}}>\r\n            <div className=\"s-container\">\r\n                <BarType classes={classes}/>\r\n                <BarMargin classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <LineType classes={classes}/>\r\n                <LineFill classes={classes}/>\r\n                <LineCircleSize classes={classes}/>\r\n                <LineCircleShow classes={classes}/>\r\n            </div>\r\n            <div className=\"s-container\">\r\n                <Datapoints classes={classes}/>\r\n                <SoundRange classes={classes}/>\r\n                <Height classes={classes}/>\r\n                <LineColor classes={classes}/>\r\n                <LineWeight classes={classes}/>\r\n                <FillColor classes={classes}/>\r\n                <BackgroundColor classes={classes}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Selection;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}